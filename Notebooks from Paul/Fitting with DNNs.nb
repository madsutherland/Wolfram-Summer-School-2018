(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    255443,       4902]
NotebookOptionsPosition[    250951,       4813]
NotebookOutlinePosition[    251303,       4829]
CellTagsIndexPosition[    251260,       4826]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Fitting With DNNs", "Title",
 CellChangeTimes->{{3.739717271828146*^9, 
  3.739717283643135*^9}},ExpressionUUID->"7dcd12ee-cf7d-405e-aa2b-\
c12b75ab1a41"],

Cell["Markus van Almsick, WRI", "Text",
 CellChangeTimes->{{3.7397172872435217`*^9, 
  3.739717292714032*^9}},ExpressionUUID->"71b87c75-b15e-477f-a825-\
eec61692b7bf"],

Cell[CellGroupData[{

Cell["Creating Data", "Section",
 CellChangeTimes->{{3.7397172950148706`*^9, 
  3.73971730033615*^9}},ExpressionUUID->"75f305c0-4f65-46d2-9c82-\
c0ea2f82ebcc"],

Cell[BoxData[
 RowBox[{
  RowBox[{"coeff", "=", 
   RowBox[{"{", 
    RowBox[{"0.3", ",", 
     RowBox[{"-", "1"}], ",", "2.1", ",", "0.6", ",", "0.0", ",", "1.3", ",", 
     
     RowBox[{"-", "0.5"}], ",", "0.9"}], "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7397172009218683`*^9, 3.739717265730229*^9}, {
  3.7397175353806*^9, 3.739717540473413*^9}},
 CellLabel->
  "In[394]:=",ExpressionUUID->"d82bf695-3747-4279-be45-a11bd57cd6e1"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"trainingData", " ", "=", " ", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"Join", "[", 
     RowBox[{
      RowBox[{"RandomReal", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
        RowBox[{"{", "6", "}"}]}], "]"}], ",", 
      RowBox[{"RandomInteger", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", "1"}], "}"}], ",", 
        RowBox[{"{", "2", "}"}]}], "]"}]}], "]"}], ",", 
    RowBox[{"{", "50", "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.739717473347767*^9, 3.739717550415506*^9}, {
   3.739717695802738*^9, 3.7397177011745167`*^9}, 3.740058081716555*^9, 
   3.740058116032415*^9, 3.740060493964623*^9},
 CellLabel->
  "In[409]:=",ExpressionUUID->"e943710f-eb94-48b1-845e-baf11516c1b4"],

Cell[BoxData[
 FormBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0.9106099901053359`", "0.5305776515504732`", "0.359372683252158`", 
      "0.42104314051058944`", 
      RowBox[{"-", "0.6713112120533582`"}], 
      RowBox[{"-", "0.17155228060727312`"}], "0", "1"},
     {"0.003923304734310573`", "0.8225981760848771`", "0.19968635134489654`", 
      "0.3087307613320718`", 
      RowBox[{"-", "0.6150312311333583`"}], 
      RowBox[{"-", "0.8624659705983104`"}], "1", "0"},
     {"0.6518845831897497`", 
      RowBox[{"-", "0.26775308422515387`"}], "0.5693666548211302`", 
      RowBox[{"-", "0.29598127322005885`"}], "0.07570491546121128`", 
      RowBox[{"-", "0.6312081037827455`"}], "0", "0"},
     {"0.3851126119969406`", 
      RowBox[{"-", "0.5394135494709138`"}], 
      RowBox[{"-", "0.17254768739459614`"}], 
      RowBox[{"-", "0.18680696590680457`"}], "0.46786105756143925`", 
      RowBox[{"-", "0.5580201208828366`"}], "1", "1"},
     {
      RowBox[{"-", "0.4331061475041009`"}], "0.4648730926452247`", 
      "0.14080380588231511`", "0.6001023065419222`", 
      RowBox[{"-", "0.5798413515803937`"}], 
      RowBox[{"-", "0.5239607229582615`"}], "0", "1"},
     {"0.023230967390426738`", 
      RowBox[{"-", "0.09957949758076623`"}], 
      RowBox[{"-", "0.5036926341578405`"}], 
      RowBox[{"-", "0.950954557129402`"}], 
      RowBox[{"-", "0.9284454151735146`"}], "0.6007189292413857`", "0", "0"},
     {"0.9148097493549638`", "0.2666653127254257`", 
      RowBox[{"-", "0.6686617265499226`"}], 
      RowBox[{"-", "0.4621415117588876`"}], 
      RowBox[{"-", "0.8772109889205053`"}], "0.0693515243558176`", "0", "0"},
     {
      RowBox[{"-", "0.505387621372559`"}], 
      RowBox[{"-", "0.3218495991115091`"}], "0.3364148708183752`", 
      RowBox[{"-", "0.3144521875582864`"}], 
      RowBox[{"-", "0.9451554817498216`"}], 
      RowBox[{"-", "0.4392788425367229`"}], "0", "0"},
     {"0.06343546560108004`", "0.04850219763455099`", "0.41084302725997635`", 
      
      RowBox[{"-", "0.17214913743903804`"}], "0.1199807518153162`", 
      "0.15215595139934734`", "1", "1"},
     {"0.8378174305782169`", "0.9279490448259549`", "0.525602413205005`", 
      RowBox[{"-", "0.10103200835920711`"}], "0.9821158306381386`", 
      RowBox[{"-", "0.8019392653996413`"}], "1", "0"},
     {
      RowBox[{"-", "0.4934320166790811`"}], "0.9165978269833226`", 
      RowBox[{"-", "0.768502727254956`"}], "0.5600208283419663`", 
      "0.7023834725853524`", "0.682986938082847`", "1", "1"},
     {
      RowBox[{"-", "0.8234000002746913`"}], "0.6522536915792672`", 
      "0.3677716228036214`", 
      RowBox[{"-", "0.2520093181009728`"}], 
      RowBox[{"-", "0.9507546679306063`"}], "0.4914389113826627`", "1", "0"},
     {"0.6073422645455269`", "0.13042975169370097`", "0.5523595511375246`", 
      RowBox[{"-", "0.08080946897173424`"}], "0.39230102140552114`", 
      "0.72615578692599`", "1", "0"},
     {"0.3847004828608762`", 
      RowBox[{"-", "0.43830432769604366`"}], 
      RowBox[{"-", "0.8364605961653382`"}], "0.7758755533943833`", 
      "0.02847669591300983`", 
      RowBox[{"-", "0.26562205626104207`"}], "0", "1"},
     {"0.7350962648213191`", 
      RowBox[{"-", "0.8701000438041993`"}], "0.9685215276996582`", 
      "0.13056933290163997`", 
      RowBox[{"-", "0.23561955950198366`"}], "0.9274991639850096`", "1", 
      "0"},
     {"0.9310021019055972`", "0.2477343915215462`", 
      RowBox[{"-", "0.6148476362790296`"}], "0.06440149523067262`", 
      RowBox[{"-", "0.05481881135309541`"}], "0.09327479288339591`", "1", "0"},
     {
      RowBox[{"-", "0.6983873364682913`"}], 
      RowBox[{"-", "0.327433145397086`"}], "0.7693258766086166`", 
      RowBox[{"-", "0.5920705627100511`"}], "0.26414043627549555`", 
      RowBox[{"-", "0.292804996251554`"}], "1", "0"},
     {
      RowBox[{"-", "0.29308623775613407`"}], "0.23653944837112384`", 
      "0.6816695410138447`", 
      RowBox[{"-", "0.726106561933006`"}], "0.7261477704240709`", 
      "0.7684057290317279`", "0", "1"},
     {"0.6037624814736948`", 
      RowBox[{"-", "0.6101267909767252`"}], "0.5611211463177264`", 
      "0.06960634758816786`", 
      RowBox[{"-", "0.7577803806797387`"}], "0.12825425615595654`", "0", 
      "1"},
     {
      RowBox[{"-", "0.27779574277472374`"}], "0.5608649079233698`", 
      "0.15816698844786403`", "0.5012472075330061`", 
      RowBox[{"-", "0.18673852835172955`"}], 
      RowBox[{"-", "0.20273240171396445`"}], "0", "1"},
     {"0.6719134104345992`", 
      RowBox[{"-", "0.18144557321616261`"}], "0.6622523680270942`", 
      RowBox[{"-", "0.8216000919434161`"}], 
      RowBox[{"-", "0.5189862529178528`"}], "0.5937758312714649`", "0", "0"},
     {
      RowBox[{"-", "0.7028385561663244`"}], 
      RowBox[{"-", "0.17921241262908705`"}], "0.7702951052424645`", 
      "0.00488411870780503`", 
      RowBox[{"-", "0.7223312181612465`"}], 
      RowBox[{"-", "0.3881376915529917`"}], "0", "0"},
     {
      RowBox[{"-", "0.8724202967578574`"}], 
      RowBox[{"-", "0.820106215797876`"}], "0.8154925070934835`", 
      RowBox[{"-", "0.063257684238049`"}], 
      RowBox[{"-", "0.813283699112394`"}], "0.9064162757626515`", "0", "0"},
     {"0.19305473488086156`", "0.5103283907352552`", "0.18910579075915113`", 
      "0.8754831550643094`", 
      RowBox[{"-", "0.9414989133967087`"}], "0.6255726583543795`", "1", "1"},
     {"0.6367751452697807`", 
      RowBox[{"-", "0.5061143331800726`"}], "0.923278199854006`", 
      RowBox[{"-", "0.17097341133436705`"}], 
      RowBox[{"-", "0.7617418879691442`"}], 
      RowBox[{"-", "0.3574832054442889`"}], "1", "0"},
     {"0.5806551828163444`", "0.2377164346741747`", "0.6246055342188748`", 
      "0.27806271433316665`", "0.40773847212801995`", "0.5405779375264306`", 
      "1", "1"},
     {"0.567495223018089`", "0.5092134192113544`", 
      RowBox[{"-", "0.2932623378445869`"}], 
      RowBox[{"-", "0.724233018826125`"}], "0.37984300993756603`", 
      RowBox[{"-", "0.8832642486590929`"}], "0", "0"},
     {"0.5382375369758505`", "0.39173758511334444`", 
      RowBox[{"-", "0.8343930322207429`"}], 
      RowBox[{"-", "0.9562059877490756`"}], "0.7048698612738322`", 
      "0.345024983234417`", "0", "0"},
     {"0.487612989377733`", 
      RowBox[{"-", "0.9975625824750809`"}], "0.9910911442594239`", 
      "0.18435095643395139`", 
      RowBox[{"-", "0.8353857501185327`"}], 
      RowBox[{"-", "0.7435438888836643`"}], "0", "0"},
     {
      RowBox[{"-", "0.7317235727361981`"}], 
      RowBox[{"-", "0.9321375184559493`"}], 
      RowBox[{"-", "0.004369109903677781`"}], 
      RowBox[{"-", "0.7685372157697463`"}], "0.8393180019530617`", 
      "0.39436725776826087`", "0", "1"},
     {"0.9804215395584523`", 
      RowBox[{"-", "0.1560471764828728`"}], 
      RowBox[{"-", "0.8646568062276025`"}], "0.8858394884564844`", 
      "0.9991771715412914`", "0.7925195882172971`", "0", "0"},
     {"0.4323720878299908`", "0.9443507118361572`", 
      RowBox[{"-", "0.8030554160634047`"}], "0.970033594941972`", 
      RowBox[{"-", "0.6789628452013643`"}], "0.9067945622295683`", "1", "0"},
     {"0.9037988383546685`", "0.8453277895739042`", 
      RowBox[{"-", "0.868757755372497`"}], "0.8072047213485671`", 
      "0.20512365282585332`", 
      RowBox[{"-", "0.33671211583903604`"}], "0", "1"},
     {"0.0900746220402664`", 
      RowBox[{"-", "0.16902118677134226`"}], 
      RowBox[{"-", "0.7032356822093901`"}], "0.8566953703757343`", 
      RowBox[{"-", "0.5482972698292659`"}], "0.6868272618863056`", "1", "0"},
     {"0.554717200364558`", 
      RowBox[{"-", "0.495763234557828`"}], "0.23885851977421257`", 
      RowBox[{"-", "0.34996889680982557`"}], 
      RowBox[{"-", "0.6717491841054839`"}], "0.5711735862404499`", "1", "1"},
     {
      RowBox[{"-", "0.31116316478191264`"}], "0.4123384835550232`", 
      RowBox[{"-", "0.03584053717292646`"}], "0.3006050602903345`", 
      RowBox[{"-", "0.2750585443147422`"}], "0.40989254716477364`", "1", 
      "1"},
     {"0.17254779658365393`", 
      RowBox[{"-", "0.3141042426146101`"}], "0.6770701369900682`", 
      RowBox[{"-", "0.03628327493099759`"}], 
      RowBox[{"-", "0.9745902946003286`"}], "0.2521205244967639`", "1", "1"},
     {
      RowBox[{"-", "0.9921806240630224`"}], "0.8564312511214021`", 
      "0.9893283591740571`", "0.5640891186581749`", 
      RowBox[{"-", "0.4150822894055777`"}], "0.09457914870663364`", "0", 
      "0"},
     {"0.8618985988630392`", 
      RowBox[{"-", "0.5266354801527382`"}], 
      RowBox[{"-", "0.22665504582356455`"}], "0.26809809753844993`", 
      "0.19531498247664691`", "0.5533462449477833`", "0", "1"},
     {"0.5158736319868864`", "0.6959147851867074`", "0.6629198433645924`", 
      RowBox[{"-", "0.20977929777076376`"}], 
      RowBox[{"-", "0.957852601905846`"}], "0.2396679233869068`", "1", "0"},
     {
      RowBox[{"-", "0.6708700626428792`"}], "0.09021378004488101`", 
      "0.5579780298068484`", 
      RowBox[{"-", "0.2446144389997844`"}], "0.06785297467534113`", 
      "0.9021680003335923`", "0", "0"},
     {
      RowBox[{"-", "0.8161556697193211`"}], 
      RowBox[{"-", "0.31565143734234136`"}], "0.5268639395344277`", 
      "0.9508654645826997`", "0.04878247417307113`", "0.4988179914624382`", 
      "0", "1"},
     {
      RowBox[{"-", "0.9923864824692887`"}], "0.3149416505356486`", 
      RowBox[{"-", "0.04982592271572672`"}], 
      RowBox[{"-", "0.4143341566774388`"}], 
      RowBox[{"-", "0.9646808682729753`"}], "0.543005809008136`", "1", "1"},
     {"0.2484697868384198`", 
      RowBox[{"-", "0.09365018771523292`"}], "0.522751666989195`", 
      "0.40521904302667444`", "0.13156156486831305`", 
      RowBox[{"-", "0.23479149101582175`"}], "0", "0"},
     {
      RowBox[{"-", "0.2009766977437022`"}], 
      RowBox[{"-", "0.6379288274114825`"}], "0.45687284983477205`", 
      RowBox[{"-", "0.7787858837070964`"}], "0.31520918497509465`", 
      "0.6178706881088325`", "0", "0"},
     {
      RowBox[{"-", "0.9567765682094715`"}], "0.1887893258952711`", 
      "0.39277869881463756`", 
      RowBox[{"-", "0.5966378372993666`"}], "0.17190655625692797`", 
      "0.7463670822764046`", "0", "1"},
     {"0.3728969297208953`", 
      RowBox[{"-", "0.6503248546649765`"}], 
      RowBox[{"-", "0.9159050450235746`"}], 
      RowBox[{"-", "0.9936107039211288`"}], "0.8694758728638572`", 
      RowBox[{"-", "0.6082857396427075`"}], "1", "1"},
     {"0.7071467042845989`", "0.7620227026851079`", "0.1276516213468608`", 
      "0.45051876568600946`", 
      RowBox[{"-", "0.5036999079231617`"}], "0.546269964117132`", "0", "1"},
     {"0.12198057391397787`", "0.5834087947506399`", "0.9156103121128325`", 
      "0.7120110053861755`", 
      RowBox[{"-", "0.5600899314755354`"}], 
      RowBox[{"-", "0.47213488570787954`"}], "1", "0"},
     {"0.7349775223498134`", "0.2497494696717708`", "0.8530222104254346`", 
      "0.8821487786008233`", "0.4504968240019216`", 
      RowBox[{"-", "0.3919092875715968`"}], "0", "1"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
  TraditionalForm]], "Output",
 CellChangeTimes->{{3.740060494484763*^9, 3.74006049669976*^9}},
 CellLabel->
  "Out[409]=",ExpressionUUID->"d4655b43-be4c-4d17-ab63-0174af6b86cc"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Length", "[", "trainingData", "]"}]], "Input",
 CellChangeTimes->{{3.7400605682149153`*^9, 3.740060572044775*^9}},
 CellLabel->
  "In[412]:=",ExpressionUUID->"d4ea2301-4efb-4446-8f4a-8cba79c5e346"],

Cell[BoxData["50"], "Output",
 CellChangeTimes->{3.740060572403007*^9},
 CellLabel->
  "Out[412]=",ExpressionUUID->"8d44bbd7-3577-458d-828b-b69efc0ec44c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"trainingResults", "=", 
  RowBox[{
   RowBox[{"trainingData", ".", "coeff"}], "+", 
   RowBox[{"RandomReal", "[", 
    RowBox[{
     RowBox[{"NormalDistribution", "[", 
      RowBox[{"0", ",", "0.2"}], "]"}], ",", 
     RowBox[{"Length", "[", "trainingData", "]"}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.739717552062099*^9, 3.739717594634424*^9}, {
   3.7397177040019293`*^9, 3.739717750870118*^9}, 3.740060519811186*^9},
 CellLabel->
  "In[410]:=",ExpressionUUID->"42373903-1a05-4ddf-85ab-d283c7e60db3"],

Cell[BoxData[
 FormBox[
  RowBox[{"{", 
   RowBox[{"1.1898766120774766`", ",", 
    RowBox[{"-", "1.7614113125470707`"}], ",", "0.40024627948308467`", ",", 
    RowBox[{"-", "0.12057668614404728`"}], ",", "0.5722591215905353`", ",", 
    RowBox[{"-", "0.6852084396112972`"}], ",", 
    RowBox[{"-", "1.8845125972982815`"}], ",", "0.06962174168003012`", ",", 
    "1.0976573132662197`", ",", 
    RowBox[{"-", "1.2511131550435581`"}], ",", 
    RowBox[{"-", "1.1239551905908836`"}], ",", 
    RowBox[{"-", "0.22500068740420173`"}], ",", "1.2292393525052008`", ",", 
    "0.04105519410047831`", ",", "3.9890358008502447`", ",", 
    RowBox[{"-", "1.5239051941915152`"}], ",", "0.5422635532685991`", ",", 
    "2.6832415602601873`", ",", "2.8086230104906487`", ",", 
    "0.4623398065157559`", ",", "1.8739981052676273`", ",", 
    "1.097122445518154`", ",", "3.3379780138918056`", ",", 
    "1.6351766154391811`", ",", "1.1867435338320629`", ",", 
    "2.486522696408406`", ",", 
    RowBox[{"-", "2.442177498932429`"}], ",", 
    RowBox[{"-", "1.9578654315760302`"}], ",", "2.48418978262237`", ",", 
    "1.6673485727239976`", ",", 
    RowBox[{"-", "0.057889083949143216`"}], ",", 
    RowBox[{"-", "1.1127689753680716`"}], ",", 
    RowBox[{"-", "1.5069717997531`"}], ",", 
    RowBox[{"-", "0.41464362680278893`"}], ",", "1.930916225822242`", ",", 
    "0.8219758061103541`", ",", "2.1665623990139835`", ",", 
    "1.7313146330859157`", ",", "2.0359395263545443`", ",", 
    "0.5922003823433715`", ",", "1.9417868416562787`", ",", 
    "3.4595582956963837`", ",", "0.03696898490075916`", ",", 
    "1.0503003641094903`", ",", "1.834230089706779`", ",", 
    "1.976393495987551`", ",", 
    RowBox[{"-", "1.8966339207579423`"}], ",", "1.5273671148377463`", ",", 
    "0.6568167203130337`", ",", "2.575369825334886`"}], "}"}], 
  TraditionalForm]], "Output",
 CellChangeTimes->{{3.74006052077796*^9, 3.7400605255218277`*^9}},
 CellLabel->
  "Out[410]=",ExpressionUUID->"63be8a8e-9877-486c-ae3a-985e278f71e1"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Length", "[", "trainingResults", "]"}]], "Input",
 CellChangeTimes->{{3.740060555735224*^9, 3.740060560210433*^9}},
 CellLabel->
  "In[411]:=",ExpressionUUID->"6fadab9c-4512-4250-a490-5d68a9d0e17e"],

Cell[BoxData["50"], "Output",
 CellChangeTimes->{3.7400605605513983`*^9},
 CellLabel->
  "Out[411]=",ExpressionUUID->"c8f813f3-26c2-492f-ad60-345f6e2563ef"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"testData", " ", "=", " ", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"Join", "[", 
     RowBox[{
      RowBox[{"RandomReal", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
        RowBox[{"{", "6", "}"}]}], "]"}], ",", 
      RowBox[{"RandomInteger", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", "1"}], "}"}], ",", 
        RowBox[{"{", "2", "}"}]}], "]"}]}], "]"}], ",", 
    RowBox[{"{", "20", "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.739717473347767*^9, 3.739717550415506*^9}, {
   3.739717695802738*^9, 3.739717720986071*^9}, 3.7400605790700283`*^9},
 CellLabel->
  "In[413]:=",ExpressionUUID->"c98be602-6cf5-4081-b86a-11ff0ad20319"],

Cell[BoxData[
 FormBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{"-", "0.3871060647845028`"}], "0.45860760058612193`", 
      "0.19529914337469112`", 
      RowBox[{"-", "0.25774928529464525`"}], 
      RowBox[{"-", "0.917706863225821`"}], 
      RowBox[{"-", "0.15762478294978166`"}], "0", "1"},
     {
      RowBox[{"-", "0.19106819823739674`"}], "0.14820630301702487`", 
      RowBox[{"-", "0.7102413839228836`"}], 
      RowBox[{"-", "0.38899636064953347`"}], 
      RowBox[{"-", "0.32052107885893877`"}], 
      RowBox[{"-", "0.7598920670720566`"}], "0", "1"},
     {"0.6545981449229892`", 
      RowBox[{"-", "0.5076685462570363`"}], 
      RowBox[{"-", "0.39741377462840477`"}], 
      RowBox[{"-", "0.09465448742150162`"}], 
      RowBox[{"-", "0.8712686016824467`"}], "0.7322424821314897`", "0", "0"},
     {"0.5842745984620317`", "0.09971116837243876`", "0.6990460823349989`", 
      RowBox[{"-", "0.30784322513690565`"}], 
      RowBox[{"-", "0.5428332677628736`"}], 
      RowBox[{"-", "0.8191139134589069`"}], "0", "0"},
     {
      RowBox[{"-", "0.13475577647617198`"}], "0.38878648180688113`", 
      "0.24703898186935058`", "0.6621102647658126`", 
      RowBox[{"-", "0.3049628614840083`"}], "0.9582550181602141`", "0", "1"},
     {
      RowBox[{"-", "0.7020364553351972`"}], 
      RowBox[{"-", "0.36217889459635266`"}], "0.43659533541243567`", 
      RowBox[{"-", "0.1678022218466455`"}], 
      RowBox[{"-", "0.9014016348169487`"}], 
      RowBox[{"-", "0.9262543034000239`"}], "0", "1"},
     {
      RowBox[{"-", "0.600950070766471`"}], 
      RowBox[{"-", "0.9964112547474961`"}], "0.24832657565770688`", 
      RowBox[{"-", "0.12270420875649846`"}], 
      RowBox[{"-", "0.2618536279280117`"}], 
      RowBox[{"-", "0.8243749132823761`"}], "1", "1"},
     {
      RowBox[{"-", "0.7288627115843092`"}], "0.5479781037550704`", 
      "0.8486867056252736`", 
      RowBox[{"-", "0.44661578987360473`"}], "0.9307654576409483`", 
      "0.5344677342131448`", "0", "0"},
     {"0.9045365296310446`", 
      RowBox[{"-", "0.019413010899809624`"}], 
      RowBox[{"-", "0.44784198350726534`"}], "0.6667271360491585`", 
      RowBox[{"-", "0.2889064936137329`"}], 
      RowBox[{"-", "0.14729179888899324`"}], "0", "0"},
     {"0.2867352178863145`", 
      RowBox[{"-", "0.32464070876608586`"}], "0.2760624964260847`", 
      RowBox[{"-", "0.32987156828387`"}], "0.9673506971759633`", 
      "0.1532775873291672`", "0", "1"},
     {
      RowBox[{"-", "0.14308116395969783`"}], "0.9175069242493592`", 
      "0.2992156100427086`", "0.9685177961851315`", "0.6901882739212812`", 
      RowBox[{"-", "0.784697525633292`"}], "1", "1"},
     {"0.7338706392715246`", 
      RowBox[{"-", "0.9387286075510493`"}], 
      RowBox[{"-", "0.6223773906987153`"}], "0.0927765094230315`", 
      "0.466629218529945`", 
      RowBox[{"-", "0.7380413164050283`"}], "1", "0"},
     {
      RowBox[{"-", "0.03266039201615012`"}], 
      RowBox[{"-", "0.16898394602669153`"}], 
      RowBox[{"-", "0.8754019321260524`"}], "0.2702253349669834`", 
      RowBox[{"-", "0.15565828892681166`"}], 
      RowBox[{"-", "0.4563233042356525`"}], "0", "0"},
     {
      RowBox[{"-", "0.36807809049421625`"}], "0.8248792826232481`", 
      RowBox[{"-", "0.460676843355611`"}], 
      RowBox[{"-", "0.45089953905244196`"}], 
      RowBox[{"-", "0.8157481673637221`"}], "0.39151686213731063`", "0", 
      "1"},
     {"0.0770762154317639`", 
      RowBox[{"-", "0.03528738838601475`"}], 
      RowBox[{"-", "0.7970789974910151`"}], "0.033215807402053876`", 
      "0.133824410643701`", "0.5910613527266286`", "0", "0"},
     {"0.6619275851548001`", 
      RowBox[{"-", "0.4501177950379094`"}], "0.7981923787327587`", 
      RowBox[{"-", "0.664797362676099`"}], "0.3772443194874775`", 
      "0.16695150227184508`", "1", "1"},
     {
      RowBox[{"-", "0.5547998201063162`"}], "0.95638573276957`", 
      RowBox[{"-", "0.1139213149495455`"}], "0.4706557492594161`", 
      RowBox[{"-", "0.4689418762721185`"}], 
      RowBox[{"-", "0.018333435394439768`"}], "1", "1"},
     {
      RowBox[{"-", "0.07880643807531795`"}], 
      RowBox[{"-", "0.34281957975523625`"}], 
      RowBox[{"-", "0.07798595942634101`"}], "0.5228214428978757`", 
      "0.7090408298267477`", 
      RowBox[{"-", "0.5411747413813979`"}], "0", "1"},
     {
      RowBox[{"-", "0.08225428850911154`"}], "0.37356190678178836`", 
      "0.1900237619210574`", "0.0350576379759886`", "0.6278550018715707`", 
      RowBox[{"-", "0.5170376369095049`"}], "0", "0"},
     {"0.42608950606383145`", "0.0396280377219238`", 
      RowBox[{"-", "0.5827040897113465`"}], 
      RowBox[{"-", "0.897082196033387`"}], "0.6490124213081532`", 
      "0.028186506271083545`", "0", "0"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
  TraditionalForm]], "Output",
 CellChangeTimes->{{3.740060579778352*^9, 3.740060581667199*^9}},
 CellLabel->
  "Out[413]=",ExpressionUUID->"2e75c402-eb23-421c-89c9-19ded2f71dde"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"testResults", "=", 
  RowBox[{
   RowBox[{"testData", ".", "coeff"}], "+", 
   RowBox[{"RandomReal", "[", 
    RowBox[{
     RowBox[{"NormalDistribution", "[", 
      RowBox[{"0", ",", "0.2"}], "]"}], ",", 
     RowBox[{"Length", "[", "testData", "]"}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.739717552062099*^9, 3.739717594634424*^9}, {
   3.7397177040019293`*^9, 3.739717748503187*^9}, 3.740060588918337*^9},
 CellLabel->
  "In[415]:=",ExpressionUUID->"6067c29e-c338-4d62-8e91-f2aa31a7da0b"],

Cell[BoxData[
 FormBox[
  RowBox[{"{", 
   RowBox[{"0.5833146210150476`", ",", 
    RowBox[{"-", "1.9564790191873977`"}], ",", "0.7570958245729198`", ",", 
    "0.42153033684605223`", ",", "2.9438248406801453`", ",", 
    "0.5138866672555906`", ",", "0.6518200818282542`", ",", 
    "1.3413100360088892`", ",", 
    RowBox[{"-", "0.8227214755792234`"}], ",", "2.1190959187067233`", ",", 
    RowBox[{"-", "0.5197346377849884`"}], ",", 
    RowBox[{"-", "1.7898538573933664`"}], ",", 
    RowBox[{"-", "2.0711112609517315`"}], ",", 
    RowBox[{"-", "0.5232046137608022`"}], ",", 
    RowBox[{"-", "0.92928392845405`"}], ",", "2.8299403932317606`", ",", 
    RowBox[{"-", "0.9080599099250319`"}], ",", "0.4286994397152936`", ",", 
    RowBox[{"-", "0.3493978561895925`"}], ",", 
    RowBox[{"-", "1.565765169512045`"}]}], "}"}], TraditionalForm]], "Output",\

 CellChangeTimes->{{3.740060590058509*^9, 3.740060598300189*^9}},
 CellLabel->
  "Out[415]=",ExpressionUUID->"1eb10013-b30b-4548-9e2a-fcb84af08a16"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Length", "[", "testData", "]"}]], "Input",
 CellChangeTimes->{{3.740060600273403*^9, 3.7400606050424643`*^9}},
 CellLabel->
  "In[416]:=",ExpressionUUID->"fbc60357-5a61-4b76-949a-9a2370bd9612"],

Cell[BoxData["20"], "Output",
 CellChangeTimes->{3.7400606056335382`*^9},
 CellLabel->
  "Out[416]=",ExpressionUUID->"06261399-42e0-4e8b-9a4e-c786abbd72a9"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Length", "[", "testResults", "]"}]], "Input",
 CellChangeTimes->{{3.740060606448338*^9, 3.74006061104102*^9}},
 CellLabel->
  "In[417]:=",ExpressionUUID->"3bc92a25-4760-4be2-b94d-ad58a15ba307"],

Cell[BoxData["20"], "Output",
 CellChangeTimes->{3.740060611424163*^9},
 CellLabel->
  "Out[417]=",ExpressionUUID->"2db772d5-381d-4888-9e4b-8fbde68913b8"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Predict", "Section",
 CellChangeTimes->{{3.7397176223262377`*^9, 3.739717629954794*^9}, {
  3.73971809182152*^9, 
  3.739718093056931*^9}},ExpressionUUID->"52a84126-f87a-4cf9-9a93-\
0bda75b7449c"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"p", "=", 
  RowBox[{"Predict", "[", 
   RowBox[{
    RowBox[{"Thread", "[", 
     RowBox[{"trainingData", "\[Rule]", "trainingResults"}], "]"}], ",", 
    RowBox[{"Method", "\[Rule]", "\"\<LinearRegression\>\""}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.7397176315254803`*^9, 3.739717672195689*^9}, {
  3.7397177591274347`*^9, 3.7397177631548777`*^9}},
 CellLabel->
  "In[400]:=",ExpressionUUID->"844a9deb-aa60-4fec-b78d-83d2c870a50f"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["PredictorFunction",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    
    TemplateBox[{PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource[
               "FEBitmaps", "SquarePlusIconMedium"]], 
              ButtonFunction :> (Typeset`open$$ = True), Appearance -> None, 
              Evaluator -> Automatic, Method -> "Preemptive"], 
             Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 3.5 CurrentValue["FontCapHeight"]/
                AbsoluteCurrentValue[Magnification]}]], 
            GraphicsBox[{{}, {{}, {
                PointSize[0.125], 
                GrayLevel[0.55], 
                
                PointBox[{{-1, 1.5}, {0, 2.3}, {1, 0.8}, {2, 2}, {3, 1.3}, {
                  4, 4.}}]}, {
                GrayLevel[0.7], 
                AbsoluteThickness[1.5], 
                
                BSplineCurveBox[{{-1, 2}, {0, 2}, {1, 1}, {2, 1}, {4, 2}, {5, 
                 4}}]}}, {}}, Axes -> {False, False}, 
             AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
             BaseStyle -> {FontFamily -> "Arial", 
               AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
             Frame -> {{True, True}, {True, True}}, 
             FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
             Directive[
               Thickness[Tiny], 
               GrayLevel[0.7]], FrameTicks -> {{None, None}, {None, None}}, 
             GridLines -> {None, None}, LabelStyle -> {FontFamily -> "Arial"},
              Method -> {"ScalingFunctions" -> None}, PlotRange -> {All, All},
              PlotRangeClipping -> True, PlotRangePadding -> {{1, 1}, {1, 1}},
              Ticks -> {None, None}, Axes -> False, AspectRatio -> 1, 
             ImageSize -> 
             Dynamic[{
               Automatic, 3.5 CurrentValue["FontCapHeight"]/
                AbsoluteCurrentValue[Magnification]}], Frame -> True, 
             FrameTicks -> None, FrameStyle -> Directive[
               Opacity[0.5], 
               Thickness[Tiny], 
               RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
             GrayLevel[0.94]], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  TagBox[
                   TooltipBox[
                    TemplateBox[{"\"Mixed\"", 
                    StyleBox[
                    
                    TemplateBox[{"\" (number: \"", "8", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    TagBox[
                    RowBox[{"{", 
                    
                    RowBox[{
                    "\"Numerical\"", ",", "\"Numerical\"", ",", 
                    "\"Numerical\"", ",", "\"Numerical\"", ",", 
                    "\"Numerical\"", ",", "\"Numerical\"", ",", "\"Boolean\"",
                     ",", "\"Boolean\""}], "}"}], Short[#, 10]& ]], 
                   Annotation[#, 
                    
                    Short[{"Numerical", "Numerical", "Numerical", "Numerical",
                     "Numerical", "Numerical", "Boolean", "Boolean"}, 10], 
                    "Tooltip"]& ], "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"LinearRegression\"", "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource[
               "FEBitmaps", "SquareMinusIconMedium"]], 
              ButtonFunction :> (Typeset`open$$ = False), Appearance -> None, 
              Evaluator -> Automatic, Method -> "Preemptive"], 
             Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 3.5 CurrentValue["FontCapHeight"]/
                AbsoluteCurrentValue[Magnification]}]], 
            GraphicsBox[{{}, {{}, {
                PointSize[0.125], 
                GrayLevel[0.55], 
                
                PointBox[{{-1, 1.5}, {0, 2.3}, {1, 0.8}, {2, 2}, {3, 1.3}, {
                  4, 4.}}]}, {
                GrayLevel[0.7], 
                AbsoluteThickness[1.5], 
                
                BSplineCurveBox[{{-1, 2}, {0, 2}, {1, 1}, {2, 1}, {4, 2}, {5, 
                 4}}]}}, {}}, Axes -> {False, False}, 
             AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
             BaseStyle -> {FontFamily -> "Arial", 
               AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
             Frame -> {{True, True}, {True, True}}, 
             FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
             Directive[
               Thickness[Tiny], 
               GrayLevel[0.7]], FrameTicks -> {{None, None}, {None, None}}, 
             GridLines -> {None, None}, LabelStyle -> {FontFamily -> "Arial"},
              Method -> {"ScalingFunctions" -> None}, PlotRange -> {All, All},
              PlotRangeClipping -> True, PlotRangePadding -> {{1, 1}, {1, 1}},
              Ticks -> {None, None}, Axes -> False, AspectRatio -> 1, 
             ImageSize -> 
             Dynamic[{
               Automatic, 3.5 CurrentValue["FontCapHeight"]/
                AbsoluteCurrentValue[Magnification]}], Frame -> True, 
             FrameTicks -> None, FrameStyle -> Directive[
               Opacity[0.5], 
               Thickness[Tiny], 
               RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
             GrayLevel[0.94]], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  TagBox[
                   TooltipBox[
                    TemplateBox[{"\"Mixed\"", 
                    StyleBox[
                    
                    TemplateBox[{"\" (number: \"", "8", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    TagBox[
                    RowBox[{"{", 
                    
                    RowBox[{
                    "\"Numerical\"", ",", "\"Numerical\"", ",", 
                    "\"Numerical\"", ",", "\"Numerical\"", ",", 
                    "\"Numerical\"", ",", "\"Numerical\"", ",", "\"Boolean\"",
                     ",", "\"Boolean\""}], "}"}], Short[#, 10]& ]], 
                   Annotation[#, 
                    
                    Short[{"Numerical", "Numerical", "Numerical", "Numerical",
                     "Numerical", "Numerical", "Boolean", "Boolean"}, 10], 
                    "Tooltip"]& ], "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"LinearRegression\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox[
                 "\"Number of training examples: \"", 
                  "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                 TagBox["50", "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  PredictorFunction[
   Association[
   "ExampleNumber" -> 50, "Input" -> 
    Association["Preprocessor" -> MachineLearning`MLProcessor["ToMLDataset", 
        Association[
        "Input" -> Association[
          "f1" -> Association["Type" -> "Numerical"], "f2" -> 
           Association["Type" -> "Numerical"], "f3" -> 
           Association["Type" -> "Numerical"], "f4" -> 
           Association["Type" -> "Numerical"], "f5" -> 
           Association["Type" -> "Numerical"], "f6" -> 
           Association["Type" -> "Numerical"], "f7" -> 
           Association["Type" -> "Boolean"], "f8" -> 
           Association["Type" -> "Boolean"]], "Output" -> 
         Association[
          "f1" -> Association["Type" -> "Numerical", "Weight" -> 1], "f2" -> 
           Association["Type" -> "Numerical", "Weight" -> 1], "f3" -> 
           Association["Type" -> "Numerical", "Weight" -> 1], "f4" -> 
           Association["Type" -> "Numerical", "Weight" -> 1], "f5" -> 
           Association["Type" -> "Numerical", "Weight" -> 1], "f6" -> 
           Association["Type" -> "Numerical", "Weight" -> 1], "f7" -> 
           Association["Type" -> "Boolean", "Weight" -> 1], "f8" -> 
           Association["Type" -> "Boolean", "Weight" -> 1]], "Preprocessor" -> 
         MachineLearning`MLProcessor["Sequence", 
           Association["Processors" -> {
              MachineLearning`MLProcessor["Transpose", 
               Association["FeatureNumber" -> 8]], 
              MachineLearning`MLProcessor["WrapMLDataset", 
               Association[
               "FeatureTypes" -> {
                 "Numerical", "Numerical", "Numerical", "Numerical", 
                  "Numerical", "Numerical", "Boolean", "Boolean"}, 
                "FeatureKeys" -> {
                 "f1", "f2", "f3", "f4", "f5", "f6", "f7", "f8"}, 
                "FeatureWeights" -> Automatic, "ExampleWeights" -> Automatic, 
                "RawExample" -> Missing["KeyAbsent", "RawExample"]]]}]], 
         "ScalarFeature" -> False, "Invertibility" -> "Perfect", "Missing" -> 
         "Allowed"]], "Processor" -> MachineLearning`MLProcessor["Sequence", 
        Association[
        "Input" -> Association[
          "f1" -> Association["Type" -> "Numerical", "Weight" -> 1], "f2" -> 
           Association["Type" -> "Numerical", "Weight" -> 1], "f3" -> 
           Association["Type" -> "Numerical", "Weight" -> 1], "f4" -> 
           Association["Type" -> "Numerical", "Weight" -> 1], "f5" -> 
           Association["Type" -> "Numerical", "Weight" -> 1], "f6" -> 
           Association["Type" -> "Numerical", "Weight" -> 1], "f7" -> 
           Association["Type" -> "Boolean", "Weight" -> 1], "f8" -> 
           Association["Type" -> "Boolean", "Weight" -> 1]], "Output" -> 
         Association[
          "((f7f8)(f1f2f3f4f5f6))" -> 
           Association["Type" -> "NumericalVector", "Weight" -> 8.]], 
         "Processors" -> {
           MachineLearning`MLProcessor["Threads", 
            Association[
            "Input" -> Association[
              "f1" -> Association["Type" -> "Numerical", "Weight" -> 1], "f2" -> 
               Association["Type" -> "Numerical", "Weight" -> 1], "f3" -> 
               Association["Type" -> "Numerical", "Weight" -> 1], "f4" -> 
               Association["Type" -> "Numerical", "Weight" -> 1], "f5" -> 
               Association["Type" -> "Numerical", "Weight" -> 1], "f6" -> 
               Association["Type" -> "Numerical", "Weight" -> 1], "f7" -> 
               Association["Type" -> "Boolean", "Weight" -> 1], "f8" -> 
               Association["Type" -> "Boolean", "Weight" -> 1]], "Output" -> 
             Association[
              "(f1f2f3f4f5f6)" -> 
               Association["Type" -> "NumericalVector", "Weight" -> 6], 
               "(f7f8)" -> 
               Association["Type" -> "BooleanVector", "Weight" -> 2]], 
             "Processors" -> {
               MachineLearning`MLProcessor["ToVector", 
                Association[
                "Invertibility" -> "Perfect", "Missing" -> "Allowed", "Input" -> 
                 Association[
                  "f1" -> Association["Type" -> "Numerical", "Weight" -> 1], 
                   "f2" -> Association["Type" -> "Numerical", "Weight" -> 1], 
                   "f3" -> Association["Type" -> "Numerical", "Weight" -> 1], 
                   "f4" -> Association["Type" -> "Numerical", "Weight" -> 1], 
                   "f5" -> Association["Type" -> "Numerical", "Weight" -> 1], 
                   "f6" -> Association["Type" -> "Numerical", "Weight" -> 1]],
                  "Output" -> 
                 Association[
                  "(f1f2f3f4f5f6)" -> 
                   Association["Type" -> "NumericalVector", "Weight" -> 6]], 
                 "Version" -> {11.3, 0}, "ID" -> 7702479604741579352]], 
               MachineLearning`MLProcessor["ToVector", 
                Association[
                "Invertibility" -> "Perfect", "Missing" -> "Allowed", "Input" -> 
                 Association[
                  "f7" -> Association["Type" -> "Boolean", "Weight" -> 1], 
                   "f8" -> Association["Type" -> "Boolean", "Weight" -> 1]], 
                 "Output" -> 
                 Association[
                  "(f7f8)" -> 
                   Association["Type" -> "BooleanVector", "Weight" -> 2]], 
                 "Version" -> {11.3, 0}, "ID" -> 3355605293894169357]]}, 
             "Invertibility" -> "Perfect", "Missing" -> "Allowed"]], 
           MachineLearning`MLProcessor["ConformBooleanVector", 
            Association[
            "Invertibility" -> "Perfect", "Missing" -> "Allowed", "Input" -> 
             Association[
              "(f7f8)" -> 
               Association["Type" -> "BooleanVector", "Weight" -> 2]], 
             "Version" -> {11.3, 0}, "ID" -> 3859453107201388839, "Output" -> 
             Association[
              "(f7f8)" -> 
               Association["Type" -> "BooleanVector", "Weight" -> 2]]]], 
           MachineLearning`MLProcessor["BooleanVectorToNumericalVector", 
            Association[
            "Invertibility" -> "Perfect", "Missing" -> "Allowed", "Input" -> 
             Association[
              "(f7f8)" -> 
               Association["Type" -> "BooleanVector", "Weight" -> 2]], 
             "Version" -> {11.3, 0}, "ID" -> 4560195258105199146, "Output" -> 
             Association[
              "(f7f8)" -> 
               Association["Type" -> "NumericalVector", "Weight" -> 2]]]], 
           MachineLearning`MLProcessor["MergeVectors", 
            Association[
            "Invertibility" -> "Perfect", "Missing" -> "Allowed", "Input" -> 
             Association[
              "(f7f8)" -> 
               Association["Type" -> "NumericalVector", "Weight" -> 2], 
               "(f1f2f3f4f5f6)" -> 
               Association["Type" -> "NumericalVector", "Weight" -> 6]], 
             "Spans" -> {
               Span[1, 2], 
               Span[3, 8]}, "Wrappers" -> {Identity, Identity}, "Output" -> 
             Association[
              "((f7f8)(f1f2f3f4f5f6))" -> 
               Association[
                "Weight" -> {1., 1., 1., 1., 1., 1., 1., 1.}, "Type" -> 
                 "NumericalVector"]], "Version" -> {11.3, 0}, "ID" -> 
             3344780077936403356]], 
           MachineLearning`MLProcessor["ImputeMissing", 
            Association[
            "Invertibility" -> "Perfect", "Missing" -> "Imputed", "Input" -> 
             Association[
              "((f7f8)(f1f2f3f4f5f6))" -> 
               Association[
                "Weight" -> {1., 1., 1., 1., 1., 1., 1., 1.}, "Type" -> 
                 "NumericalVector"]], "Imputer" -> (DimensionReducerFunction[
               Association[
               "ExampleNumber" -> 50, "Imputer" -> 
                MachineLearning`MLProcessor["ImputeMissing", 
                  Association[
                  "Invertibility" -> "Perfect", "Missing" -> "Imputed", 
                   "Input" -> 
                   Association[
                    "f1" -> Association[
                    "Type" -> "NumericalVector", "Weight" -> 1]], 
                   "Fill" -> {0.44, 0.58, 
                    0.12247111760711545`, -0.027342241874746043`, 
                    0.0016576386260721777`, -0.054532179569511084`, \
-0.012670031133230841`, 0.11136143777645618`}, "Method" -> "Naive", 
                   "VectorLength" -> 8, "Output" -> 
                   Association[
                    "f1" -> Association[
                    "Type" -> "NumericalVector", "Weight" -> 1]], "Type" -> 
                   "NumericalVector"]], "RandomImputer" -> 
                MachineLearning`MLProcessor["ImputeMissing", 
                  Association[
                  "Invertibility" -> "Perfect", "Missing" -> "Imputed", 
                   "Input" -> 
                   Association[
                    "f1" -> Association[
                    "Type" -> "NumericalVector", "Weight" -> 1]], 
                   "Mean" -> {0.44, 0.58, 
                    0.12247111760711545`, -0.027342241874746043`, 
                    0.0016576386260721777`, -0.054532179569511084`, \
-0.012670031133230841`, 0.11136143777645618`}, 
                   "StandardDeviation" -> {0.4963869458396343, 
                    0.4935585071701226, 0.550207429304885, 0.5522095081736537,
                     0.6010347572363258, 0.6203895259891092, 
                    0.5834189452999756, 0.5464695776120834}, "Method" -> 
                   "NaiveSampler", "VectorLength" -> 8, "Output" -> 
                   Association[
                    "f1" -> Association[
                    "Type" -> "NumericalVector", "Weight" -> 1]], "Type" -> 
                   "NumericalVector"]], "Preprocessor" -> 
                MachineLearning`MLProcessor["ToMLDataset", 
                  Association[
                  "Input" -> 
                   Association[
                    "f1" -> Association[
                    "Type" -> "NumericalVector", "Length" -> 8]], "Output" -> 
                   Association[
                    "f1" -> Association[
                    "Type" -> "NumericalVector", "Weight" -> 1]], 
                   "Preprocessor" -> MachineLearning`MLProcessor["Sequence", 
                    Association["Processors" -> {
                    MachineLearning`MLProcessor["List"], 
                    MachineLearning`MLProcessor["WrapMLDataset", 
                    Association[
                    "FeatureTypes" -> {"NumericalVector"}, 
                    "FeatureKeys" -> {"f1"}, "FeatureWeights" -> Automatic, 
                    "ExampleWeights" -> Automatic, "RawExample" -> 
                    Missing["KeyAbsent", "RawExample"]]]}]], "ScalarFeature" -> 
                   True, "Invertibility" -> "Perfect", "Missing" -> 
                   "Allowed"]], "Processor" -> 
                MachineLearning`MLProcessor["Identity"], "Padder" -> 
                MachineLearning`MLProcessor["Identity"], "PostProcessor" -> 
                MachineLearning`MLProcessor["FromMLDataset", 
                  Association[
                  "DatasetFormat" -> Automatic, "Input" -> 
                   Association[
                    "f1" -> Association[
                    "Type" -> "NumericalVector", "Weight" -> 1]], "Output" -> 
                   Association[
                    "f1" -> Association[
                    "Type" -> "NumericalVector", "Length" -> 8]], 
                   "InversePreprocessor" -> 
                   MachineLearning`MLProcessor["Sequence", 
                    Association["Processors" -> {
                    MachineLearning`MLProcessor["List"], 
                    MachineLearning`MLProcessor["WrapMLDataset", 
                    Association[
                    "FeatureTypes" -> {"NumericalVector"}, 
                    "FeatureKeys" -> {"f1"}, "FeatureWeights" -> {1}, 
                    "ExampleWeights" -> 1]]}]], "ScalarFeature" -> True, 
                   "Invertibility" -> "Perfect", "Missing" -> "Allowed"]], 
                "Model" -> Association["Matrix" -> CompressedData["
1:eJwBEQLu/SFib1JlAgAAAAgAAAAIAAAAbSHHIdLKyj8Gt07ydKfhPwKBaJya
tKo/JOAqqHhlyb/jydb8rNffPzyxC7Gjft2/ewxRVs6frb+1VX8wH37YP9Rj
2r3rD9a/ykEnUUQGyz+he/6vPSajP2OGUx/My+K/0dyeMkGL4L/WyovnWvHX
v7ut8njFLsa/jrQu1uBwzb/0lpkZ6sTdP6vInRdYnMW/yKS0vl/HuD81iEFM
0XTVP3CP+5VYpt2/UtLiyLfo1b/sjkU2+LTev5O6BzZ6GNE/qLFVfV4N2r9q
127WgtO0v9grqwxD0dk/VhiaCMvv3T+uxBXTearRP8Y3ivUDx9y//ZGjjrAN
v7+SesfN5QnZv81oDmMpYMm/5KKUZ8FznD9WBTgryHfnv+v7NE2kyNQ/d225
au9Gwr9dJ+3fw+vZv++N9LtdlNY/C2aEFGyDtj/ofZj/WbSsP/udBsfYceQ/
mi9D6UKT0b8QTqHoE8PSP0PV8Wgj2Ka/MogB4Wwu1D9wL1Ocu87av/8t0pC+
0ti/QITLu09z4b/VVxmkkP7Jvw2Clkevjc2/wzVa8QyMpr+B1HUmvarIP70d
weGrWsQ/1DeJlq2g4r8Wf5UOcffcP6xbOulcv9U/dZNEPgEO2r9WNptTkWDZ
v41wNu29UNO/CmxMTRqA1z8O8qYYxnLJv2Oc43b0bdK/QAo34S2N3b9d0iDm

                   "], "Processor" -> 
                  MachineLearning`MLProcessor["Standardize", 
                    Association[
                    "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
                    "Input" -> 
                    Association[
                    "f1" -> Association[
                    "Type" -> "NumericalVector", "Weight" -> 1]], 
                    "Mean" -> {0.44, 0.58, 
                    0.12247111760711545`, -0.027342241874746043`, 
                    0.0016576386260721777`, -0.054532179569511084`, \
-0.012670031133230841`, 0.11136143777645618`}, 
                    "StandardDeviation" -> {0.4963869458396343, 
                    0.4935585071701226, 0.550207429304885, 0.5522095081736537,
                     0.6010347572363258, 0.6203895259891092, 
                    0.5834189452999756, 0.5464695776120834}, "Output" -> 
                    Association[
                    "f1" -> Association[
                    "Type" -> "NumericalVector", "Weight" -> 1]]]], 
                  "FinalDimension" -> 8, "Method" -> "Linear"], 
                "PerformanceGoal" -> Automatic, "Invertibility" -> 
                "Approximate", "Log" -> 
                Association[
                 "TrainingTime" -> 0.054676, "MaxTrainingMemory" -> 122544, 
                  "DataMemory" -> 3448, "FunctionMemory" -> 23032, 
                  "LanguageVersion" -> {11.3, 0}, "Date" -> 
                  DateObject[{2018, 7, 8, 13, 2, 16.564953`7.971765192785111},
                     "Instant", "Gregorian", -4.], "ProcessorCount" -> 2, 
                  "ProcessorType" -> "x86-64", "OperatingSystem" -> "MacOSX", 
                  "SystemWordLength" -> 64, "Evaluations" -> {}]]][#, 
               "ImputedVectors", PerformanceGoal -> "Quality"]& ), "Method" -> 
             "DimensionReduction", "VectorLength" -> 8, "Output" -> 
             Association[
              "((f7f8)(f1f2f3f4f5f6))" -> 
               Association["Type" -> "NumericalVector", "Weight" -> 8.]], 
             "Type" -> "NumericalVector", "Version" -> {11.3, 0}, "ID" -> 
             6746930599685287522]], 
           MachineLearning`MLProcessor["Standardize", 
            Association[
            "Invertibility" -> "Perfect", "Missing" -> "Allowed", "Input" -> 
             Association[
              "((f7f8)(f1f2f3f4f5f6))" -> 
               Association["Type" -> "NumericalVector", "Weight" -> 8.]], 
             "Mean" -> {0.44, 0.58, 
              0.12247111760711545`, -0.027342241874746043`, 
              0.0016576386260721777`, -0.054532179569511084`, \
-0.012670031133230841`, 0.11136143777645618`}, 
             "StandardDeviation" -> {0.4963869458396343, 0.4935585071701226, 
              0.550207429304885, 0.5522095081736537, 0.6010347572363258, 
              0.6203895259891092, 0.5834189452999756, 0.5464695776120834}, 
             "Output" -> 
             Association[
              "((f7f8)(f1f2f3f4f5f6))" -> 
               Association["Type" -> "NumericalVector", "Weight" -> 8.]], 
             "Version" -> {11.3, 0}, "ID" -> 1752490845919100894]]}, 
         "Invertibility" -> "Perfect", "Missing" -> "Imputed"]]], "Output" -> 
    Association["Preprocessor" -> MachineLearning`MLProcessor["ToMLDataset", 
        Association[
        "Input" -> Association["f1" -> Association["Type" -> "Numerical"]], 
         "Output" -> 
         Association[
          "f1" -> Association["Type" -> "Numerical", "Weight" -> 1]], 
         "Preprocessor" -> MachineLearning`MLProcessor["Sequence", 
           Association["Processors" -> {
              MachineLearning`MLProcessor["List"], 
              MachineLearning`MLProcessor["WrapMLDataset", 
               Association[
               "FeatureTypes" -> {"Numerical"}, "FeatureKeys" -> {"f1"}, 
                "FeatureWeights" -> Automatic, "ExampleWeights" -> Automatic, 
                "RawExample" -> Missing["KeyAbsent", "RawExample"]]]}]], 
         "ScalarFeature" -> True, "Invertibility" -> "Perfect", "Missing" -> 
         "Allowed"]], "Processor" -> MachineLearning`MLProcessor["Sequence", 
        Association[
        "Input" -> Association[
          "f1" -> Association["Type" -> "Numerical", "Weight" -> 1]], 
         "Output" -> 
         Association[
          "f1" -> Association["Type" -> "Numerical", "Weight" -> 1]], 
         "Processors" -> {
           MachineLearning`MLProcessor["ToVector", 
            Association[
            "Invertibility" -> "Perfect", "Missing" -> "Allowed", "Input" -> 
             Association[
              "f1" -> Association["Type" -> "Numerical", "Weight" -> 1]], 
             "Output" -> 
             Association[
              "f1" -> Association[
                "Type" -> "NumericalVector", "Weight" -> 1]], 
             "Version" -> {11.3, 0}, "ID" -> 226620591177916996]], 
           MachineLearning`MLProcessor["Standardize", 
            Association[
            "Invertibility" -> "Perfect", "Missing" -> "Allowed", "Input" -> 
             Association[
              "f1" -> Association[
                "Type" -> "NumericalVector", "Weight" -> 1]], 
             "Mean" -> {0.4930511269181772}, 
             "StandardDeviation" -> {1.7120847256663245`}, "Output" -> 
             Association[
              "f1" -> Association[
                "Type" -> "NumericalVector", "Weight" -> 1]], 
             "Version" -> {11.3, 0}, "ID" -> 5066674405040618180]], 
           MachineLearning`MLProcessor["FromVector", 
            Association[
            "Invertibility" -> "Perfect", "Missing" -> "Allowed", "Input" -> 
             Association[
              "f1" -> Association[
                "Type" -> "NumericalVector", "Weight" -> 1]], "Output" -> 
             Association[
              "f1" -> Association["Type" -> "Numerical", "Weight" -> 1]], 
             "Version" -> {11.3, 0}, "ID" -> 1033132177290556771]], 
           MachineLearning`MLProcessor["FirstValues", 
            Association[
            "Info" -> Association["Type" -> "Numerical", "Weight" -> 1], 
             "Key" -> "f1", "Invertibility" -> "Perfect", "Missing" -> 
             "Allowed"]]}, "Invertibility" -> "Perfect", "Missing" -> 
         "Allowed"]], "ProbabilityPostprocessor" -> Identity, 
      "InverseProcessorFunction" -> (0.4930511269181772 + 
       1.7120847256663245` #& ), 
      "ProcessorFunction" -> (-0.2879829015040638 + 0.584083243667051 #& ), 
      "Name" -> "value", 
      "Quantiles" -> {-1.996052903449344, 1.7321729844043203`}], "Prior" -> 
    Automatic, "Utility" -> (DiracDelta[#2 - #]& ), "Threshold" -> 0, 
    "PerformanceGoal" -> Automatic, "BatchProcessing" -> Automatic, "Model" -> 
    Association["MeanFunction" -> LinearLayer[
        Association[
        "Type" -> "Linear", "Arrays" -> 
         Association[
          "Weights" -> 
           RawArray["Real32",{{-0.1531057506799698, 0.25759944319725037`, 
             0.1294323205947876, -0.31107887625694275`, 0.7276895046234131, 
             0.21225012838840485`, -0.020201517269015312`, 
             0.39524611830711365`}}], "Biases" -> RawArray["Real32",{0.}]], 
         "Parameters" -> 
         Association[
          "OutputDimensions" -> {1}, "$OutputSize" -> 1, "$InputSize" -> 8, 
           "$InputDimensions" -> {8}], "Inputs" -> 
         Association[
          "Input" -> NeuralNetworks`TensorT[{8}, NeuralNetworks`RealT]], 
         "Outputs" -> 
         Association[
          "Output" -> NeuralNetworks`TensorT[{1}, NeuralNetworks`RealT]]], 
        Association["Version" -> "11.3.5"]], 
      "DistributionData" -> {NormalDistribution, 0.10805386538609339`}, 
      "Processor" -> MachineLearning`MLProcessor["Sequence", 
        Association[
        "Input" -> Association[
          "((f7f8)(f1f2f3f4f5f6))" -> 
           Association["Type" -> "NumericalVector", "Weight" -> 8.]], 
         "Output" -> 
         Association[
          "((f7f8)(f1f2f3f4f5f6))" -> 
           Association["Type" -> "NumericalVector", "Weight" -> 8.]], 
         "Processors" -> {
           MachineLearning`MLProcessor["Standardize", 
            Association[
            "Invertibility" -> "Perfect", "Missing" -> "Allowed", "Input" -> 
             Association[
              "((f7f8)(f1f2f3f4f5f6))" -> 
               Association["Type" -> "NumericalVector", "Weight" -> 8.]], 
             "Mean" -> {3.1086244689504386`*^-17, 
              1.1990408665951691`*^-16, -8.881784197001253*^-18, \
-4.440892098500626*^-18, 1.274588073973959*^-17, -4.4408920985006264`*^-17, 
              8.881784197001253*^-18, -9.103828801926284*^-17}, 
             "StandardDeviation" -> {0.9999999999999999, 1., 
              0.9999999999999999, 0.9999999999999997, 1., 1., 
              0.9999999999999999, 1.0000000000000002`}, "Output" -> 
             Association[
              "((f7f8)(f1f2f3f4f5f6))" -> 
               Association["Type" -> "NumericalVector", "Weight" -> 8.]], 
             "Version" -> {11.3, 0}, "ID" -> 484788832103453132]], 
           MachineLearning`MLProcessor["FirstValues", 
            Association[
            "Info" -> Association[
              "Type" -> "NumericalVector", "Weight" -> 8.], "Key" -> 
             "((f7f8)(f1f2f3f4f5f6))", "Invertibility" -> "Perfect", 
             "Missing" -> "Allowed"]]}, "Invertibility" -> "Perfect", 
         "Missing" -> "Allowed"]], "Method" -> "LinearRegression", "Options" -> 
      Association[
       "L1Regularization" -> 
        Association["Value" -> 0, "Options" -> Association[]], 
        "L2Regularization" -> 
        Association["Value" -> 0.1, "Options" -> Association[]], 
        "OptimizationMethod" -> 
        Association["Value" -> "NormalEquation", "Options" -> Association[]], 
        MaxIterations -> 
        Association["Value" -> 30, "Options" -> Association[]]]], 
    "TrainingInformation" -> 
    Association[
     "LossName" -> "StandardDeviation", "BestModelInformation" -> Dataset[
        Association[
        "MeanCrossEntropy" -> 
         PlusMinus[0.10536280706714204`, 0.08074992257900701], 
         "StandardDeviation" -> 
         PlusMinus[0.8062218582592731, 0.11572400929048976`], 
         "EvaluationTime" -> 0.000047124999999999993`, "TestSize" -> 110, 
         "TrainingSize" -> 40, "TrainingTime" -> 0.011137750000000002`, 
         "TrainingMemory" -> 69521.33333333334, "ModelMemory" -> 14904., 
         "ExperimentCount" -> 11, "ModelUtility" -> 0.520790933189373, 
         "MeanCrossEntropyHistory" -> {
           PlusMinus[0.017719098419425205`, 0.2274984909312668], 
           PlusMinus[0., 0.2153211895306009], 
           PlusMinus[0.02898629916867757, 0.2813773553795492], 
           PlusMinus[0., 0.27428383852899113`], 
           PlusMinus[0.20197546956328055`, 0.17039358171549232`], 
           PlusMinus[0.12444719678954475`, 0.20292835910806298`], 
           PlusMinus[0.19021650877055168`, 0.3618132817236267], 
           PlusMinus[0.313342821150962, 0.2784754329693242], 
           PlusMinus[0., 0.22414103981235356`], 
           PlusMinus[0.3154238046762437, 0.2591689630159618], 
           PlusMinus[0., 0.24059851385574665`]}, "StandardDeviationHistory" -> {
           PlusMinus[0.8029983822780923, 0.38653473441066927`], 
           PlusMinus[0.7971183068744252, 0.39295508223271375`], 
           PlusMinus[0.8034126408101498, 0.38616325813201635`], 
           PlusMinus[0.7979678178914693, 0.39223666542298335`], 
           PlusMinus[0.8130446931364402, 0.3763391037180845], 
           PlusMinus[0.8054246879138474, 0.38415138707386287`], 
           PlusMinus[0.8101701043599859, 0.37948696879550115`], 
           PlusMinus[0.819689164107362, 0.3704480806688402], 
           PlusMinus[0.7955799497515174, 0.3946367660275881], 
           PlusMinus[0.8199210055795554, 0.37016549094131673`], 
           PlusMinus[0.7990518920052326, 0.390788794237165]}, 
         "Configuration" -> {
          "LinearRegression", "L1Regularization" -> 0, "L2Regularization" -> 
           0.1, "OptimizationMethod" -> Automatic, MaxIterations -> 30}, 
         "FinalTrainingSize" -> 50], 
        TypeSystem`Struct[{
         "MeanCrossEntropy", "StandardDeviation", "EvaluationTime", 
          "TestSize", "TrainingSize", "TrainingTime", "TrainingMemory", 
          "ModelMemory", "ExperimentCount", "ModelUtility", 
          "MeanCrossEntropyHistory", "StandardDeviationHistory", 
          "Configuration", "FinalTrainingSize"}, {
         TypeSystem`AnyType, TypeSystem`AnyType, 
          TypeSystem`Atom[Real], 
          TypeSystem`Atom[Integer], 
          TypeSystem`Atom[Integer], 
          TypeSystem`Atom[Real], 
          TypeSystem`Atom[Real], 
          TypeSystem`Atom[Real], 
          TypeSystem`Atom[Integer], 
          TypeSystem`Atom[Real], 
          TypeSystem`Vector[TypeSystem`AnyType, 11], 
          TypeSystem`Vector[TypeSystem`AnyType, 11], 
          TypeSystem`Tuple[{
            TypeSystem`Atom[String], TypeSystem`AnyType, TypeSystem`AnyType, 
            TypeSystem`AnyType, TypeSystem`AnyType}], 
          TypeSystem`Atom[Integer]}], 
        Association["ID" -> 93226702647523]], "Configurations" -> Dataset[
        Association[
        Association[
          "Value" -> "LinearRegression", "Options" -> 
           Association[
            "L1Regularization" -> Association["Value" -> 0], 
             "L2Regularization" -> Association["Value" -> 0.00001], 
             "OptimizationMethod" -> Association["Value" -> Automatic], 
             MaxIterations -> Association["Value" -> 30]]] -> 
         Association["Experiments" -> {
             Association[
             "MeanCrossEntropy" -> 
              PlusMinus[1.6476194413194178`, 0.12412933483904971`], 
              "StandardDeviation" -> 
              PlusMinus[1.2818026562342337`, 0.17868305420845637`], 
              "EvaluationTime" -> 0.000100275, "TestSize" -> 40, 
              "TrainingSize" -> 10, "TrainingTime" -> 5.012768, 
              "TrainingMemory" -> 19453968, "ModelMemory" -> 14904, 
              "ExperimentCount" -> 1, "ModelUtility" -> 0.3278282664625044, 
              "MeanCrossEntropyHistory" -> {
                PlusMinus[1.6476194413194178`, 0.0877726944088676]}, 
              "StandardDeviationHistory" -> {
                PlusMinus[1.2818026562342337`, 0.12634799931392296`]}], 
             Association[
             "MeanCrossEntropy" -> 
              PlusMinus[0.11724921978118284`, 0.08477149255589649], 
              "StandardDeviation" -> 
              PlusMinus[0.8070267518677542, 0.12112010638327654`], 
              "EvaluationTime" -> 0.000038354545454545455`, "TestSize" -> 100,
               "TrainingSize" -> 40, "TrainingTime" -> 0.007897727272727275, 
              "TrainingMemory" -> 65141.09090909091, "ModelMemory" -> 14904., 
              "ExperimentCount" -> 10, "ModelUtility" -> 0.5196105130019956, 
              "MeanCrossEntropyHistory" -> {
                PlusMinus[0.023842221726751323`, 0.22693709703678017`], 
                PlusMinus[0., 0.21584701899994435`], 
                PlusMinus[0.029683933585056388`, 0.2802422391827781], 
                PlusMinus[0., 0.2738069510024778], 
                PlusMinus[0.20373155970321993`, 0.17019402981499054`], 
                PlusMinus[0.1272765469306018, 0.20365090517680542`], 
                PlusMinus[0.19084532062285436`, 0.3582952014617633], 
                PlusMinus[0.31567988919321666`, 0.2790286964959941], 
                PlusMinus[0., 0.22259012714326634`], 
                PlusMinus[0.319105398918733, 0.2582630801484399]}, 
              "StandardDeviationHistory" -> {
                PlusMinus[0.803316093611803, 0.3861979701602399], 
                PlusMinus[0.7971982694749131, 0.39286754221518844`], 
                PlusMinus[0.8034398124476858, 0.3861317924033264], 
                PlusMinus[0.7977253993814547, 0.39250442698328075`], 
                PlusMinus[0.8131949088520738, 0.37619407077075767`], 
                PlusMinus[0.8056870409757539, 0.3838875426472923], 
                PlusMinus[0.8101898085217533, 0.3794566663696728], 
                PlusMinus[0.8198194353801703, 0.3703315125141847], 
                PlusMinus[0.7957498998798146, 0.39443928970983394`], 
                PlusMinus[0.820130479375991, 0.36997142282743417`]}]}, 
           "PredictedPerformances" -> 
           Association[
            "EvaluationTime" -> 0.000038354545454545455`, "ModelMemory" -> 
             14904., "StandardDeviation" -> 
             PlusMinus[0.8070267518677542, 0.12112010638327654`], 
             "TrainingMemory" -> 65141.09090909091, "TrainingTime" -> 
             5.016716863636364], "Index" -> 1], 
         Association[
          "Value" -> "LinearRegression", "Options" -> 
           Association[
            "L1Regularization" -> Association["Value" -> 0], 
             "L2Regularization" -> Association["Value" -> 1.*^6], 
             "OptimizationMethod" -> Association["Value" -> Automatic], 
             MaxIterations -> Association["Value" -> 30]]] -> 
         Association["Experiments" -> {
             Association[
             "MeanCrossEntropy" -> 
              PlusMinus[1.9839253738851361`, 0.05795737696809504], 
              "StandardDeviation" -> 
              PlusMinus[1.82466986556227, 0.1005245088842747], 
              "EvaluationTime" -> 0.000040918181818181825`, "TestSize" -> 100,
               "TrainingSize" -> 40, "TrainingTime" -> 0.009314181818181817, 
              "TrainingMemory" -> 66457.45454545454, "ModelMemory" -> 14904., 
              "ExperimentCount" -> 10, "ModelUtility" -> 0.2341351623009099, 
              "MeanCrossEntropyHistory" -> {
                PlusMinus[2.007964999049526, 0.16018615380701323`], 
                PlusMinus[2.067108004185089, 0.17831297529765883`], 
                PlusMinus[1.9114592867820501`, 0.13613109302508475`], 
                PlusMinus[2.0640416822662986`, 0.1644407382903562], 
                PlusMinus[1.9665167324734554`, 0.14921677570880681`], 
                PlusMinus[2.0987631536588016`, 0.19051575370913298`], 
                PlusMinus[1.9735775969022487`, 0.13492838270251567`], 
                PlusMinus[1.8771159529141295`, 0.13450439801863076`], 
                PlusMinus[2.2049633012748155`, 0.18044293025507915`], 
                PlusMinus[1.8961842023071345`, 0.12861810834160275`]}, 
              "StandardDeviationHistory" -> {
                PlusMinus[1.82380665171963, 0.2573666144968318], 
                PlusMinus[1.9287568329941165`, 0.26075042907868645`], 
                PlusMinus[1.6091628518902774`, 0.27202971447067126`], 
                PlusMinus[1.9236984894627969`, 0.23438939133317138`], 
                PlusMinus[1.7394076645627745`, 0.2602427324661611], 
                PlusMinus[1.9788395613922056`, 0.26770951450474023`], 
                PlusMinus[1.754520638039315, 0.22078400431946305`], 
                PlusMinus[1.5143030849357335`, 0.3030456050833213], 
                PlusMinus[2.123063040658201, 0.20436133755764088`], 
                PlusMinus[1.5684687872162346`, 0.2657924997813031]}]}, 
           "PredictedPerformances" -> 
           Association[
            "EvaluationTime" -> 0.000040918181818181825`, "ModelMemory" -> 
             14904., "StandardDeviation" -> 
             PlusMinus[1.82466986556227, 0.1005245088842747], 
             "TrainingMemory" -> 66457.45454545454, "TrainingTime" -> 
             0.013971272727272725`], "Index" -> 2], 
         Association[
          "Value" -> "LinearRegression", "Options" -> 
           Association[
            "L1Regularization" -> Association["Value" -> 0], 
             "L2Regularization" -> Association["Value" -> 1.], 
             "OptimizationMethod" -> Association["Value" -> Automatic], 
             MaxIterations -> Association["Value" -> 30]]] -> 
         Association["Experiments" -> {
             Association[
             "MeanCrossEntropy" -> 
              PlusMinus[0.10129920228976008`, 0.07958982187714887], 
              "StandardDeviation" -> 
              PlusMinus[0.8064124639216056, 0.11564609499018415`], 
              "EvaluationTime" -> 0.000038333333333333334`, "TestSize" -> 110,
               "TrainingSize" -> 40, "TrainingTime" -> 0.008333583333333333, 
              "TrainingMemory" -> 65152., "ModelMemory" -> 14904., 
              "ExperimentCount" -> 11, "ModelUtility" -> 0.5206810574675785, 
              "MeanCrossEntropyHistory" -> {
                PlusMinus[0., 0.2326692083056567], 
                PlusMinus[0., 0.20781773994859654`], 
                PlusMinus[0.037049730738891506`, 0.2816319817293075], 
                PlusMinus[0.007315883628744136, 0.26814354428795323`], 
                PlusMinus[0.19992071011553952`, 0.17190505605113227`], 
                PlusMinus[0.1204834911857683, 0.19520762375365766`], 
                PlusMinus[0.2034115276627328, 0.37746845608606494`], 
                PlusMinus[0.2974231131427242, 0.26710262331733736`], 
                PlusMinus[0., 0.23576951285338912`], 
                PlusMinus[0.2888817957918359, 0.26185599854081704`], 
                PlusMinus[0., 0.2317673474816268]}, 
              "StandardDeviationHistory" -> {
                PlusMinus[0.8013739653885061, 0.3882947618656333], 
                PlusMinus[0.7989952572757312, 0.39085093318122843`], 
                PlusMinus[0.8038945651047079, 0.3856798029701959], 
                PlusMinus[0.8014935616098391, 0.3883852894162932], 
                PlusMinus[0.8126487976055675, 0.37673530731232996`], 
                PlusMinus[0.8045695987397321, 0.38499021308859693`], 
                PlusMinus[0.811311576180981, 0.37847138575120054`], 
                PlusMinus[0.8191272525686256, 0.370941323621965], 
                PlusMinus[0.795787565553111, 0.39443556246027606`], 
                PlusMinus[0.8187283620107226, 0.3712934256724777], 
                PlusMinus[0.7991393953249293, 0.39068228957057993`]}]}, 
           "PredictedPerformances" -> 
           Association[
            "EvaluationTime" -> 0.000038333333333333334`, "ModelMemory" -> 
             14904., "StandardDeviation" -> 
             PlusMinus[0.8064124639216056, 0.11564609499018415`], 
             "TrainingMemory" -> 65152., "TrainingTime" -> 
             0.012500375000000001`], "Index" -> 3], 
         Association[
          "Value" -> "LinearRegression", "Options" -> 
           Association[
            "L1Regularization" -> Association["Value" -> 0], 
             "L2Regularization" -> Association["Value" -> 1000.], 
             "OptimizationMethod" -> Association["Value" -> Automatic], 
             MaxIterations -> Association["Value" -> 30]]] -> 
         Association["Experiments" -> {
             Association[
             "MeanCrossEntropy" -> 
              PlusMinus[1.9485579078951432`, 0.057860197273348894`], 
              "StandardDeviation" -> 
              PlusMinus[1.772554364822783, 0.09742301046682442], 
              "EvaluationTime" -> 0.00003687272727272727, "TestSize" -> 100, 
              "TrainingSize" -> 40, "TrainingTime" -> 0.009509272727272726, 
              "TrainingMemory" -> 67402.18181818182, "ModelMemory" -> 14904., 
              "ExperimentCount" -> 10, "ModelUtility" -> 0.2410252507233116, 
              "MeanCrossEntropyHistory" -> {
                PlusMinus[1.972209037904676, 0.15745019473962907`], 
                PlusMinus[2.0398207549669367`, 0.1777337629246324], 
                PlusMinus[1.8742383287819129`, 0.13334401773167692`], 
                PlusMinus[2.0339558333856895`, 0.16335363381950715`], 
                PlusMinus[1.9320014734154027`, 0.14652898993420932`], 
                PlusMinus[2.064352682725728, 0.1886020001365372], 
                PlusMinus[1.9407203692606312`, 0.13327110119254154`], 
                PlusMinus[1.8383059968361462`, 0.13305121634436226`], 
                PlusMinus[2.173802043278813, 0.17780688560968572`], 
                PlusMinus[1.8577779255371576`, 0.12507392204007384`]}, 
              "StandardDeviationHistory" -> {
                PlusMinus[1.766876518845891, 0.24869665789208129`], 
                PlusMinus[1.8795622010156983`, 0.25019301470599553`], 
                PlusMinus[1.562043262462756, 0.2633497854694809], 
                PlusMinus[1.870802845215937, 0.22754429292690437`], 
                PlusMinus[1.689425886522327, 0.2510788110398635], 
                PlusMinus[1.9166702304458645`, 0.2589856542474094], 
                PlusMinus[1.7071063606123333`, 0.21628234854574935`], 
                PlusMinus[1.4721564337663355`, 0.294882501588393], 
                PlusMinus[2.0596011150357603`, 0.19764915112441234`], 
                PlusMinus[1.5208520671812145`, 0.2572302303826739]}]}, 
           "PredictedPerformances" -> 
           Association[
            "EvaluationTime" -> 0.00003687272727272727, "ModelMemory" -> 
             14904., "StandardDeviation" -> 
             PlusMinus[1.772554364822783, 0.09742301046682442], 
             "TrainingMemory" -> 67402.18181818182, "TrainingTime" -> 
             0.014263909090909088`], "Index" -> 4], 
         Association[
          "Value" -> "LinearRegression", "Options" -> 
           Association[
            "L1Regularization" -> Association["Value" -> 0], 
             "L2Regularization" -> Association["Value" -> 1.*^-6], 
             "OptimizationMethod" -> Association["Value" -> Automatic], 
             MaxIterations -> Association["Value" -> 30]]] -> 
         Association["Experiments" -> {
             Association[
             "MeanCrossEntropy" -> 
              PlusMinus[0.1071075123889842, 0.08078447227337004], 
              "StandardDeviation" -> 
              PlusMinus[0.8063329179705452, 0.11569076549493301`], 
              "EvaluationTime" -> 0.000037216666666666666`, "TestSize" -> 110,
               "TrainingSize" -> 40, "TrainingTime" -> 0.008991, 
              "TrainingMemory" -> 66357.99999999999, "ModelMemory" -> 14904., 
              "ExperimentCount" -> 11, "ModelUtility" -> 0.5207253829858345, 
              "MeanCrossEntropyHistory" -> {
                PlusMinus[0.023842869844919123`, 0.22693705230885333`], 
                PlusMinus[0., 0.21584706577489593`], 
                PlusMinus[0.029683955579792753`, 0.28024213786889124`], 
                PlusMinus[0., 0.27380689542689646`], 
                PlusMinus[0.2037317838706591, 0.17019400849070274`], 
                PlusMinus[0.12727681539670327`, 0.20365096273813516`], 
                PlusMinus[0.19084538759140504`, 0.358294847117581], 
                PlusMinus[0.31567996021363304`, 0.2790287042287821], 
                PlusMinus[0., 0.2225899990247879], 
                PlusMinus[0.3191057754626659, 0.25826299014993515`], 
                PlusMinus[0., 0.24128767709886315`]}, 
              "StandardDeviationHistory" -> {
                PlusMinus[0.8033161271140544, 0.3861979347625254], 
                PlusMinus[0.7971982819658981, 0.39286752841578454`], 
                PlusMinus[0.8034398133571572, 0.38613179121200253`], 
                PlusMinus[0.7977253755801734, 0.3925044533003852], 
                PlusMinus[0.8131949277512978, 0.37619405256611405`], 
                PlusMinus[0.805687065391987, 0.38388751806587723`], 
                PlusMinus[0.8101898113010381, 0.3794566625944498], 
                PlusMinus[0.8198194394689925, 0.3703315088268497], 
                PlusMinus[0.7957499187242452, 0.3944392679350484], 
                PlusMinus[0.8201305012637256, 0.3699714026151523], 
                PlusMinus[0.799108261677675, 0.39072830243454476`]}]}, 
           "PredictedPerformances" -> 
           Association[
            "EvaluationTime" -> 0.000037216666666666666`, "ModelMemory" -> 
             14904., "StandardDeviation" -> 
             PlusMinus[0.8063329179705452, 0.11569076549493301`], 
             "TrainingMemory" -> 66357.99999999999, "TrainingTime" -> 
             0.013486500000000002`], "Index" -> 5], 
         Association[
          "Value" -> "LinearRegression", "Options" -> 
           Association[
            "L1Regularization" -> Association["Value" -> 0], 
             "L2Regularization" -> Association["Value" -> 10000.], 
             "OptimizationMethod" -> Association["Value" -> Automatic], 
             MaxIterations -> Association["Value" -> 30]]] -> 
         Association["Experiments" -> {
             Association[
             "MeanCrossEntropy" -> 
              PlusMinus[1.980349831216741, 0.05794663372086756], 
              "StandardDeviation" -> 
              PlusMinus[1.8193001439526364`, 0.10020124462136842`], 
              "EvaluationTime" -> 0.00003876363636363636, "TestSize" -> 100, 
              "TrainingSize" -> 40, "TrainingTime" -> 0.011298, 
              "TrainingMemory" -> 69605.09090909091, "ModelMemory" -> 14904., 
              "ExperimentCount" -> 10, "ModelUtility" -> 0.23482692065202732`,
               "MeanCrossEntropyHistory" -> {
                PlusMinus[2.0043557055006507`, 0.15990714906160367`], 
                PlusMinus[2.0643318979010075`, 0.17825277031210585`], 
                PlusMinus[1.9076904312480125`, 0.13584505505560965`], 
                PlusMinus[2.0610072419347074`, 0.16433082400947688`], 
                PlusMinus[1.9630309665279344`, 0.14894598020661956`], 
                PlusMinus[2.095287593791006, 0.19031895050743372`], 
                PlusMinus[1.9702472780449032`, 0.13475270251820803`], 
                PlusMinus[1.8731848421036053`, 0.13435223742005464`], 
                PlusMinus[2.2018331059313856`, 0.1801792539459877], 
                PlusMinus[1.8922951096839609`, 0.12825694098702517`]}, 
              "StandardDeviationHistory" -> {
                PlusMinus[1.8179412265761867`, 0.25644615342509636`], 
                PlusMinus[1.9236998457120584`, 0.2596361358117591], 
                PlusMinus[1.6042893908187446`, 0.27110091184510837`], 
                PlusMinus[1.9182762910897952`, 0.2336652486431172], 
                PlusMinus[1.7342677096185681`, 0.25927164850568285`], 
                PlusMinus[1.9724337115329884`, 0.2667928830345088], 
                PlusMinus[1.749635487288324, 0.2202930212715686], 
                PlusMinus[1.5099576691641905`, 0.3021800696848126], 
                PlusMinus[2.1165595696858484`, 0.2036547839374268], 
                PlusMinus[1.5635355533008761`, 0.2648691265388225]}]}, 
           "PredictedPerformances" -> 
           Association[
            "EvaluationTime" -> 0.00003876363636363636, "ModelMemory" -> 
             14904., "StandardDeviation" -> 
             PlusMinus[1.8193001439526364`, 0.10020124462136842`], 
             "TrainingMemory" -> 69605.09090909091, "TrainingTime" -> 
             0.016947], "Index" -> 6], 
         Association[
          "Value" -> "LinearRegression", "Options" -> 
           Association[
            "L1Regularization" -> Association["Value" -> 0], 
             "L2Regularization" -> Association["Value" -> 10.], 
             "OptimizationMethod" -> Association["Value" -> Automatic], 
             MaxIterations -> Association["Value" -> 30]]] -> 
         Association["Experiments" -> {
             Association[
             "MeanCrossEntropy" -> 
              PlusMinus[0.705424436399764, 0.061843008383153514`], 
              "StandardDeviation" -> 
              PlusMinus[0.8788849979428148, 0.10403047586172023`], 
              "EvaluationTime" -> 0.000046781818181818186`, "TestSize" -> 100,
               "TrainingSize" -> 40, "TrainingTime" -> 0.010069181818181816`, 
              "TrainingMemory" -> 66624.72727272728, "ModelMemory" -> 14904., 
              "ExperimentCount" -> 10, "ModelUtility" -> 0.48008326450290056`,
               "MeanCrossEntropyHistory" -> {
                PlusMinus[0.6086546625113614, 0.15587008168815333`], 
                PlusMinus[0.9511250588675673, 0.16475776636948433`], 
                PlusMinus[0.5754700104838901, 0.14126729662696247`], 
                PlusMinus[0.8452777499325362, 0.13671467376027402`], 
                PlusMinus[0.6677219583461226, 0.10964711175909722`], 
                PlusMinus[0.734301452462163, 0.15900419559355977`], 
                PlusMinus[0.7722239661177643, 0.19563918445764805`], 
                PlusMinus[0.5749811944847867, 0.15793392750588264`], 
                PlusMinus[0.8119398113451655, 0.13053716126925832`], 
                PlusMinus[0.5763897177976304, 0.1376348597749951]}, 
              "StandardDeviationHistory" -> {
                PlusMinus[0.8563296077375961, 0.3417809325398877], 
                PlusMinus[0.9243251399410871, 0.30100809401074236`], 
                PlusMinus[0.8511778089101322, 0.3449846935566514], 
                PlusMinus[0.9031446158284219, 0.31183162510324436`], 
                PlusMinus[0.8660582927951886, 0.3341652563052705], 
                PlusMinus[0.8808190906735226, 0.32612864248488005`], 
                PlusMinus[0.8883323615560322, 0.32194003195830495`], 
                PlusMinus[0.85042605960882, 0.34599466401971635`], 
                PlusMinus[0.8953665723418824, 0.3160779762916435], 
                PlusMinus[0.8492577355607885, 0.3464626378122796]}]}, 
           "PredictedPerformances" -> 
           Association[
            "EvaluationTime" -> 0.000046781818181818186`, "ModelMemory" -> 
             14904., "StandardDeviation" -> 
             PlusMinus[0.8788849979428148, 0.10403047586172023`], 
             "TrainingMemory" -> 66624.72727272728, "TrainingTime" -> 
             0.015103772727272723`], "Index" -> 7], 
         Association[
          "Value" -> "LinearRegression", "Options" -> 
           Association[
            "L1Regularization" -> Association["Value" -> 0], 
             "L2Regularization" -> Association["Value" -> 0.0001], 
             "OptimizationMethod" -> Association["Value" -> Automatic], 
             MaxIterations -> Association["Value" -> 30]]] -> 
         Association["Experiments" -> {
             Association[
             "MeanCrossEntropy" -> 
              PlusMinus[0.1071056928996169, 0.08078444013358327], 
              "StandardDeviation" -> 
              PlusMinus[0.8063327950387176, 0.11569080247387709`], 
              "EvaluationTime" -> 0.00003860833333333333, "TestSize" -> 110, 
              "TrainingSize" -> 40, "TrainingTime" -> 0.007928666666666667, 
              "TrainingMemory" -> 65173.33333333333, "ModelMemory" -> 14904., 
              "ExperimentCount" -> 11, "ModelUtility" -> 0.5207254547923874, 
              "MeanCrossEntropyHistory" -> {
                PlusMinus[0.023836662522792595`, 0.22693760236298993`], 
                PlusMinus[0., 0.21584658431874773`], 
                PlusMinus[0.029683153473862856`, 0.2802433675762271], 
                PlusMinus[0., 0.2738074893760425], 
                PlusMinus[0.20372989337344896`, 0.170194207370185], 
                PlusMinus[0.1272737952615176, 0.20365026917347379`], 
                PlusMinus[0.1908445299584379, 0.358298464379141], 
                PlusMinus[0.31567754427259054`, 0.27902822449657466`], 
                PlusMinus[0., 0.22259153291913197`], 
                PlusMinus[0.3191020403285384, 0.2582639265679398], 
                PlusMinus[0., 0.2412870543206097]}, 
              "StandardDeviationHistory" -> {
                PlusMinus[0.8033158062468299, 0.3861982741393918], 
                PlusMinus[0.7971981701125732, 0.39286765170940857`], 
                PlusMinus[0.8034397801915683, 0.3861318289710455], 
                PlusMinus[0.7977256024325949, 0.3925042027795897], 
                PlusMinus[0.8131947683643316, 0.37619420620253197`], 
                PlusMinus[0.8056867907147942, 0.3838877942320485], 
                PlusMinus[0.8101897757137554, 0.37945670826915295`], 
                PlusMinus[0.8198193003801356, 0.3703316333443711], 
                PlusMinus[0.7957497294838187, 0.3944394871128543], 
                PlusMinus[0.8201302841521444, 0.36997160328158146`], 
                PlusMinus[0.7991082020212739, 0.3907283665514192]}]}, 
           "PredictedPerformances" -> 
           Association[
            "EvaluationTime" -> 0.00003860833333333333, "ModelMemory" -> 
             14904., "StandardDeviation" -> 
             PlusMinus[0.8063327950387176, 0.11569080247387709`], 
             "TrainingMemory" -> 65173.33333333333, "TrainingTime" -> 
             0.011893], "Index" -> 8], 
         Association[
          "Value" -> "LinearRegression", "Options" -> 
           Association[
            "L1Regularization" -> Association["Value" -> 0], 
             "L2Regularization" -> Association["Value" -> 0.001], 
             "OptimizationMethod" -> Association["Value" -> Automatic], 
             MaxIterations -> Association["Value" -> 30]]] -> 
         Association["Experiments" -> {
             Association[
             "MeanCrossEntropy" -> 
              PlusMinus[0.1070889380510337, 0.08078418454911857], 
              "StandardDeviation" -> 
              PlusMinus[0.8063316706215887, 0.11569114138479189`], 
              "EvaluationTime" -> 0.000041166666666666673`, "TestSize" -> 110,
               "TrainingSize" -> 40, "TrainingTime" -> 0.007938083333333332, 
              "TrainingMemory" -> 65152., "ModelMemory" -> 14904., 
              "ExperimentCount" -> 11, "ModelUtility" -> 0.520726116795555, 
              "MeanCrossEntropyHistory" -> {
                PlusMinus[0.023778688815642823`, 0.22694245495871765`], 
                PlusMinus[0., 0.21584218609618472`], 
                PlusMinus[0.029675371702672208`, 0.2802545715962445], 
                PlusMinus[0., 0.2738128923351793], 
                PlusMinus[0.20371265944600642`, 0.1701959531286445], 
                PlusMinus[0.12724607454276535`, 0.20364391431654613`], 
                PlusMinus[0.19083677569339125`, 0.35833154086975255`], 
                PlusMinus[0.3156564697455858, 0.27902406712915506`], 
                PlusMinus[0., 0.22260538305822186`], 
                PlusMinus[0.3190683873947212, 0.25827263882540824`], 
                PlusMinus[0., 0.24128116342763026`]}, 
              "StandardDeviationHistory" -> {
                PlusMinus[0.8033128093915215, 0.3862014431057399], 
                PlusMinus[0.7971971623390688, 0.3928687623124461], 
                PlusMinus[0.8034394585819343, 0.38613219348323735`], 
                PlusMinus[0.7977276395426207, 0.39250195352425427`], 
                PlusMinus[0.8131933151881289, 0.37619560658643547`], 
                PlusMinus[0.8056842691046416, 0.3838903296641002], 
                PlusMinus[0.8101894545330841, 0.37945712179268976`], 
                PlusMinus[0.8198180874854993, 0.3703327193179086], 
                PlusMinus[0.7957480192735111, 0.3944414678789298], 
                PlusMinus[0.8201283284306413, 0.36997341201047995`], 
                PlusMinus[0.7991076317982937, 0.39072897957466174`]}]}, 
           "PredictedPerformances" -> 
           Association[
            "EvaluationTime" -> 0.000041166666666666673`, "ModelMemory" -> 
             14904., "StandardDeviation" -> 
             PlusMinus[0.8063316706215887, 0.11569114138479189`], 
             "TrainingMemory" -> 65152., "TrainingTime" -> 
             0.011907124999999998`], "Index" -> 9], 
         Association[
          "Value" -> "LinearRegression", "Options" -> 
           Association[
            "L1Regularization" -> Association["Value" -> 0], 
             "L2Regularization" -> Association["Value" -> 100000.], 
             "OptimizationMethod" -> Association["Value" -> Automatic], 
             MaxIterations -> Association["Value" -> 30]]] -> 
         Association["Experiments" -> {
             Association[
             "MeanCrossEntropy" -> 
              PlusMinus[1.98359966133003, 0.05795638993454739], 
              "StandardDeviation" -> 
              PlusMinus[1.8241797662025505`, 0.10049497156189939`], 
              "EvaluationTime" -> 0.000040300000000000004`, "TestSize" -> 100,
               "TrainingSize" -> 40, "TrainingTime" -> 0.009522999999999998, 
              "TrainingMemory" -> 68045.09090909091, "ModelMemory" -> 14904., 
              "ExperimentCount" -> 10, "ModelUtility" -> 0.23419813158070676`,
               "MeanCrossEntropyHistory" -> {
                PlusMinus[2.007636265961581, 0.16016071670641033`], 
                PlusMinus[2.066854945663288, 0.17830747429605717`], 
                PlusMinus[1.9111159089376342`, 0.13610499750971217`], 
                PlusMinus[2.063765327737208, 0.16443072654083882`], 
                PlusMinus[1.9661992327218496`, 0.14919211709337343`], 
                PlusMinus[2.0984465797382645`, 0.1904977950469535], 
                PlusMinus[1.973274140192332, 0.13491230361024623`], 
                PlusMinus[1.8767577790570704`, 0.13449048916881418`], 
                PlusMinus[2.2046783494111204`, 0.18041893842994136`], 
                PlusMinus[1.8958298678386973`, 0.12858518258959345`]}, 
              "StandardDeviationHistory" -> {
                PlusMinus[1.8232713153791071`, 0.2572823597665627], 
                PlusMinus[1.9282953793444502`, 0.26064848226109655`], 
                PlusMinus[1.6087178688189512`, 0.27194462988241497`], 
                PlusMinus[1.923203867304859, 0.23432312678495965`], 
                PlusMinus[1.7389386327217633`, 0.2601538615011778], 
                PlusMinus[1.9782548889377318`, 0.2676256936785278], 
                PlusMinus[1.754074761430875, 0.22073894053919596`], 
                PlusMinus[1.5139064575071537`, 0.30296639002731174`], 
                PlusMinus[2.122469799124197, 0.20429672044075997`], 
                PlusMinus[1.5680182688681217`, 0.2657078505992742]}]}, 
           "PredictedPerformances" -> 
           Association[
            "EvaluationTime" -> 0.000040300000000000004`, "ModelMemory" -> 
             14904., "StandardDeviation" -> 
             PlusMinus[1.8241797662025505`, 0.10049497156189939`], 
             "TrainingMemory" -> 68045.09090909091, "TrainingTime" -> 
             0.014284499999999999`], "Index" -> 10], 
         Association[
          "Value" -> "LinearRegression", "Options" -> 
           Association[
            "L1Regularization" -> Association["Value" -> 0], 
             "L2Regularization" -> Association["Value" -> 100.], 
             "OptimizationMethod" -> Association["Value" -> Automatic], 
             MaxIterations -> Association["Value" -> 30]]] -> 
         Association["Experiments" -> {
             Association[
             "MeanCrossEntropy" -> 
              PlusMinus[1.6849361884477885`, 0.057827015753037544`], 
              "StandardDeviation" -> 
              PlusMinus[1.447864308564014, 0.08142941103697517], 
              "EvaluationTime" -> 0.00004175454545454545, "TestSize" -> 100, 
              "TrainingSize" -> 40, "TrainingTime" -> 0.008228818181818181, 
              "TrainingMemory" -> 65135.27272727273, "ModelMemory" -> 14904., 
              "ExperimentCount" -> 10, "ModelUtility" -> 0.29500159336164467`,
               "MeanCrossEntropyHistory" -> {
                PlusMinus[1.7027353801388485`, 0.13938146366629273`], 
                PlusMinus[1.8438632633423038`, 0.17395680889885046`], 
                PlusMinus[1.6004020461232775`, 0.11604237274615946`], 
                PlusMinus[1.8051102937827292`, 0.1556673883758098], 
                PlusMinus[1.6725433478171179`, 0.1263027167839206], 
                PlusMinus[1.8054994417807437`, 0.17661106590408424`], 
                PlusMinus[1.7000020547267138`, 0.12657843637899568`], 
                PlusMinus[1.5539698357729232`, 0.12634754814395005`], 
                PlusMinus[1.9296592939397172`, 0.1569770299549281], 
                PlusMinus[1.5756194349000703`, 0.10152572045757284`]}, 
              "StandardDeviationHistory" -> {
                PlusMinus[1.4145357151422595`, 0.21544370727991696`], 
                PlusMinus[1.5643978049320069`, 0.20219111851875055`], 
                PlusMinus[1.2783406087661489`, 0.23323171775596663`], 
                PlusMinus[1.5293136326672017`, 0.19899447116328012`], 
                PlusMinus[1.3754719924892274`, 0.2152399140185817], 
                PlusMinus[1.5300531504843093`, 0.21901874323600604`], 
                PlusMinus[1.4107125016853324`, 0.2050495377535391], 
                PlusMinus[1.2154764671382574`, 0.2628101836569297], 
                PlusMinus[1.6484000352244825`, 0.1704119205642899], 
                PlusMinus[1.2390300883845056`, 0.2319690183537878]}]}, 
           "PredictedPerformances" -> 
           Association[
            "EvaluationTime" -> 0.00004175454545454545, "ModelMemory" -> 
             14904., "StandardDeviation" -> 
             PlusMinus[1.447864308564014, 0.08142941103697517], 
             "TrainingMemory" -> 65135.27272727273, "TrainingTime" -> 
             0.012343227272727271`], "Index" -> 11], 
         Association[
          "Value" -> "LinearRegression", "Options" -> 
           Association[
            "L1Regularization" -> Association["Value" -> 0], 
             "L2Regularization" -> Association["Value" -> 0.01], 
             "OptimizationMethod" -> Association["Value" -> Automatic], 
             MaxIterations -> Association["Value" -> 30]]] -> 
         Association["Experiments" -> {
             Association[
             "MeanCrossEntropy" -> 
              PlusMinus[0.10692253841786149`, 0.08078145311811252], 
              "StandardDeviation" -> 
              PlusMinus[0.8063205442589632, 0.11569449129964522`], 
              "EvaluationTime" -> 0.000042208333333333334`, "TestSize" -> 110,
               "TrainingSize" -> 40, "TrainingTime" -> 0.009359333333333332, 
              "TrainingMemory" -> 65168., "ModelMemory" -> 14904., 
              "ExperimentCount" -> 11, "ModelUtility" -> 0.5207326806608518, 
              "MeanCrossEntropyHistory" -> {
                PlusMinus[0.023203306461146322`, 0.22699123154789963`], 
                PlusMinus[0., 0.2157979027161371], 
                PlusMinus[0.029599258421253657`, 0.2803655727735208], 
                PlusMinus[0., 0.27386568804448524`], 
                PlusMinus[0.20354184310238582`, 0.17021350703839738`], 
                PlusMinus[0.12697132987647886`, 0.20358025976139704`], 
                PlusMinus[0.19076204151047638`, 0.3586610243671817], 
                PlusMinus[0.31544189744033235`, 0.27898073599094225`], 
                PlusMinus[0., 0.22274389704909656`], 
                PlusMinus[0.31873206148768674`, 0.25835870433443814`], 
                PlusMinus[0., 0.24122211399100063`]}, 
              "StandardDeviationHistory" -> {
                PlusMinus[0.8032830564599981, 0.38623291292746], 
                PlusMinus[0.7971874146510707, 0.3928794990439463], 
                PlusMinus[0.8034363281181777, 0.38613574816389507`], 
                PlusMinus[0.7977481719781588, 0.39247928079567884`], 
                PlusMinus[0.8131788928034088, 0.37620950792182045`], 
                PlusMinus[0.8056592324401433, 0.3839155044068014], 
                PlusMinus[0.8101864167482151, 0.3794610867623705], 
                PlusMinus[0.8198057769411099, 0.37034374034919787`], 
                PlusMinus[0.7957310858434333, 0.3944610859011775], 
                PlusMinus[0.8201088242817071, 0.3699914510791372], 
                PlusMinus[0.7991020022238401, 0.39073503094754664`]}]}, 
           "PredictedPerformances" -> 
           Association[
            "EvaluationTime" -> 0.000042208333333333334`, "ModelMemory" -> 
             14904., "StandardDeviation" -> 
             PlusMinus[0.8063205442589632, 0.11569449129964522`], 
             "TrainingMemory" -> 65168., "TrainingTime" -> 0.014039], "Index" -> 
           12], Association[
          "Value" -> "LinearRegression", "Options" -> 
           Association[
            "L1Regularization" -> Association["Value" -> 0], 
             "L2Regularization" -> Association["Value" -> 0.1], 
             "OptimizationMethod" -> Association["Value" -> Automatic], 
             MaxIterations -> Association["Value" -> 30]]] -> 
         Association["Experiments" -> {
             Association[
             "MeanCrossEntropy" -> 
              PlusMinus[0.10536280706714204`, 0.08074992257900701], 
              "StandardDeviation" -> 
              PlusMinus[0.8062218582592731, 0.11572400929048976`], 
              "EvaluationTime" -> 0.000047124999999999993`, "TestSize" -> 110,
               "TrainingSize" -> 40, "TrainingTime" -> 0.011137750000000002`, 
              "TrainingMemory" -> 69521.33333333334, "ModelMemory" -> 14904., 
              "ExperimentCount" -> 11, "ModelUtility" -> 0.520790933189373, 
              "MeanCrossEntropyHistory" -> {
                PlusMinus[0.017719098419425205`, 0.2274984909312668], 
                PlusMinus[0., 0.2153211895306009], 
                PlusMinus[0.02898629916867757, 0.2813773553795492], 
                PlusMinus[0., 0.27428383852899113`], 
                PlusMinus[0.20197546956328055`, 0.17039358171549232`], 
                PlusMinus[0.12444719678954475`, 0.20292835910806298`], 
                PlusMinus[0.19021650877055168`, 0.3618132817236267], 
                PlusMinus[0.313342821150962, 0.2784754329693242], 
                PlusMinus[0., 0.22414103981235356`], 
                PlusMinus[0.3154238046762437, 0.2591689630159618], 
                PlusMinus[0., 0.24059851385574665`]}, 
              "StandardDeviationHistory" -> {
                PlusMinus[0.8029983822780923, 0.38653473441066927`], 
                PlusMinus[0.7971183068744252, 0.39295508223271375`], 
                PlusMinus[0.8034126408101498, 0.38616325813201635`], 
                PlusMinus[0.7979678178914693, 0.39223666542298335`], 
                PlusMinus[0.8130446931364402, 0.3763391037180845], 
                PlusMinus[0.8054246879138474, 0.38415138707386287`], 
                PlusMinus[0.8101701043599859, 0.37948696879550115`], 
                PlusMinus[0.819689164107362, 0.3704480806688402], 
                PlusMinus[0.7955799497515174, 0.3946367660275881], 
                PlusMinus[0.8199210055795554, 0.37016549094131673`], 
                PlusMinus[0.7990518920052326, 0.390788794237165]}]}, 
           "PredictedPerformances" -> 
           Association[
            "EvaluationTime" -> 0.000047124999999999993`, "ModelMemory" -> 
             14904., "StandardDeviation" -> 
             PlusMinus[0.8062218582592731, 0.11572400929048976`], 
             "TrainingMemory" -> 69521.33333333334, "TrainingTime" -> 
             0.016706625000000003`], "Index" -> 13]], 
        TypeSystem`Assoc[
         TypeSystem`Struct[{"Value", "Options"}, {
           TypeSystem`Atom[
            TypeSystem`Enumeration["LinearRegression"]], 
           TypeSystem`Assoc[TypeSystem`AnyType, 
            TypeSystem`Struct[{"Value"}, {TypeSystem`AnyType}], 4]}], 
         TypeSystem`Struct[{"Experiments", "PredictedPerformances", "Index"}, {
           TypeSystem`Vector[
            
            TypeSystem`Struct[{
             "MeanCrossEntropy", "StandardDeviation", "EvaluationTime", 
              "TestSize", "TrainingSize", "TrainingTime", "TrainingMemory", 
              "ModelMemory", "ExperimentCount", "ModelUtility", 
              "MeanCrossEntropyHistory", "StandardDeviationHistory"}, {
             TypeSystem`AnyType, TypeSystem`AnyType, 
              TypeSystem`Atom[Real], 
              TypeSystem`Atom[Integer], 
              TypeSystem`Atom[Integer], 
              TypeSystem`Atom[Real], 
              TypeSystem`Atom[Real], 
              TypeSystem`Atom[Real], 
              TypeSystem`Atom[Integer], 
              TypeSystem`Atom[Real], 
              TypeSystem`Vector[TypeSystem`AnyType, TypeSystem`AnyLength], 
              TypeSystem`Vector[TypeSystem`AnyType, TypeSystem`AnyLength]}], 
            TypeSystem`AnyLength], 
           
           TypeSystem`Struct[{
            "EvaluationTime", "ModelMemory", "StandardDeviation", 
             "TrainingMemory", "TrainingTime"}, {
             TypeSystem`Atom[Real], 
             TypeSystem`Atom[Real], TypeSystem`AnyType, 
             TypeSystem`Atom[Real], 
             TypeSystem`Atom[Real]}], 
           TypeSystem`Atom[Integer]}], 13], 
        Association["ID" -> 93222407680227]], "MaxTrainingSize" -> 50, 
      "LastReportingTime" -> 3.740043746507747`16.325451671241666*^9, 
      "PreprocessorEvaluationTime" -> 6.86474609375`2.*^-6, 
      "PreprocessorMemory" -> 72176, "RoundPartitioning" -> Dataset[{
         Association[
         "TrainingSizes" -> 10, "TimeBudgets" -> 2.7618169715144814`, 
          "ElapsedTimes" -> 5.192765, "ExperimentCounts" -> 1], 
         Association[
         "TrainingSizes" -> 40, "TimeBudgets" -> 3.4522712143931042`, 
          "ElapsedTimes" -> 3.6100950000000016`, "ExperimentCounts" -> 136]}, 
        
        TypeSystem`Vector[
         TypeSystem`Struct[{
          "TrainingSizes", "TimeBudgets", "ElapsedTimes", 
           "ExperimentCounts"}, {
           TypeSystem`Atom[Integer], 
           TypeSystem`Atom[Real], 
           TypeSystem`Atom[Real], 
           TypeSystem`Atom[Integer]}], 2], 
        Association[
        "Origin" -> HoldComplete[GeneralUtilities`AssociationTranspose, 
           Dataset`DatasetHandle[93230997614819]], "ID" -> 93235292582115]]], 
    "Log" -> Association["Example" -> MachineLearning`MLDataset[
        Association[
        "f1" -> Association[
          "Type" -> "Numerical", "Weight" -> 1, 
           "Values" -> {0.376895512914067}, "ID" -> 6256679568790717639], 
         "f2" -> Association[
          "Type" -> "Numerical", "Weight" -> 1, 
           "Values" -> {-0.4368976097308743}, "ID" -> 8623262771504601198], 
         "f3" -> 
         Association[
          "Type" -> "Numerical", "Weight" -> 1, 
           "Values" -> {-0.348473995758535}, "ID" -> 4132395819933524331], 
         "f4" -> Association[
          "Type" -> "Numerical", "Weight" -> 1, 
           "Values" -> {-0.9322229326022331}, "ID" -> 8694373178801165222], 
         "f5" -> Association[
          "Type" -> "Numerical", "Weight" -> 1, 
           "Values" -> {0.3846343038875255}, "ID" -> 1348181103987964274], 
         "f6" -> Association[
          "Type" -> "Numerical", "Weight" -> 1, 
           "Values" -> {0.8440446658686045}, "ID" -> 157490378243617503], 
         "f7" -> Association[
          "Type" -> "Boolean", "Weight" -> 1, "Values" -> {0}, "ID" -> 
           939946895530328469], "f8" -> 
         Association[
          "Type" -> "Boolean", "Weight" -> 1, "Values" -> {0}, "ID" -> 
           3064004026125996483]], 
        Association[
        "ExampleNumber" -> 1, "ExampleWeights" -> 1, "RawExample" -> False]], 
      "TrainingTime" -> 10.425365, "MaxTrainingMemory" -> 26416328, 
      "DataMemory" -> 15648, "FunctionMemory" -> 270928, 
      "LanguageVersion" -> {11.3, 0}, "Date" -> 
      DateObject[{2018, 7, 8, 13, 2, 26.722587`8.17945348173413}, "Instant", 
        "Gregorian", -4.], "ProcessorCount" -> 2, "ProcessorType" -> "x86-64",
       "OperatingSystem" -> "MacOSX", "SystemWordLength" -> 64, 
      "Evaluations" -> {}]]],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.739717680132369*^9, 3.739717766053022*^9, 
  3.740058146878294*^9},
 CellLabel->
  "Out[400]=",ExpressionUUID->"491331df-3795-4fdf-9882-390e99e705f1"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"pm", "=", 
  RowBox[{"PredictorMeasurements", "[", 
   RowBox[{"p", ",", 
    RowBox[{"Thread", "[", 
     RowBox[{"testData", "\[Rule]", "testResults"}], "]"}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.7397178362833767`*^9, 3.739717857026514*^9}, 
   3.739718016503529*^9, {3.739718048670498*^9, 3.7397180507085733`*^9}},
 CellLabel->
  "In[401]:=",ExpressionUUID->"82b54fb2-bb71-4f40-8b00-3978c2dde18f"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["PredictorMeasurementsObject",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    
    TemplateBox[{PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource[
               "FEBitmaps", "SquarePlusIconMedium"]], 
              ButtonFunction :> (Typeset`open$$ = True), Appearance -> None, 
              Evaluator -> Automatic, Method -> "Preemptive"], 
             Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 3.5 CurrentValue["FontCapHeight"]/
                AbsoluteCurrentValue[Magnification]}]], 
            GraphicsBox[{{{}, {}, {
                GrayLevel[0.6], 
                Thickness[0.03], 
                Opacity[1.], 
                Dashing[{Small, Small}], 
                
                LineBox[{{2.409616047529911*^-7, 2.409616047529911*^-7}, {
                 11.803066020732206`, 11.803066020732206`}}]}}, {{}, {{}, {
                 GrayLevel[0.4], 
                 PointSize[0.09], 
                 AbsoluteThickness[1.6], 
                 
                 PointBox[{{1.6948167795276383`, 2.9052679959834418`}, {
                  2.227816320451859, 2.584653237430766}, {3.043099335090081, 
                  4.798822972025658}, {3.5728355469237116`, 
                  5.9507424155697155`}, {4.158566334344331, 
                  5.2097676165465385`}, {4.824808988689111, 
                  7.23346088027902}, {6.88649660338492, 5.297021421229134}, {
                  7.819072150835878, 6.533166043611269}, {8.437306856915493, 
                  8.81724006216815}, {8.604907881861761, 
                  11.302704526196452`}}]}, {}}, {}}}, FrameStyle -> 
             Directive[
               Thickness[Tiny], 
               GrayLevel[0.7]], Axes -> False, AspectRatio -> 1, ImageSize -> 
             Dynamic[{
               Automatic, 3.5 CurrentValue["FontCapHeight"]/
                AbsoluteCurrentValue[Magnification]}], Frame -> True, 
             FrameTicks -> None, FrameStyle -> Directive[
               Opacity[0.5], 
               Thickness[Tiny], 
               RGBColor[0.368417, 0.506779, 0.709798]]], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Predictor: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"LinearRegression\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox[
                 "\"Number of test examples: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["20", "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource[
               "FEBitmaps", "SquareMinusIconMedium"]], 
              ButtonFunction :> (Typeset`open$$ = False), Appearance -> None, 
              Evaluator -> Automatic, Method -> "Preemptive"], 
             Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 3.5 CurrentValue["FontCapHeight"]/
                AbsoluteCurrentValue[Magnification]}]], 
            GraphicsBox[{{{}, {}, {
                GrayLevel[0.6], 
                Thickness[0.03], 
                Opacity[1.], 
                Dashing[{Small, Small}], 
                
                LineBox[{{2.409616047529911*^-7, 2.409616047529911*^-7}, {
                 11.803066020732206`, 11.803066020732206`}}]}}, {{}, {{}, {
                 GrayLevel[0.4], 
                 PointSize[0.09], 
                 AbsoluteThickness[1.6], 
                 
                 PointBox[{{1.6948167795276383`, 2.9052679959834418`}, {
                  2.227816320451859, 2.584653237430766}, {3.043099335090081, 
                  4.798822972025658}, {3.5728355469237116`, 
                  5.9507424155697155`}, {4.158566334344331, 
                  5.2097676165465385`}, {4.824808988689111, 
                  7.23346088027902}, {6.88649660338492, 5.297021421229134}, {
                  7.819072150835878, 6.533166043611269}, {8.437306856915493, 
                  8.81724006216815}, {8.604907881861761, 
                  11.302704526196452`}}]}, {}}, {}}}, FrameStyle -> 
             Directive[
               Thickness[Tiny], 
               GrayLevel[0.7]], Axes -> False, AspectRatio -> 1, ImageSize -> 
             Dynamic[{
               Automatic, 3.5 CurrentValue["FontCapHeight"]/
                AbsoluteCurrentValue[Magnification]}], Frame -> True, 
             FrameTicks -> None, FrameStyle -> Directive[
               Opacity[0.5], 
               Thickness[Tiny], 
               RGBColor[0.368417, 0.506779, 0.709798]]], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Predictor: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"LinearRegression\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox[
                 "\"Number of test examples: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["20", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"StandardDeviation: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  
                  RowBox[{
                   "0.1678517929322698721`2.819330401033224", "\[PlusMinus]", 
                    "0.0272145295166654616`2."}], "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  PredictorMeasurementsObject[
   Association["Model" -> PredictorFunction[
      Association[
      "ExampleNumber" -> 50, "Input" -> 
       Association[
        "Preprocessor" -> MachineLearning`MLProcessor["ToMLDataset", 
           Association[
           "Input" -> Association[
             "f1" -> Association["Type" -> "Numerical"], "f2" -> 
              Association["Type" -> "Numerical"], "f3" -> 
              Association["Type" -> "Numerical"], "f4" -> 
              Association["Type" -> "Numerical"], "f5" -> 
              Association["Type" -> "Numerical"], "f6" -> 
              Association["Type" -> "Numerical"], "f7" -> 
              Association["Type" -> "Boolean"], "f8" -> 
              Association["Type" -> "Boolean"]], "Output" -> 
            Association[
             "f1" -> Association["Type" -> "Numerical", "Weight" -> 1], "f2" -> 
              Association["Type" -> "Numerical", "Weight" -> 1], "f3" -> 
              Association["Type" -> "Numerical", "Weight" -> 1], "f4" -> 
              Association["Type" -> "Numerical", "Weight" -> 1], "f5" -> 
              Association["Type" -> "Numerical", "Weight" -> 1], "f6" -> 
              Association["Type" -> "Numerical", "Weight" -> 1], "f7" -> 
              Association["Type" -> "Boolean", "Weight" -> 1], "f8" -> 
              Association["Type" -> "Boolean", "Weight" -> 1]], 
            "Preprocessor" -> MachineLearning`MLProcessor["Sequence", 
              Association["Processors" -> {
                 MachineLearning`MLProcessor["Transpose", 
                  Association["FeatureNumber" -> 8]], 
                 MachineLearning`MLProcessor["WrapMLDataset", 
                  Association[
                  "FeatureTypes" -> {
                    "Numerical", "Numerical", "Numerical", "Numerical", 
                    "Numerical", "Numerical", "Boolean", "Boolean"}, 
                   "FeatureKeys" -> {
                    "f1", "f2", "f3", "f4", "f5", "f6", "f7", "f8"}, 
                   "FeatureWeights" -> Automatic, "ExampleWeights" -> 
                   Automatic, "RawExample" -> 
                   Missing["KeyAbsent", "RawExample"]]]}]], "ScalarFeature" -> 
            False, "Invertibility" -> "Perfect", "Missing" -> "Allowed"]], 
         "Processor" -> MachineLearning`MLProcessor["Sequence", 
           Association[
           "Input" -> Association[
             "f1" -> Association["Type" -> "Numerical", "Weight" -> 1], "f2" -> 
              Association["Type" -> "Numerical", "Weight" -> 1], "f3" -> 
              Association["Type" -> "Numerical", "Weight" -> 1], "f4" -> 
              Association["Type" -> "Numerical", "Weight" -> 1], "f5" -> 
              Association["Type" -> "Numerical", "Weight" -> 1], "f6" -> 
              Association["Type" -> "Numerical", "Weight" -> 1], "f7" -> 
              Association["Type" -> "Boolean", "Weight" -> 1], "f8" -> 
              Association["Type" -> "Boolean", "Weight" -> 1]], "Output" -> 
            Association[
             "((f7f8)(f1f2f3f4f5f6))" -> 
              Association["Type" -> "NumericalVector", "Weight" -> 8.]], 
            "Processors" -> {
              MachineLearning`MLProcessor["Threads", 
               Association[
               "Input" -> 
                Association[
                 "f1" -> Association["Type" -> "Numerical", "Weight" -> 1], 
                  "f2" -> Association["Type" -> "Numerical", "Weight" -> 1], 
                  "f3" -> Association["Type" -> "Numerical", "Weight" -> 1], 
                  "f4" -> Association["Type" -> "Numerical", "Weight" -> 1], 
                  "f5" -> Association["Type" -> "Numerical", "Weight" -> 1], 
                  "f6" -> Association["Type" -> "Numerical", "Weight" -> 1], 
                  "f7" -> Association["Type" -> "Boolean", "Weight" -> 1], 
                  "f8" -> Association["Type" -> "Boolean", "Weight" -> 1]], 
                "Output" -> 
                Association[
                 "(f1f2f3f4f5f6)" -> 
                  Association["Type" -> "NumericalVector", "Weight" -> 6], 
                  "(f7f8)" -> 
                  Association["Type" -> "BooleanVector", "Weight" -> 2]], 
                "Processors" -> {
                  MachineLearning`MLProcessor["ToVector", 
                   Association[
                   "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
                    "Input" -> 
                    Association[
                    "f1" -> Association["Type" -> "Numerical", "Weight" -> 1],
                     "f2" -> Association[
                    "Type" -> "Numerical", "Weight" -> 1], "f3" -> 
                    Association["Type" -> "Numerical", "Weight" -> 1], "f4" -> 
                    Association["Type" -> "Numerical", "Weight" -> 1], "f5" -> 
                    Association["Type" -> "Numerical", "Weight" -> 1], "f6" -> 
                    Association["Type" -> "Numerical", "Weight" -> 1]], 
                    "Output" -> 
                    Association[
                    "(f1f2f3f4f5f6)" -> 
                    Association["Type" -> "NumericalVector", "Weight" -> 6]], 
                    "Version" -> {11.3, 0}, "ID" -> 7702479604741579352]], 
                  MachineLearning`MLProcessor["ToVector", 
                   Association[
                   "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
                    "Input" -> 
                    Association[
                    "f7" -> Association["Type" -> "Boolean", "Weight" -> 1], 
                    "f8" -> Association["Type" -> "Boolean", "Weight" -> 1]], 
                    "Output" -> 
                    Association[
                    "(f7f8)" -> 
                    Association["Type" -> "BooleanVector", "Weight" -> 2]], 
                    "Version" -> {11.3, 0}, "ID" -> 3355605293894169357]]}, 
                "Invertibility" -> "Perfect", "Missing" -> "Allowed"]], 
              MachineLearning`MLProcessor["ConformBooleanVector", 
               Association[
               "Invertibility" -> "Perfect", "Missing" -> "Allowed", "Input" -> 
                Association[
                 "(f7f8)" -> 
                  Association["Type" -> "BooleanVector", "Weight" -> 2]], 
                "Version" -> {11.3, 0}, "ID" -> 3859453107201388839, "Output" -> 
                Association[
                 "(f7f8)" -> 
                  Association["Type" -> "BooleanVector", "Weight" -> 2]]]], 
              MachineLearning`MLProcessor["BooleanVectorToNumericalVector", 
               Association[
               "Invertibility" -> "Perfect", "Missing" -> "Allowed", "Input" -> 
                Association[
                 "(f7f8)" -> 
                  Association["Type" -> "BooleanVector", "Weight" -> 2]], 
                "Version" -> {11.3, 0}, "ID" -> 4560195258105199146, "Output" -> 
                Association[
                 "(f7f8)" -> 
                  Association["Type" -> "NumericalVector", "Weight" -> 2]]]], 
              
              MachineLearning`MLProcessor["MergeVectors", 
               Association[
               "Invertibility" -> "Perfect", "Missing" -> "Allowed", "Input" -> 
                Association[
                 "(f7f8)" -> 
                  Association["Type" -> "NumericalVector", "Weight" -> 2], 
                  "(f1f2f3f4f5f6)" -> 
                  Association["Type" -> "NumericalVector", "Weight" -> 6]], 
                "Spans" -> {
                  Span[1, 2], 
                  Span[3, 8]}, "Wrappers" -> {Identity, Identity}, "Output" -> 
                Association[
                 "((f7f8)(f1f2f3f4f5f6))" -> 
                  Association[
                   "Weight" -> {1., 1., 1., 1., 1., 1., 1., 1.}, "Type" -> 
                    "NumericalVector"]], "Version" -> {11.3, 0}, "ID" -> 
                3344780077936403356]], 
              MachineLearning`MLProcessor["ImputeMissing", 
               Association[
               "Invertibility" -> "Perfect", "Missing" -> "Imputed", "Input" -> 
                Association[
                 "((f7f8)(f1f2f3f4f5f6))" -> 
                  Association[
                   "Weight" -> {1., 1., 1., 1., 1., 1., 1., 1.}, "Type" -> 
                    "NumericalVector"]], 
                "Imputer" -> (DimensionReducerFunction[
                  Association[
                  "ExampleNumber" -> 50, "Imputer" -> 
                   MachineLearning`MLProcessor["ImputeMissing", 
                    Association[
                    "Invertibility" -> "Perfect", "Missing" -> "Imputed", 
                    "Input" -> 
                    Association[
                    "f1" -> Association[
                    "Type" -> "NumericalVector", "Weight" -> 1]], 
                    "Fill" -> {0.44, 0.58, 
                    0.12247111760711545`, -0.027342241874746043`, 
                    0.0016576386260721777`, -0.054532179569511084`, \
-0.012670031133230841`, 0.11136143777645618`}, "Method" -> "Naive", 
                    "VectorLength" -> 8, "Output" -> 
                    Association[
                    "f1" -> Association[
                    "Type" -> "NumericalVector", "Weight" -> 1]], "Type" -> 
                    "NumericalVector"]], "RandomImputer" -> 
                   MachineLearning`MLProcessor["ImputeMissing", 
                    Association[
                    "Invertibility" -> "Perfect", "Missing" -> "Imputed", 
                    "Input" -> 
                    Association[
                    "f1" -> Association[
                    "Type" -> "NumericalVector", "Weight" -> 1]], 
                    "Mean" -> {0.44, 0.58, 
                    0.12247111760711545`, -0.027342241874746043`, 
                    0.0016576386260721777`, -0.054532179569511084`, \
-0.012670031133230841`, 0.11136143777645618`}, 
                    "StandardDeviation" -> {0.4963869458396343, 
                    0.4935585071701226, 0.550207429304885, 0.5522095081736537,
                     0.6010347572363258, 0.6203895259891092, 
                    0.5834189452999756, 0.5464695776120834}, "Method" -> 
                    "NaiveSampler", "VectorLength" -> 8, "Output" -> 
                    Association[
                    "f1" -> Association[
                    "Type" -> "NumericalVector", "Weight" -> 1]], "Type" -> 
                    "NumericalVector"]], "Preprocessor" -> 
                   MachineLearning`MLProcessor["ToMLDataset", 
                    Association[
                    "Input" -> 
                    Association[
                    "f1" -> Association[
                    "Type" -> "NumericalVector", "Length" -> 8]], "Output" -> 
                    Association[
                    "f1" -> Association[
                    "Type" -> "NumericalVector", "Weight" -> 1]], 
                    "Preprocessor" -> 
                    MachineLearning`MLProcessor["Sequence", 
                    Association["Processors" -> {
                    MachineLearning`MLProcessor["List"], 
                    MachineLearning`MLProcessor["WrapMLDataset", 
                    Association[
                    "FeatureTypes" -> {"NumericalVector"}, 
                    "FeatureKeys" -> {"f1"}, "FeatureWeights" -> Automatic, 
                    "ExampleWeights" -> Automatic, "RawExample" -> 
                    Missing["KeyAbsent", "RawExample"]]]}]], "ScalarFeature" -> 
                    True, "Invertibility" -> "Perfect", "Missing" -> 
                    "Allowed"]], "Processor" -> 
                   MachineLearning`MLProcessor["Identity"], "Padder" -> 
                   MachineLearning`MLProcessor["Identity"], "PostProcessor" -> 
                   MachineLearning`MLProcessor["FromMLDataset", 
                    Association[
                    "DatasetFormat" -> Automatic, "Input" -> 
                    Association[
                    "f1" -> Association[
                    "Type" -> "NumericalVector", "Weight" -> 1]], "Output" -> 
                    Association[
                    "f1" -> Association[
                    "Type" -> "NumericalVector", "Length" -> 8]], 
                    "InversePreprocessor" -> 
                    MachineLearning`MLProcessor["Sequence", 
                    Association["Processors" -> {
                    MachineLearning`MLProcessor["List"], 
                    MachineLearning`MLProcessor["WrapMLDataset", 
                    Association[
                    "FeatureTypes" -> {"NumericalVector"}, 
                    "FeatureKeys" -> {"f1"}, "FeatureWeights" -> {1}, 
                    "ExampleWeights" -> 1]]}]], "ScalarFeature" -> True, 
                    "Invertibility" -> "Perfect", "Missing" -> "Allowed"]], 
                   "Model" -> Association["Matrix" -> CompressedData["
1:eJwBEQLu/SFib1JlAgAAAAgAAAAIAAAAbSHHIdLKyj8Gt07ydKfhPwKBaJya
tKo/JOAqqHhlyb/jydb8rNffPzyxC7Gjft2/ewxRVs6frb+1VX8wH37YP9Rj
2r3rD9a/ykEnUUQGyz+he/6vPSajP2OGUx/My+K/0dyeMkGL4L/WyovnWvHX
v7ut8njFLsa/jrQu1uBwzb/0lpkZ6sTdP6vInRdYnMW/yKS0vl/HuD81iEFM
0XTVP3CP+5VYpt2/UtLiyLfo1b/sjkU2+LTev5O6BzZ6GNE/qLFVfV4N2r9q
127WgtO0v9grqwxD0dk/VhiaCMvv3T+uxBXTearRP8Y3ivUDx9y//ZGjjrAN
v7+SesfN5QnZv81oDmMpYMm/5KKUZ8FznD9WBTgryHfnv+v7NE2kyNQ/d225
au9Gwr9dJ+3fw+vZv++N9LtdlNY/C2aEFGyDtj/ofZj/WbSsP/udBsfYceQ/
mi9D6UKT0b8QTqHoE8PSP0PV8Wgj2Ka/MogB4Wwu1D9wL1Ocu87av/8t0pC+
0ti/QITLu09z4b/VVxmkkP7Jvw2Clkevjc2/wzVa8QyMpr+B1HUmvarIP70d
weGrWsQ/1DeJlq2g4r8Wf5UOcffcP6xbOulcv9U/dZNEPgEO2r9WNptTkWDZ
v41wNu29UNO/CmxMTRqA1z8O8qYYxnLJv2Oc43b0bdK/QAo34S2N3b9d0iDm

                    "], "Processor" -> 
                    MachineLearning`MLProcessor["Standardize", 
                    Association[
                    "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
                    "Input" -> 
                    Association[
                    "f1" -> Association[
                    "Type" -> "NumericalVector", "Weight" -> 1]], 
                    "Mean" -> {0.44, 0.58, 
                    0.12247111760711545`, -0.027342241874746043`, 
                    0.0016576386260721777`, -0.054532179569511084`, \
-0.012670031133230841`, 0.11136143777645618`}, 
                    "StandardDeviation" -> {0.4963869458396343, 
                    0.4935585071701226, 0.550207429304885, 0.5522095081736537,
                     0.6010347572363258, 0.6203895259891092, 
                    0.5834189452999756, 0.5464695776120834}, "Output" -> 
                    Association[
                    "f1" -> Association[
                    "Type" -> "NumericalVector", "Weight" -> 1]]]], 
                    "FinalDimension" -> 8, "Method" -> "Linear"], 
                   "PerformanceGoal" -> Automatic, "Invertibility" -> 
                   "Approximate", "Log" -> 
                   Association[
                    "TrainingTime" -> 0.054676, "MaxTrainingMemory" -> 122544,
                     "DataMemory" -> 3448, "FunctionMemory" -> 23032, 
                    "LanguageVersion" -> {11.3, 0}, "Date" -> 
                    DateObject[{
                    2018, 7, 8, 13, 2, 16.564953`7.971765192785111}, 
                    "Instant", "Gregorian", -4.], "ProcessorCount" -> 2, 
                    "ProcessorType" -> "x86-64", "OperatingSystem" -> 
                    "MacOSX", "SystemWordLength" -> 64, 
                    "Evaluations" -> {}]]][#, "ImputedVectors", 
                  PerformanceGoal -> "Quality"]& ), "Method" -> 
                "DimensionReduction", "VectorLength" -> 8, "Output" -> 
                Association[
                 "((f7f8)(f1f2f3f4f5f6))" -> 
                  Association["Type" -> "NumericalVector", "Weight" -> 8.]], 
                "Type" -> "NumericalVector", "Version" -> {11.3, 0}, "ID" -> 
                6746930599685287522]], 
              MachineLearning`MLProcessor["Standardize", 
               Association[
               "Invertibility" -> "Perfect", "Missing" -> "Allowed", "Input" -> 
                Association[
                 "((f7f8)(f1f2f3f4f5f6))" -> 
                  Association["Type" -> "NumericalVector", "Weight" -> 8.]], 
                "Mean" -> {0.44, 0.58, 
                 0.12247111760711545`, -0.027342241874746043`, 
                 0.0016576386260721777`, -0.054532179569511084`, \
-0.012670031133230841`, 0.11136143777645618`}, 
                "StandardDeviation" -> {0.4963869458396343, 
                 0.4935585071701226, 0.550207429304885, 0.5522095081736537, 
                 0.6010347572363258, 0.6203895259891092, 0.5834189452999756, 
                 0.5464695776120834}, "Output" -> 
                Association[
                 "((f7f8)(f1f2f3f4f5f6))" -> 
                  Association["Type" -> "NumericalVector", "Weight" -> 8.]], 
                "Version" -> {11.3, 0}, "ID" -> 1752490845919100894]]}, 
            "Invertibility" -> "Perfect", "Missing" -> "Imputed"]]], "Output" -> 
       Association[
        "Preprocessor" -> MachineLearning`MLProcessor["ToMLDataset", 
           Association[
           "Input" -> Association["f1" -> Association["Type" -> "Numerical"]],
             "Output" -> 
            Association[
             "f1" -> Association["Type" -> "Numerical", "Weight" -> 1]], 
            "Preprocessor" -> MachineLearning`MLProcessor["Sequence", 
              Association["Processors" -> {
                 MachineLearning`MLProcessor["List"], 
                 MachineLearning`MLProcessor["WrapMLDataset", 
                  Association[
                  "FeatureTypes" -> {"Numerical"}, "FeatureKeys" -> {"f1"}, 
                   "FeatureWeights" -> Automatic, "ExampleWeights" -> 
                   Automatic, "RawExample" -> 
                   Missing["KeyAbsent", "RawExample"]]]}]], "ScalarFeature" -> 
            True, "Invertibility" -> "Perfect", "Missing" -> "Allowed"]], 
         "Processor" -> MachineLearning`MLProcessor["Sequence", 
           Association[
           "Input" -> Association[
             "f1" -> Association["Type" -> "Numerical", "Weight" -> 1]], 
            "Output" -> 
            Association[
             "f1" -> Association["Type" -> "Numerical", "Weight" -> 1]], 
            "Processors" -> {
              MachineLearning`MLProcessor["ToVector", 
               Association[
               "Invertibility" -> "Perfect", "Missing" -> "Allowed", "Input" -> 
                Association[
                 "f1" -> Association["Type" -> "Numerical", "Weight" -> 1]], 
                "Output" -> 
                Association[
                 "f1" -> Association[
                   "Type" -> "NumericalVector", "Weight" -> 1]], 
                "Version" -> {11.3, 0}, "ID" -> 226620591177916996]], 
              MachineLearning`MLProcessor["Standardize", 
               Association[
               "Invertibility" -> "Perfect", "Missing" -> "Allowed", "Input" -> 
                Association[
                 "f1" -> Association[
                   "Type" -> "NumericalVector", "Weight" -> 1]], 
                "Mean" -> {0.4930511269181772}, 
                "StandardDeviation" -> {1.7120847256663245`}, "Output" -> 
                Association[
                 "f1" -> Association[
                   "Type" -> "NumericalVector", "Weight" -> 1]], 
                "Version" -> {11.3, 0}, "ID" -> 5066674405040618180]], 
              MachineLearning`MLProcessor["FromVector", 
               Association[
               "Invertibility" -> "Perfect", "Missing" -> "Allowed", "Input" -> 
                Association[
                 "f1" -> Association[
                   "Type" -> "NumericalVector", "Weight" -> 1]], "Output" -> 
                Association[
                 "f1" -> Association["Type" -> "Numerical", "Weight" -> 1]], 
                "Version" -> {11.3, 0}, "ID" -> 1033132177290556771]], 
              MachineLearning`MLProcessor["FirstValues", 
               Association[
               "Info" -> Association["Type" -> "Numerical", "Weight" -> 1], 
                "Key" -> "f1", "Invertibility" -> "Perfect", "Missing" -> 
                "Allowed"]]}, "Invertibility" -> "Perfect", "Missing" -> 
            "Allowed"]], "ProbabilityPostprocessor" -> Identity, 
         "InverseProcessorFunction" -> (0.4930511269181772 + 
          1.7120847256663245` #& ), 
         "ProcessorFunction" -> (-0.2879829015040638 + 0.584083243667051 #& ),
          "Name" -> "value", 
         "Quantiles" -> {-1.996052903449344, 1.7321729844043203`}], "Prior" -> 
       Automatic, "Utility" -> (DiracDelta[#2 - #]& ), "Threshold" -> 0, 
       "PerformanceGoal" -> Automatic, "BatchProcessing" -> Automatic, 
       "Model" -> Association["MeanFunction" -> LinearLayer[
           Association[
           "Type" -> "Linear", "Arrays" -> 
            Association[
             "Weights" -> 
              RawArray["Real32",{{-0.1531057506799698, 0.25759944319725037`, 
                0.1294323205947876, -0.31107887625694275`, 0.7276895046234131,
                 0.21225012838840485`, -0.020201517269015312`, 
                0.39524611830711365`}}], "Biases" -> RawArray["Real32",{0.}]],
             "Parameters" -> 
            Association[
             "OutputDimensions" -> {1}, "$OutputSize" -> 1, "$InputSize" -> 8,
               "$InputDimensions" -> {8}], "Inputs" -> 
            Association[
             "Input" -> NeuralNetworks`TensorT[{8}, NeuralNetworks`RealT]], 
            "Outputs" -> 
            Association[
             "Output" -> NeuralNetworks`TensorT[{1}, NeuralNetworks`RealT]]], 
           
           Association["Version" -> "11.3.5"]], 
         "DistributionData" -> {NormalDistribution, 0.10805386538609339`}, 
         "Processor" -> MachineLearning`MLProcessor["Sequence", 
           Association[
           "Input" -> Association[
             "((f7f8)(f1f2f3f4f5f6))" -> 
              Association["Type" -> "NumericalVector", "Weight" -> 8.]], 
            "Output" -> 
            Association[
             "((f7f8)(f1f2f3f4f5f6))" -> 
              Association["Type" -> "NumericalVector", "Weight" -> 8.]], 
            "Processors" -> {
              MachineLearning`MLProcessor["Standardize", 
               Association[
               "Invertibility" -> "Perfect", "Missing" -> "Allowed", "Input" -> 
                Association[
                 "((f7f8)(f1f2f3f4f5f6))" -> 
                  Association["Type" -> "NumericalVector", "Weight" -> 8.]], 
                "Mean" -> {3.1086244689504386`*^-17, 
                 
                 1.1990408665951691`*^-16, -8.881784197001253*^-18, \
-4.440892098500626*^-18, 1.274588073973959*^-17, -4.4408920985006264`*^-17, 
                 8.881784197001253*^-18, -9.103828801926284*^-17}, 
                "StandardDeviation" -> {0.9999999999999999, 1., 
                 0.9999999999999999, 0.9999999999999997, 1., 1., 
                 0.9999999999999999, 1.0000000000000002`}, "Output" -> 
                Association[
                 "((f7f8)(f1f2f3f4f5f6))" -> 
                  Association["Type" -> "NumericalVector", "Weight" -> 8.]], 
                "Version" -> {11.3, 0}, "ID" -> 484788832103453132]], 
              MachineLearning`MLProcessor["FirstValues", 
               Association[
               "Info" -> Association[
                 "Type" -> "NumericalVector", "Weight" -> 8.], "Key" -> 
                "((f7f8)(f1f2f3f4f5f6))", "Invertibility" -> "Perfect", 
                "Missing" -> "Allowed"]]}, "Invertibility" -> "Perfect", 
            "Missing" -> "Allowed"]], "Method" -> "LinearRegression", 
         "Options" -> 
         Association[
          "L1Regularization" -> 
           Association["Value" -> 0, "Options" -> Association[]], 
           "L2Regularization" -> 
           Association["Value" -> 0.1, "Options" -> Association[]], 
           "OptimizationMethod" -> 
           Association[
            "Value" -> "NormalEquation", "Options" -> Association[]], 
           MaxIterations -> 
           Association["Value" -> 30, "Options" -> Association[]]]], 
       "TrainingInformation" -> 
       Association[
        "LossName" -> "StandardDeviation", "BestModelInformation" -> Dataset[
           Association[
           "MeanCrossEntropy" -> 
            PlusMinus[0.10536280706714204`, 0.08074992257900701], 
            "StandardDeviation" -> 
            PlusMinus[0.8062218582592731, 0.11572400929048976`], 
            "EvaluationTime" -> 0.000047124999999999993`, "TestSize" -> 110, 
            "TrainingSize" -> 40, "TrainingTime" -> 0.011137750000000002`, 
            "TrainingMemory" -> 69521.33333333334, "ModelMemory" -> 14904., 
            "ExperimentCount" -> 11, "ModelUtility" -> 0.520790933189373, 
            "MeanCrossEntropyHistory" -> {
              PlusMinus[0.017719098419425205`, 0.2274984909312668], 
              PlusMinus[0., 0.2153211895306009], 
              PlusMinus[0.02898629916867757, 0.2813773553795492], 
              PlusMinus[0., 0.27428383852899113`], 
              PlusMinus[0.20197546956328055`, 0.17039358171549232`], 
              PlusMinus[0.12444719678954475`, 0.20292835910806298`], 
              PlusMinus[0.19021650877055168`, 0.3618132817236267], 
              PlusMinus[0.313342821150962, 0.2784754329693242], 
              PlusMinus[0., 0.22414103981235356`], 
              PlusMinus[0.3154238046762437, 0.2591689630159618], 
              PlusMinus[0., 0.24059851385574665`]}, 
            "StandardDeviationHistory" -> {
              PlusMinus[0.8029983822780923, 0.38653473441066927`], 
              PlusMinus[0.7971183068744252, 0.39295508223271375`], 
              PlusMinus[0.8034126408101498, 0.38616325813201635`], 
              PlusMinus[0.7979678178914693, 0.39223666542298335`], 
              PlusMinus[0.8130446931364402, 0.3763391037180845], 
              PlusMinus[0.8054246879138474, 0.38415138707386287`], 
              PlusMinus[0.8101701043599859, 0.37948696879550115`], 
              PlusMinus[0.819689164107362, 0.3704480806688402], 
              PlusMinus[0.7955799497515174, 0.3946367660275881], 
              PlusMinus[0.8199210055795554, 0.37016549094131673`], 
              PlusMinus[0.7990518920052326, 0.390788794237165]}, 
            "Configuration" -> {
             "LinearRegression", "L1Regularization" -> 0, "L2Regularization" -> 
              0.1, "OptimizationMethod" -> Automatic, MaxIterations -> 30}, 
            "FinalTrainingSize" -> 50], 
           
           TypeSystem`Struct[{
            "MeanCrossEntropy", "StandardDeviation", "EvaluationTime", 
             "TestSize", "TrainingSize", "TrainingTime", "TrainingMemory", 
             "ModelMemory", "ExperimentCount", "ModelUtility", 
             "MeanCrossEntropyHistory", "StandardDeviationHistory", 
             "Configuration", "FinalTrainingSize"}, {
            TypeSystem`AnyType, TypeSystem`AnyType, 
             TypeSystem`Atom[Real], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Real], 
             TypeSystem`Atom[Real], 
             TypeSystem`Atom[Real], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Real], 
             TypeSystem`Vector[TypeSystem`AnyType, 11], 
             TypeSystem`Vector[TypeSystem`AnyType, 11], 
             TypeSystem`Tuple[{
               TypeSystem`Atom[String], TypeSystem`AnyType, 
               TypeSystem`AnyType, TypeSystem`AnyType, TypeSystem`AnyType}], 
             TypeSystem`Atom[Integer]}], 
           Association["ID" -> 93226702647523]], "Configurations" -> Dataset[
           Association[
           Association[
             "Value" -> "LinearRegression", "Options" -> 
              Association[
               "L1Regularization" -> Association["Value" -> 0], 
                "L2Regularization" -> Association["Value" -> 0.00001], 
                "OptimizationMethod" -> Association["Value" -> Automatic], 
                MaxIterations -> Association["Value" -> 30]]] -> 
            Association["Experiments" -> {
                Association[
                "MeanCrossEntropy" -> 
                 PlusMinus[1.6476194413194178`, 0.12412933483904971`], 
                 "StandardDeviation" -> 
                 PlusMinus[1.2818026562342337`, 0.17868305420845637`], 
                 "EvaluationTime" -> 0.000100275, "TestSize" -> 40, 
                 "TrainingSize" -> 10, "TrainingTime" -> 5.012768, 
                 "TrainingMemory" -> 19453968, "ModelMemory" -> 14904, 
                 "ExperimentCount" -> 1, "ModelUtility" -> 0.3278282664625044,
                  "MeanCrossEntropyHistory" -> {
                   PlusMinus[1.6476194413194178`, 0.0877726944088676]}, 
                 "StandardDeviationHistory" -> {
                   PlusMinus[1.2818026562342337`, 0.12634799931392296`]}], 
                Association[
                "MeanCrossEntropy" -> 
                 PlusMinus[0.11724921978118284`, 0.08477149255589649], 
                 "StandardDeviation" -> 
                 PlusMinus[0.8070267518677542, 0.12112010638327654`], 
                 "EvaluationTime" -> 0.000038354545454545455`, "TestSize" -> 
                 100, "TrainingSize" -> 40, "TrainingTime" -> 
                 0.007897727272727275, "TrainingMemory" -> 65141.09090909091, 
                 "ModelMemory" -> 14904., "ExperimentCount" -> 10, 
                 "ModelUtility" -> 0.5196105130019956, 
                 "MeanCrossEntropyHistory" -> {
                   PlusMinus[0.023842221726751323`, 0.22693709703678017`], 
                   PlusMinus[0., 0.21584701899994435`], 
                   PlusMinus[0.029683933585056388`, 0.2802422391827781], 
                   PlusMinus[0., 0.2738069510024778], 
                   PlusMinus[0.20373155970321993`, 0.17019402981499054`], 
                   PlusMinus[0.1272765469306018, 0.20365090517680542`], 
                   PlusMinus[0.19084532062285436`, 0.3582952014617633], 
                   PlusMinus[0.31567988919321666`, 0.2790286964959941], 
                   PlusMinus[0., 0.22259012714326634`], 
                   PlusMinus[0.319105398918733, 0.2582630801484399]}, 
                 "StandardDeviationHistory" -> {
                   PlusMinus[0.803316093611803, 0.3861979701602399], 
                   PlusMinus[0.7971982694749131, 0.39286754221518844`], 
                   PlusMinus[0.8034398124476858, 0.3861317924033264], 
                   PlusMinus[0.7977253993814547, 0.39250442698328075`], 
                   PlusMinus[0.8131949088520738, 0.37619407077075767`], 
                   PlusMinus[0.8056870409757539, 0.3838875426472923], 
                   PlusMinus[0.8101898085217533, 0.3794566663696728], 
                   PlusMinus[0.8198194353801703, 0.3703315125141847], 
                   PlusMinus[0.7957498998798146, 0.39443928970983394`], 
                   PlusMinus[0.820130479375991, 0.36997142282743417`]}]}, 
              "PredictedPerformances" -> 
              Association[
               "EvaluationTime" -> 0.000038354545454545455`, "ModelMemory" -> 
                14904., "StandardDeviation" -> 
                PlusMinus[0.8070267518677542, 0.12112010638327654`], 
                "TrainingMemory" -> 65141.09090909091, "TrainingTime" -> 
                5.016716863636364], "Index" -> 1], 
            Association[
             "Value" -> "LinearRegression", "Options" -> 
              Association[
               "L1Regularization" -> Association["Value" -> 0], 
                "L2Regularization" -> Association["Value" -> 1.*^6], 
                "OptimizationMethod" -> Association["Value" -> Automatic], 
                MaxIterations -> Association["Value" -> 30]]] -> 
            Association["Experiments" -> {
                Association[
                "MeanCrossEntropy" -> 
                 PlusMinus[1.9839253738851361`, 0.05795737696809504], 
                 "StandardDeviation" -> 
                 PlusMinus[1.82466986556227, 0.1005245088842747], 
                 "EvaluationTime" -> 0.000040918181818181825`, "TestSize" -> 
                 100, "TrainingSize" -> 40, "TrainingTime" -> 
                 0.009314181818181817, "TrainingMemory" -> 66457.45454545454, 
                 "ModelMemory" -> 14904., "ExperimentCount" -> 10, 
                 "ModelUtility" -> 0.2341351623009099, 
                 "MeanCrossEntropyHistory" -> {
                   PlusMinus[2.007964999049526, 0.16018615380701323`], 
                   PlusMinus[2.067108004185089, 0.17831297529765883`], 
                   PlusMinus[1.9114592867820501`, 0.13613109302508475`], 
                   PlusMinus[2.0640416822662986`, 0.1644407382903562], 
                   PlusMinus[1.9665167324734554`, 0.14921677570880681`], 
                   PlusMinus[2.0987631536588016`, 0.19051575370913298`], 
                   PlusMinus[1.9735775969022487`, 0.13492838270251567`], 
                   PlusMinus[1.8771159529141295`, 0.13450439801863076`], 
                   PlusMinus[2.2049633012748155`, 0.18044293025507915`], 
                   PlusMinus[1.8961842023071345`, 0.12861810834160275`]}, 
                 "StandardDeviationHistory" -> {
                   PlusMinus[1.82380665171963, 0.2573666144968318], 
                   PlusMinus[1.9287568329941165`, 0.26075042907868645`], 
                   PlusMinus[1.6091628518902774`, 0.27202971447067126`], 
                   PlusMinus[1.9236984894627969`, 0.23438939133317138`], 
                   PlusMinus[1.7394076645627745`, 0.2602427324661611], 
                   PlusMinus[1.9788395613922056`, 0.26770951450474023`], 
                   PlusMinus[1.754520638039315, 0.22078400431946305`], 
                   PlusMinus[1.5143030849357335`, 0.3030456050833213], 
                   PlusMinus[2.123063040658201, 0.20436133755764088`], 
                   PlusMinus[1.5684687872162346`, 0.2657924997813031]}]}, 
              "PredictedPerformances" -> 
              Association[
               "EvaluationTime" -> 0.000040918181818181825`, "ModelMemory" -> 
                14904., "StandardDeviation" -> 
                PlusMinus[1.82466986556227, 0.1005245088842747], 
                "TrainingMemory" -> 66457.45454545454, "TrainingTime" -> 
                0.013971272727272725`], "Index" -> 2], 
            Association[
             "Value" -> "LinearRegression", "Options" -> 
              Association[
               "L1Regularization" -> Association["Value" -> 0], 
                "L2Regularization" -> Association["Value" -> 1.], 
                "OptimizationMethod" -> Association["Value" -> Automatic], 
                MaxIterations -> Association["Value" -> 30]]] -> 
            Association["Experiments" -> {
                Association[
                "MeanCrossEntropy" -> 
                 PlusMinus[0.10129920228976008`, 0.07958982187714887], 
                 "StandardDeviation" -> 
                 PlusMinus[0.8064124639216056, 0.11564609499018415`], 
                 "EvaluationTime" -> 0.000038333333333333334`, "TestSize" -> 
                 110, "TrainingSize" -> 40, "TrainingTime" -> 
                 0.008333583333333333, "TrainingMemory" -> 65152., 
                 "ModelMemory" -> 14904., "ExperimentCount" -> 11, 
                 "ModelUtility" -> 0.5206810574675785, 
                 "MeanCrossEntropyHistory" -> {
                   PlusMinus[0., 0.2326692083056567], 
                   PlusMinus[0., 0.20781773994859654`], 
                   PlusMinus[0.037049730738891506`, 0.2816319817293075], 
                   PlusMinus[0.007315883628744136, 0.26814354428795323`], 
                   PlusMinus[0.19992071011553952`, 0.17190505605113227`], 
                   PlusMinus[0.1204834911857683, 0.19520762375365766`], 
                   PlusMinus[0.2034115276627328, 0.37746845608606494`], 
                   PlusMinus[0.2974231131427242, 0.26710262331733736`], 
                   PlusMinus[0., 0.23576951285338912`], 
                   PlusMinus[0.2888817957918359, 0.26185599854081704`], 
                   PlusMinus[0., 0.2317673474816268]}, 
                 "StandardDeviationHistory" -> {
                   PlusMinus[0.8013739653885061, 0.3882947618656333], 
                   PlusMinus[0.7989952572757312, 0.39085093318122843`], 
                   PlusMinus[0.8038945651047079, 0.3856798029701959], 
                   PlusMinus[0.8014935616098391, 0.3883852894162932], 
                   PlusMinus[0.8126487976055675, 0.37673530731232996`], 
                   PlusMinus[0.8045695987397321, 0.38499021308859693`], 
                   PlusMinus[0.811311576180981, 0.37847138575120054`], 
                   PlusMinus[0.8191272525686256, 0.370941323621965], 
                   PlusMinus[0.795787565553111, 0.39443556246027606`], 
                   PlusMinus[0.8187283620107226, 0.3712934256724777], 
                   PlusMinus[0.7991393953249293, 0.39068228957057993`]}]}, 
              "PredictedPerformances" -> 
              Association[
               "EvaluationTime" -> 0.000038333333333333334`, "ModelMemory" -> 
                14904., "StandardDeviation" -> 
                PlusMinus[0.8064124639216056, 0.11564609499018415`], 
                "TrainingMemory" -> 65152., "TrainingTime" -> 
                0.012500375000000001`], "Index" -> 3], 
            Association[
             "Value" -> "LinearRegression", "Options" -> 
              Association[
               "L1Regularization" -> Association["Value" -> 0], 
                "L2Regularization" -> Association["Value" -> 1000.], 
                "OptimizationMethod" -> Association["Value" -> Automatic], 
                MaxIterations -> Association["Value" -> 30]]] -> 
            Association["Experiments" -> {
                Association[
                "MeanCrossEntropy" -> 
                 PlusMinus[1.9485579078951432`, 0.057860197273348894`], 
                 "StandardDeviation" -> 
                 PlusMinus[1.772554364822783, 0.09742301046682442], 
                 "EvaluationTime" -> 0.00003687272727272727, "TestSize" -> 
                 100, "TrainingSize" -> 40, "TrainingTime" -> 
                 0.009509272727272726, "TrainingMemory" -> 67402.18181818182, 
                 "ModelMemory" -> 14904., "ExperimentCount" -> 10, 
                 "ModelUtility" -> 0.2410252507233116, 
                 "MeanCrossEntropyHistory" -> {
                   PlusMinus[1.972209037904676, 0.15745019473962907`], 
                   PlusMinus[2.0398207549669367`, 0.1777337629246324], 
                   PlusMinus[1.8742383287819129`, 0.13334401773167692`], 
                   PlusMinus[2.0339558333856895`, 0.16335363381950715`], 
                   PlusMinus[1.9320014734154027`, 0.14652898993420932`], 
                   PlusMinus[2.064352682725728, 0.1886020001365372], 
                   PlusMinus[1.9407203692606312`, 0.13327110119254154`], 
                   PlusMinus[1.8383059968361462`, 0.13305121634436226`], 
                   PlusMinus[2.173802043278813, 0.17780688560968572`], 
                   PlusMinus[1.8577779255371576`, 0.12507392204007384`]}, 
                 "StandardDeviationHistory" -> {
                   PlusMinus[1.766876518845891, 0.24869665789208129`], 
                   PlusMinus[1.8795622010156983`, 0.25019301470599553`], 
                   PlusMinus[1.562043262462756, 0.2633497854694809], 
                   PlusMinus[1.870802845215937, 0.22754429292690437`], 
                   PlusMinus[1.689425886522327, 0.2510788110398635], 
                   PlusMinus[1.9166702304458645`, 0.2589856542474094], 
                   PlusMinus[1.7071063606123333`, 0.21628234854574935`], 
                   PlusMinus[1.4721564337663355`, 0.294882501588393], 
                   PlusMinus[2.0596011150357603`, 0.19764915112441234`], 
                   PlusMinus[1.5208520671812145`, 0.2572302303826739]}]}, 
              "PredictedPerformances" -> 
              Association[
               "EvaluationTime" -> 0.00003687272727272727, "ModelMemory" -> 
                14904., "StandardDeviation" -> 
                PlusMinus[1.772554364822783, 0.09742301046682442], 
                "TrainingMemory" -> 67402.18181818182, "TrainingTime" -> 
                0.014263909090909088`], "Index" -> 4], 
            Association[
             "Value" -> "LinearRegression", "Options" -> 
              Association[
               "L1Regularization" -> Association["Value" -> 0], 
                "L2Regularization" -> Association["Value" -> 1.*^-6], 
                "OptimizationMethod" -> Association["Value" -> Automatic], 
                MaxIterations -> Association["Value" -> 30]]] -> 
            Association["Experiments" -> {
                Association[
                "MeanCrossEntropy" -> 
                 PlusMinus[0.1071075123889842, 0.08078447227337004], 
                 "StandardDeviation" -> 
                 PlusMinus[0.8063329179705452, 0.11569076549493301`], 
                 "EvaluationTime" -> 0.000037216666666666666`, "TestSize" -> 
                 110, "TrainingSize" -> 40, "TrainingTime" -> 0.008991, 
                 "TrainingMemory" -> 66357.99999999999, "ModelMemory" -> 
                 14904., "ExperimentCount" -> 11, "ModelUtility" -> 
                 0.5207253829858345, "MeanCrossEntropyHistory" -> {
                   PlusMinus[0.023842869844919123`, 0.22693705230885333`], 
                   PlusMinus[0., 0.21584706577489593`], 
                   PlusMinus[0.029683955579792753`, 0.28024213786889124`], 
                   PlusMinus[0., 0.27380689542689646`], 
                   PlusMinus[0.2037317838706591, 0.17019400849070274`], 
                   PlusMinus[0.12727681539670327`, 0.20365096273813516`], 
                   PlusMinus[0.19084538759140504`, 0.358294847117581], 
                   PlusMinus[0.31567996021363304`, 0.2790287042287821], 
                   PlusMinus[0., 0.2225899990247879], 
                   PlusMinus[0.3191057754626659, 0.25826299014993515`], 
                   PlusMinus[0., 0.24128767709886315`]}, 
                 "StandardDeviationHistory" -> {
                   PlusMinus[0.8033161271140544, 0.3861979347625254], 
                   PlusMinus[0.7971982819658981, 0.39286752841578454`], 
                   PlusMinus[0.8034398133571572, 0.38613179121200253`], 
                   PlusMinus[0.7977253755801734, 0.3925044533003852], 
                   PlusMinus[0.8131949277512978, 0.37619405256611405`], 
                   PlusMinus[0.805687065391987, 0.38388751806587723`], 
                   PlusMinus[0.8101898113010381, 0.3794566625944498], 
                   PlusMinus[0.8198194394689925, 0.3703315088268497], 
                   PlusMinus[0.7957499187242452, 0.3944392679350484], 
                   PlusMinus[0.8201305012637256, 0.3699714026151523], 
                   PlusMinus[0.799108261677675, 0.39072830243454476`]}]}, 
              "PredictedPerformances" -> 
              Association[
               "EvaluationTime" -> 0.000037216666666666666`, "ModelMemory" -> 
                14904., "StandardDeviation" -> 
                PlusMinus[0.8063329179705452, 0.11569076549493301`], 
                "TrainingMemory" -> 66357.99999999999, "TrainingTime" -> 
                0.013486500000000002`], "Index" -> 5], 
            Association[
             "Value" -> "LinearRegression", "Options" -> 
              Association[
               "L1Regularization" -> Association["Value" -> 0], 
                "L2Regularization" -> Association["Value" -> 10000.], 
                "OptimizationMethod" -> Association["Value" -> Automatic], 
                MaxIterations -> Association["Value" -> 30]]] -> 
            Association["Experiments" -> {
                Association[
                "MeanCrossEntropy" -> 
                 PlusMinus[1.980349831216741, 0.05794663372086756], 
                 "StandardDeviation" -> 
                 PlusMinus[1.8193001439526364`, 0.10020124462136842`], 
                 "EvaluationTime" -> 0.00003876363636363636, "TestSize" -> 
                 100, "TrainingSize" -> 40, "TrainingTime" -> 0.011298, 
                 "TrainingMemory" -> 69605.09090909091, "ModelMemory" -> 
                 14904., "ExperimentCount" -> 10, "ModelUtility" -> 
                 0.23482692065202732`, "MeanCrossEntropyHistory" -> {
                   PlusMinus[2.0043557055006507`, 0.15990714906160367`], 
                   PlusMinus[2.0643318979010075`, 0.17825277031210585`], 
                   PlusMinus[1.9076904312480125`, 0.13584505505560965`], 
                   PlusMinus[2.0610072419347074`, 0.16433082400947688`], 
                   PlusMinus[1.9630309665279344`, 0.14894598020661956`], 
                   PlusMinus[2.095287593791006, 0.19031895050743372`], 
                   PlusMinus[1.9702472780449032`, 0.13475270251820803`], 
                   PlusMinus[1.8731848421036053`, 0.13435223742005464`], 
                   PlusMinus[2.2018331059313856`, 0.1801792539459877], 
                   PlusMinus[1.8922951096839609`, 0.12825694098702517`]}, 
                 "StandardDeviationHistory" -> {
                   PlusMinus[1.8179412265761867`, 0.25644615342509636`], 
                   PlusMinus[1.9236998457120584`, 0.2596361358117591], 
                   PlusMinus[1.6042893908187446`, 0.27110091184510837`], 
                   PlusMinus[1.9182762910897952`, 0.2336652486431172], 
                   PlusMinus[1.7342677096185681`, 0.25927164850568285`], 
                   PlusMinus[1.9724337115329884`, 0.2667928830345088], 
                   PlusMinus[1.749635487288324, 0.2202930212715686], 
                   PlusMinus[1.5099576691641905`, 0.3021800696848126], 
                   PlusMinus[2.1165595696858484`, 0.2036547839374268], 
                   PlusMinus[1.5635355533008761`, 0.2648691265388225]}]}, 
              "PredictedPerformances" -> 
              Association[
               "EvaluationTime" -> 0.00003876363636363636, "ModelMemory" -> 
                14904., "StandardDeviation" -> 
                PlusMinus[1.8193001439526364`, 0.10020124462136842`], 
                "TrainingMemory" -> 69605.09090909091, "TrainingTime" -> 
                0.016947], "Index" -> 6], 
            Association[
             "Value" -> "LinearRegression", "Options" -> 
              Association[
               "L1Regularization" -> Association["Value" -> 0], 
                "L2Regularization" -> Association["Value" -> 10.], 
                "OptimizationMethod" -> Association["Value" -> Automatic], 
                MaxIterations -> Association["Value" -> 30]]] -> 
            Association["Experiments" -> {
                Association[
                "MeanCrossEntropy" -> 
                 PlusMinus[0.705424436399764, 0.061843008383153514`], 
                 "StandardDeviation" -> 
                 PlusMinus[0.8788849979428148, 0.10403047586172023`], 
                 "EvaluationTime" -> 0.000046781818181818186`, "TestSize" -> 
                 100, "TrainingSize" -> 40, "TrainingTime" -> 
                 0.010069181818181816`, "TrainingMemory" -> 66624.72727272728,
                  "ModelMemory" -> 14904., "ExperimentCount" -> 10, 
                 "ModelUtility" -> 0.48008326450290056`, 
                 "MeanCrossEntropyHistory" -> {
                   PlusMinus[0.6086546625113614, 0.15587008168815333`], 
                   PlusMinus[0.9511250588675673, 0.16475776636948433`], 
                   PlusMinus[0.5754700104838901, 0.14126729662696247`], 
                   PlusMinus[0.8452777499325362, 0.13671467376027402`], 
                   PlusMinus[0.6677219583461226, 0.10964711175909722`], 
                   PlusMinus[0.734301452462163, 0.15900419559355977`], 
                   PlusMinus[0.7722239661177643, 0.19563918445764805`], 
                   PlusMinus[0.5749811944847867, 0.15793392750588264`], 
                   PlusMinus[0.8119398113451655, 0.13053716126925832`], 
                   PlusMinus[0.5763897177976304, 0.1376348597749951]}, 
                 "StandardDeviationHistory" -> {
                   PlusMinus[0.8563296077375961, 0.3417809325398877], 
                   PlusMinus[0.9243251399410871, 0.30100809401074236`], 
                   PlusMinus[0.8511778089101322, 0.3449846935566514], 
                   PlusMinus[0.9031446158284219, 0.31183162510324436`], 
                   PlusMinus[0.8660582927951886, 0.3341652563052705], 
                   PlusMinus[0.8808190906735226, 0.32612864248488005`], 
                   PlusMinus[0.8883323615560322, 0.32194003195830495`], 
                   PlusMinus[0.85042605960882, 0.34599466401971635`], 
                   PlusMinus[0.8953665723418824, 0.3160779762916435], 
                   PlusMinus[0.8492577355607885, 0.3464626378122796]}]}, 
              "PredictedPerformances" -> 
              Association[
               "EvaluationTime" -> 0.000046781818181818186`, "ModelMemory" -> 
                14904., "StandardDeviation" -> 
                PlusMinus[0.8788849979428148, 0.10403047586172023`], 
                "TrainingMemory" -> 66624.72727272728, "TrainingTime" -> 
                0.015103772727272723`], "Index" -> 7], 
            Association[
             "Value" -> "LinearRegression", "Options" -> 
              Association[
               "L1Regularization" -> Association["Value" -> 0], 
                "L2Regularization" -> Association["Value" -> 0.0001], 
                "OptimizationMethod" -> Association["Value" -> Automatic], 
                MaxIterations -> Association["Value" -> 30]]] -> 
            Association["Experiments" -> {
                Association[
                "MeanCrossEntropy" -> 
                 PlusMinus[0.1071056928996169, 0.08078444013358327], 
                 "StandardDeviation" -> 
                 PlusMinus[0.8063327950387176, 0.11569080247387709`], 
                 "EvaluationTime" -> 0.00003860833333333333, "TestSize" -> 
                 110, "TrainingSize" -> 40, "TrainingTime" -> 
                 0.007928666666666667, "TrainingMemory" -> 65173.33333333333, 
                 "ModelMemory" -> 14904., "ExperimentCount" -> 11, 
                 "ModelUtility" -> 0.5207254547923874, 
                 "MeanCrossEntropyHistory" -> {
                   PlusMinus[0.023836662522792595`, 0.22693760236298993`], 
                   PlusMinus[0., 0.21584658431874773`], 
                   PlusMinus[0.029683153473862856`, 0.2802433675762271], 
                   PlusMinus[0., 0.2738074893760425], 
                   PlusMinus[0.20372989337344896`, 0.170194207370185], 
                   PlusMinus[0.1272737952615176, 0.20365026917347379`], 
                   PlusMinus[0.1908445299584379, 0.358298464379141], 
                   PlusMinus[0.31567754427259054`, 0.27902822449657466`], 
                   PlusMinus[0., 0.22259153291913197`], 
                   PlusMinus[0.3191020403285384, 0.2582639265679398], 
                   PlusMinus[0., 0.2412870543206097]}, 
                 "StandardDeviationHistory" -> {
                   PlusMinus[0.8033158062468299, 0.3861982741393918], 
                   PlusMinus[0.7971981701125732, 0.39286765170940857`], 
                   PlusMinus[0.8034397801915683, 0.3861318289710455], 
                   PlusMinus[0.7977256024325949, 0.3925042027795897], 
                   PlusMinus[0.8131947683643316, 0.37619420620253197`], 
                   PlusMinus[0.8056867907147942, 0.3838877942320485], 
                   PlusMinus[0.8101897757137554, 0.37945670826915295`], 
                   PlusMinus[0.8198193003801356, 0.3703316333443711], 
                   PlusMinus[0.7957497294838187, 0.3944394871128543], 
                   PlusMinus[0.8201302841521444, 0.36997160328158146`], 
                   PlusMinus[0.7991082020212739, 0.3907283665514192]}]}, 
              "PredictedPerformances" -> 
              Association[
               "EvaluationTime" -> 0.00003860833333333333, "ModelMemory" -> 
                14904., "StandardDeviation" -> 
                PlusMinus[0.8063327950387176, 0.11569080247387709`], 
                "TrainingMemory" -> 65173.33333333333, "TrainingTime" -> 
                0.011893], "Index" -> 8], 
            Association[
             "Value" -> "LinearRegression", "Options" -> 
              Association[
               "L1Regularization" -> Association["Value" -> 0], 
                "L2Regularization" -> Association["Value" -> 0.001], 
                "OptimizationMethod" -> Association["Value" -> Automatic], 
                MaxIterations -> Association["Value" -> 30]]] -> 
            Association["Experiments" -> {
                Association[
                "MeanCrossEntropy" -> 
                 PlusMinus[0.1070889380510337, 0.08078418454911857], 
                 "StandardDeviation" -> 
                 PlusMinus[0.8063316706215887, 0.11569114138479189`], 
                 "EvaluationTime" -> 0.000041166666666666673`, "TestSize" -> 
                 110, "TrainingSize" -> 40, "TrainingTime" -> 
                 0.007938083333333332, "TrainingMemory" -> 65152., 
                 "ModelMemory" -> 14904., "ExperimentCount" -> 11, 
                 "ModelUtility" -> 0.520726116795555, 
                 "MeanCrossEntropyHistory" -> {
                   PlusMinus[0.023778688815642823`, 0.22694245495871765`], 
                   PlusMinus[0., 0.21584218609618472`], 
                   PlusMinus[0.029675371702672208`, 0.2802545715962445], 
                   PlusMinus[0., 0.2738128923351793], 
                   PlusMinus[0.20371265944600642`, 0.1701959531286445], 
                   PlusMinus[0.12724607454276535`, 0.20364391431654613`], 
                   PlusMinus[0.19083677569339125`, 0.35833154086975255`], 
                   PlusMinus[0.3156564697455858, 0.27902406712915506`], 
                   PlusMinus[0., 0.22260538305822186`], 
                   PlusMinus[0.3190683873947212, 0.25827263882540824`], 
                   PlusMinus[0., 0.24128116342763026`]}, 
                 "StandardDeviationHistory" -> {
                   PlusMinus[0.8033128093915215, 0.3862014431057399], 
                   PlusMinus[0.7971971623390688, 0.3928687623124461], 
                   PlusMinus[0.8034394585819343, 0.38613219348323735`], 
                   PlusMinus[0.7977276395426207, 0.39250195352425427`], 
                   PlusMinus[0.8131933151881289, 0.37619560658643547`], 
                   PlusMinus[0.8056842691046416, 0.3838903296641002], 
                   PlusMinus[0.8101894545330841, 0.37945712179268976`], 
                   PlusMinus[0.8198180874854993, 0.3703327193179086], 
                   PlusMinus[0.7957480192735111, 0.3944414678789298], 
                   PlusMinus[0.8201283284306413, 0.36997341201047995`], 
                   PlusMinus[0.7991076317982937, 0.39072897957466174`]}]}, 
              "PredictedPerformances" -> 
              Association[
               "EvaluationTime" -> 0.000041166666666666673`, "ModelMemory" -> 
                14904., "StandardDeviation" -> 
                PlusMinus[0.8063316706215887, 0.11569114138479189`], 
                "TrainingMemory" -> 65152., "TrainingTime" -> 
                0.011907124999999998`], "Index" -> 9], 
            Association[
             "Value" -> "LinearRegression", "Options" -> 
              Association[
               "L1Regularization" -> Association["Value" -> 0], 
                "L2Regularization" -> Association["Value" -> 100000.], 
                "OptimizationMethod" -> Association["Value" -> Automatic], 
                MaxIterations -> Association["Value" -> 30]]] -> 
            Association["Experiments" -> {
                Association[
                "MeanCrossEntropy" -> 
                 PlusMinus[1.98359966133003, 0.05795638993454739], 
                 "StandardDeviation" -> 
                 PlusMinus[1.8241797662025505`, 0.10049497156189939`], 
                 "EvaluationTime" -> 0.000040300000000000004`, "TestSize" -> 
                 100, "TrainingSize" -> 40, "TrainingTime" -> 
                 0.009522999999999998, "TrainingMemory" -> 68045.09090909091, 
                 "ModelMemory" -> 14904., "ExperimentCount" -> 10, 
                 "ModelUtility" -> 0.23419813158070676`, 
                 "MeanCrossEntropyHistory" -> {
                   PlusMinus[2.007636265961581, 0.16016071670641033`], 
                   PlusMinus[2.066854945663288, 0.17830747429605717`], 
                   PlusMinus[1.9111159089376342`, 0.13610499750971217`], 
                   PlusMinus[2.063765327737208, 0.16443072654083882`], 
                   PlusMinus[1.9661992327218496`, 0.14919211709337343`], 
                   PlusMinus[2.0984465797382645`, 0.1904977950469535], 
                   PlusMinus[1.973274140192332, 0.13491230361024623`], 
                   PlusMinus[1.8767577790570704`, 0.13449048916881418`], 
                   PlusMinus[2.2046783494111204`, 0.18041893842994136`], 
                   PlusMinus[1.8958298678386973`, 0.12858518258959345`]}, 
                 "StandardDeviationHistory" -> {
                   PlusMinus[1.8232713153791071`, 0.2572823597665627], 
                   PlusMinus[1.9282953793444502`, 0.26064848226109655`], 
                   PlusMinus[1.6087178688189512`, 0.27194462988241497`], 
                   PlusMinus[1.923203867304859, 0.23432312678495965`], 
                   PlusMinus[1.7389386327217633`, 0.2601538615011778], 
                   PlusMinus[1.9782548889377318`, 0.2676256936785278], 
                   PlusMinus[1.754074761430875, 0.22073894053919596`], 
                   PlusMinus[1.5139064575071537`, 0.30296639002731174`], 
                   PlusMinus[2.122469799124197, 0.20429672044075997`], 
                   PlusMinus[1.5680182688681217`, 0.2657078505992742]}]}, 
              "PredictedPerformances" -> 
              Association[
               "EvaluationTime" -> 0.000040300000000000004`, "ModelMemory" -> 
                14904., "StandardDeviation" -> 
                PlusMinus[1.8241797662025505`, 0.10049497156189939`], 
                "TrainingMemory" -> 68045.09090909091, "TrainingTime" -> 
                0.014284499999999999`], "Index" -> 10], 
            Association[
             "Value" -> "LinearRegression", "Options" -> 
              Association[
               "L1Regularization" -> Association["Value" -> 0], 
                "L2Regularization" -> Association["Value" -> 100.], 
                "OptimizationMethod" -> Association["Value" -> Automatic], 
                MaxIterations -> Association["Value" -> 30]]] -> 
            Association["Experiments" -> {
                Association[
                "MeanCrossEntropy" -> 
                 PlusMinus[1.6849361884477885`, 0.057827015753037544`], 
                 "StandardDeviation" -> 
                 PlusMinus[1.447864308564014, 0.08142941103697517], 
                 "EvaluationTime" -> 0.00004175454545454545, "TestSize" -> 
                 100, "TrainingSize" -> 40, "TrainingTime" -> 
                 0.008228818181818181, "TrainingMemory" -> 65135.27272727273, 
                 "ModelMemory" -> 14904., "ExperimentCount" -> 10, 
                 "ModelUtility" -> 0.29500159336164467`, 
                 "MeanCrossEntropyHistory" -> {
                   PlusMinus[1.7027353801388485`, 0.13938146366629273`], 
                   PlusMinus[1.8438632633423038`, 0.17395680889885046`], 
                   PlusMinus[1.6004020461232775`, 0.11604237274615946`], 
                   PlusMinus[1.8051102937827292`, 0.1556673883758098], 
                   PlusMinus[1.6725433478171179`, 0.1263027167839206], 
                   PlusMinus[1.8054994417807437`, 0.17661106590408424`], 
                   PlusMinus[1.7000020547267138`, 0.12657843637899568`], 
                   PlusMinus[1.5539698357729232`, 0.12634754814395005`], 
                   PlusMinus[1.9296592939397172`, 0.1569770299549281], 
                   PlusMinus[1.5756194349000703`, 0.10152572045757284`]}, 
                 "StandardDeviationHistory" -> {
                   PlusMinus[1.4145357151422595`, 0.21544370727991696`], 
                   PlusMinus[1.5643978049320069`, 0.20219111851875055`], 
                   PlusMinus[1.2783406087661489`, 0.23323171775596663`], 
                   PlusMinus[1.5293136326672017`, 0.19899447116328012`], 
                   PlusMinus[1.3754719924892274`, 0.2152399140185817], 
                   PlusMinus[1.5300531504843093`, 0.21901874323600604`], 
                   PlusMinus[1.4107125016853324`, 0.2050495377535391], 
                   PlusMinus[1.2154764671382574`, 0.2628101836569297], 
                   PlusMinus[1.6484000352244825`, 0.1704119205642899], 
                   PlusMinus[1.2390300883845056`, 0.2319690183537878]}]}, 
              "PredictedPerformances" -> 
              Association[
               "EvaluationTime" -> 0.00004175454545454545, "ModelMemory" -> 
                14904., "StandardDeviation" -> 
                PlusMinus[1.447864308564014, 0.08142941103697517], 
                "TrainingMemory" -> 65135.27272727273, "TrainingTime" -> 
                0.012343227272727271`], "Index" -> 11], 
            Association[
             "Value" -> "LinearRegression", "Options" -> 
              Association[
               "L1Regularization" -> Association["Value" -> 0], 
                "L2Regularization" -> Association["Value" -> 0.01], 
                "OptimizationMethod" -> Association["Value" -> Automatic], 
                MaxIterations -> Association["Value" -> 30]]] -> 
            Association["Experiments" -> {
                Association[
                "MeanCrossEntropy" -> 
                 PlusMinus[0.10692253841786149`, 0.08078145311811252], 
                 "StandardDeviation" -> 
                 PlusMinus[0.8063205442589632, 0.11569449129964522`], 
                 "EvaluationTime" -> 0.000042208333333333334`, "TestSize" -> 
                 110, "TrainingSize" -> 40, "TrainingTime" -> 
                 0.009359333333333332, "TrainingMemory" -> 65168., 
                 "ModelMemory" -> 14904., "ExperimentCount" -> 11, 
                 "ModelUtility" -> 0.5207326806608518, 
                 "MeanCrossEntropyHistory" -> {
                   PlusMinus[0.023203306461146322`, 0.22699123154789963`], 
                   PlusMinus[0., 0.2157979027161371], 
                   PlusMinus[0.029599258421253657`, 0.2803655727735208], 
                   PlusMinus[0., 0.27386568804448524`], 
                   PlusMinus[0.20354184310238582`, 0.17021350703839738`], 
                   PlusMinus[0.12697132987647886`, 0.20358025976139704`], 
                   PlusMinus[0.19076204151047638`, 0.3586610243671817], 
                   PlusMinus[0.31544189744033235`, 0.27898073599094225`], 
                   PlusMinus[0., 0.22274389704909656`], 
                   PlusMinus[0.31873206148768674`, 0.25835870433443814`], 
                   PlusMinus[0., 0.24122211399100063`]}, 
                 "StandardDeviationHistory" -> {
                   PlusMinus[0.8032830564599981, 0.38623291292746], 
                   PlusMinus[0.7971874146510707, 0.3928794990439463], 
                   PlusMinus[0.8034363281181777, 0.38613574816389507`], 
                   PlusMinus[0.7977481719781588, 0.39247928079567884`], 
                   PlusMinus[0.8131788928034088, 0.37620950792182045`], 
                   PlusMinus[0.8056592324401433, 0.3839155044068014], 
                   PlusMinus[0.8101864167482151, 0.3794610867623705], 
                   PlusMinus[0.8198057769411099, 0.37034374034919787`], 
                   PlusMinus[0.7957310858434333, 0.3944610859011775], 
                   PlusMinus[0.8201088242817071, 0.3699914510791372], 
                   PlusMinus[0.7991020022238401, 0.39073503094754664`]}]}, 
              "PredictedPerformances" -> 
              Association[
               "EvaluationTime" -> 0.000042208333333333334`, "ModelMemory" -> 
                14904., "StandardDeviation" -> 
                PlusMinus[0.8063205442589632, 0.11569449129964522`], 
                "TrainingMemory" -> 65168., "TrainingTime" -> 0.014039], 
              "Index" -> 12], 
            Association[
             "Value" -> "LinearRegression", "Options" -> 
              Association[
               "L1Regularization" -> Association["Value" -> 0], 
                "L2Regularization" -> Association["Value" -> 0.1], 
                "OptimizationMethod" -> Association["Value" -> Automatic], 
                MaxIterations -> Association["Value" -> 30]]] -> 
            Association["Experiments" -> {
                Association[
                "MeanCrossEntropy" -> 
                 PlusMinus[0.10536280706714204`, 0.08074992257900701], 
                 "StandardDeviation" -> 
                 PlusMinus[0.8062218582592731, 0.11572400929048976`], 
                 "EvaluationTime" -> 0.000047124999999999993`, "TestSize" -> 
                 110, "TrainingSize" -> 40, "TrainingTime" -> 
                 0.011137750000000002`, "TrainingMemory" -> 69521.33333333334,
                  "ModelMemory" -> 14904., "ExperimentCount" -> 11, 
                 "ModelUtility" -> 0.520790933189373, 
                 "MeanCrossEntropyHistory" -> {
                   PlusMinus[0.017719098419425205`, 0.2274984909312668], 
                   PlusMinus[0., 0.2153211895306009], 
                   PlusMinus[0.02898629916867757, 0.2813773553795492], 
                   PlusMinus[0., 0.27428383852899113`], 
                   PlusMinus[0.20197546956328055`, 0.17039358171549232`], 
                   PlusMinus[0.12444719678954475`, 0.20292835910806298`], 
                   PlusMinus[0.19021650877055168`, 0.3618132817236267], 
                   PlusMinus[0.313342821150962, 0.2784754329693242], 
                   PlusMinus[0., 0.22414103981235356`], 
                   PlusMinus[0.3154238046762437, 0.2591689630159618], 
                   PlusMinus[0., 0.24059851385574665`]}, 
                 "StandardDeviationHistory" -> {
                   PlusMinus[0.8029983822780923, 0.38653473441066927`], 
                   PlusMinus[0.7971183068744252, 0.39295508223271375`], 
                   PlusMinus[0.8034126408101498, 0.38616325813201635`], 
                   PlusMinus[0.7979678178914693, 0.39223666542298335`], 
                   PlusMinus[0.8130446931364402, 0.3763391037180845], 
                   PlusMinus[0.8054246879138474, 0.38415138707386287`], 
                   PlusMinus[0.8101701043599859, 0.37948696879550115`], 
                   PlusMinus[0.819689164107362, 0.3704480806688402], 
                   PlusMinus[0.7955799497515174, 0.3946367660275881], 
                   PlusMinus[0.8199210055795554, 0.37016549094131673`], 
                   PlusMinus[0.7990518920052326, 0.390788794237165]}]}, 
              "PredictedPerformances" -> 
              Association[
               "EvaluationTime" -> 0.000047124999999999993`, "ModelMemory" -> 
                14904., "StandardDeviation" -> 
                PlusMinus[0.8062218582592731, 0.11572400929048976`], 
                "TrainingMemory" -> 69521.33333333334, "TrainingTime" -> 
                0.016706625000000003`], "Index" -> 13]], 
           TypeSystem`Assoc[
            TypeSystem`Struct[{"Value", "Options"}, {
              TypeSystem`Atom[
               TypeSystem`Enumeration["LinearRegression"]], 
              TypeSystem`Assoc[TypeSystem`AnyType, 
               TypeSystem`Struct[{"Value"}, {TypeSystem`AnyType}], 4]}], 
            
            TypeSystem`Struct[{
             "Experiments", "PredictedPerformances", "Index"}, {
              TypeSystem`Vector[
               
               TypeSystem`Struct[{
                "MeanCrossEntropy", "StandardDeviation", "EvaluationTime", 
                 "TestSize", "TrainingSize", "TrainingTime", "TrainingMemory",
                  "ModelMemory", "ExperimentCount", "ModelUtility", 
                 "MeanCrossEntropyHistory", "StandardDeviationHistory"}, {
                TypeSystem`AnyType, TypeSystem`AnyType, 
                 TypeSystem`Atom[Real], 
                 TypeSystem`Atom[Integer], 
                 TypeSystem`Atom[Integer], 
                 TypeSystem`Atom[Real], 
                 TypeSystem`Atom[Real], 
                 TypeSystem`Atom[Real], 
                 TypeSystem`Atom[Integer], 
                 TypeSystem`Atom[Real], 
                 TypeSystem`Vector[TypeSystem`AnyType, TypeSystem`AnyLength], 
                 
                 TypeSystem`Vector[
                 TypeSystem`AnyType, TypeSystem`AnyLength]}], 
               TypeSystem`AnyLength], 
              
              TypeSystem`Struct[{
               "EvaluationTime", "ModelMemory", "StandardDeviation", 
                "TrainingMemory", "TrainingTime"}, {
                TypeSystem`Atom[Real], 
                TypeSystem`Atom[Real], TypeSystem`AnyType, 
                TypeSystem`Atom[Real], 
                TypeSystem`Atom[Real]}], 
              TypeSystem`Atom[Integer]}], 13], 
           Association["ID" -> 93222407680227]], "MaxTrainingSize" -> 50, 
         "LastReportingTime" -> 3.740043746507747`16.325451671241666*^9, 
         "PreprocessorEvaluationTime" -> 6.86474609375`2.*^-6, 
         "PreprocessorMemory" -> 72176, "RoundPartitioning" -> Dataset[{
            Association[
            "TrainingSizes" -> 10, "TimeBudgets" -> 2.7618169715144814`, 
             "ElapsedTimes" -> 5.192765, "ExperimentCounts" -> 1], 
            Association[
            "TrainingSizes" -> 40, "TimeBudgets" -> 3.4522712143931042`, 
             "ElapsedTimes" -> 3.6100950000000016`, "ExperimentCounts" -> 
             136]}, 
           TypeSystem`Vector[
            
            TypeSystem`Struct[{
             "TrainingSizes", "TimeBudgets", "ElapsedTimes", 
              "ExperimentCounts"}, {
              TypeSystem`Atom[Integer], 
              TypeSystem`Atom[Real], 
              TypeSystem`Atom[Real], 
              TypeSystem`Atom[Integer]}], 2], 
           Association[
           "Origin" -> HoldComplete[GeneralUtilities`AssociationTranspose, 
              Dataset`DatasetHandle[93230997614819]], "ID" -> 
            93235292582115]]], "Log" -> 
       Association["Example" -> MachineLearning`MLDataset[
           Association[
           "f1" -> Association[
             "Type" -> "Numerical", "Weight" -> 1, 
              "Values" -> {0.376895512914067}, "ID" -> 6256679568790717639], 
            "f2" -> Association[
             "Type" -> "Numerical", "Weight" -> 1, 
              "Values" -> {-0.4368976097308743}, "ID" -> 8623262771504601198],
             "f3" -> Association[
             "Type" -> "Numerical", "Weight" -> 1, 
              "Values" -> {-0.348473995758535}, "ID" -> 4132395819933524331], 
            "f4" -> Association[
             "Type" -> "Numerical", "Weight" -> 1, 
              "Values" -> {-0.9322229326022331}, "ID" -> 8694373178801165222],
             "f5" -> Association[
             "Type" -> "Numerical", "Weight" -> 1, 
              "Values" -> {0.3846343038875255}, "ID" -> 1348181103987964274], 
            "f6" -> Association[
             "Type" -> "Numerical", "Weight" -> 1, 
              "Values" -> {0.8440446658686045}, "ID" -> 157490378243617503], 
            "f7" -> Association[
             "Type" -> "Boolean", "Weight" -> 1, "Values" -> {0}, "ID" -> 
              939946895530328469], "f8" -> 
            Association[
             "Type" -> "Boolean", "Weight" -> 1, "Values" -> {0}, "ID" -> 
              3064004026125996483]], 
           Association[
           "ExampleNumber" -> 1, "ExampleWeights" -> 1, "RawExample" -> 
            False]], "TrainingTime" -> 10.425365, "MaxTrainingMemory" -> 
         26416328, "DataMemory" -> 15648, "FunctionMemory" -> 270928, 
         "LanguageVersion" -> {11.3, 0}, "Date" -> 
         DateObject[{2018, 7, 8, 13, 2, 26.722587`8.17945348173413}, 
           "Instant", "Gregorian", -4.], "ProcessorCount" -> 2, 
         "ProcessorType" -> "x86-64", "OperatingSystem" -> "MacOSX", 
         "SystemWordLength" -> 64, "Evaluations" -> {}]]], "TestSet" -> 
    Association[
     "Input" -> {{
        0.9598584817192917, -0.5771956715742204, -0.5653755851375335, \
-0.8132256465495904, 0.33697614308648527`, -0.5081602454870628, 1, 0}, {
        0.4402816054169447, 
         0.2945311537411266, -0.3652755354393933, -0.4200826996972622, \
-0.332303790152801, 0.17260097064364643`, 1, 0}, {
        0.9398957688162985, 0.3482492166128499, 0.04552415997050385, 
         0.1341800245367426, 0.1993828927838388, 0.2228382602483987, 0, 1}, {
        0.5297518610340886, -0.4728493342160247, -0.7037677405035327, 
         0.3706056253989942, 0.03888941826174497, -0.44481095520581704`, 0, 
         1}, {0.5558348064901191, 0.9434055778260095, 0.28492774225592044`, 
         0.19985958631096468`, -0.5498393865810169, 0.776354623782177, 0, 
         1}, {-0.8633220999574234, 
         0.512785924148881, -0.47054009916196105`, -0.5984607082808338, \
-0.015088746064632286`, 0.08250204492776625, 1, 
         0}, {-0.4300895987140678, -0.8898247472140275, 
         0.015972668490922715`, -0.5107627102322434, -0.014460756618254411`, 
         0.5425311940878115, 0, 0}, {-0.7876105066034951, 0.6596551015189882, 
         0.05598697109821327, -0.6089908504541173, -0.023765086540547653`, 
         0.7970093956235695, 1, 
         1}, {-0.828797525793405, -0.9441624292927382, -0.5049033250389923, \
-0.7870804474778441, -0.3211472050215942, -0.9655301110282655, 0, 0}, {
        0.3340858784509604, -0.0420999433154412, 
         0.6367552040089461, -0.8887685582600953, 0.9562059572145278, 
         0.12728073334599888`, 1, 0}, {
        0.9181187029641822, -0.8216526784757177, -0.8022953595218789, 
         0.06454752491942317, 0.6931553091813845, 0.6035861775655489, 0, 
         0}, {-0.7531748812505557, 0.1869438524978264, 0.10782471950759387`, 
         0.14303200047025788`, -0.628900967535932, 0.25453155197825206`, 0, 
         0}, {-0.559042388285786, 0.525539245138325, -0.22677609312351876`, 
         0.8111846818591077, -0.0778955118298339, 0.11271363507362198`, 1, 
         1}, {-0.9987325890815497, 
         0.7040735110889806, -0.17319684036892813`, -0.523855432560631, \
-0.2196790557293138, -0.1669414854331337, 1, 
         0}, {-0.011563594214569317`, -0.5242229860331564, \
-0.4745064718562322, -0.18944112251594714`, 0.6758005868681018, 
         0.1503832681879569, 0, 0}, {-0.4781866762918323, -0.8992576450531695,
          0.6130114218608558, 0.39252336634079876`, 
         0.3813038869654415, -0.46751156197162835`, 1, 
         1}, {-0.22791212771431812`, -0.9190924722877534, \
-0.28479065841456785`, -0.6766393113224436, 
         0.48369289095800205`, -0.06928004667863563, 0, 1}, {
        0.7285974995812956, -0.9873609990704222, 
         0.27853744779823986`, -0.14430929199779197`, -0.4223000051402708, 
         0.7870838744292827, 1, 1}, {
        0.9953747129383972, 0.325174250045269, 
         0.5328374046807651, -0.3690583974836117, 
         0.593047447560882, -0.7405639972031888, 1, 1}, {
        0.3461604030838701, -0.4541561814526074, 
         0.22702153588725604`, -0.9636921840692234, -0.3789193522811556, 
         0.7320018206616687, 0, 0}}, 
      "Output" -> {-1.9549312114541437`, -1.3321334021721105`, 
       1.4415203457409462`, -0.1506349342780058, 
       1.9582280915087076`, -2.6399192434204255`, 1.2681953192887472`, 
       0.516126991352928, -2.0743707095094868`, 0.4171379884289101, 
       0.0737680297437869, 0.1600155057472774, 
       0.07339116284116953, -2.239970711841727, -0.3747328644430227, 
       2.0103697127337985`, 0.8217744329061194, 3.507741948948745, 
       0.23556136060456032`, 1.4496847900919547`}], 
    "Predictions" -> {-1.8610320429684308`, -1.3833269571016233`, 
     1.3946172695706522`, -0.21057569742094706`, 
     1.9304804914893015`, -2.5719211387723537`, 1.1128913312364248`, 
     0.1810405627798483, -2.0860977491200616`, 0.5686160109110849, 
     0.26461752673700545`, 
     0.19739766540008452`, -0.19597673325226217`, -2.447655708833679, \
-0.4261642561250244, 1.960595412037776, 0.6083797090776629, 3.125049344654455,
      0.4101865478826838, 1.4337414456382622`}, "Distributions" -> {
      NormalDistribution[-1.8610320429684308`, 0.18499737247673567`], 
      NormalDistribution[-1.3833269571016233`, 0.18499737247673567`], 
      NormalDistribution[1.3946172695706522`, 0.18499737247673567`], 
      NormalDistribution[-0.21057569742094706`, 0.18499737247673567`], 
      NormalDistribution[1.9304804914893015`, 0.18499737247673567`], 
      NormalDistribution[-2.5719211387723537`, 0.18499737247673567`], 
      NormalDistribution[1.1128913312364248`, 0.18499737247673567`], 
      NormalDistribution[0.1810405627798483, 0.18499737247673567`], 
      NormalDistribution[-2.0860977491200616`, 0.18499737247673567`], 
      NormalDistribution[0.5686160109110849, 0.18499737247673567`], 
      NormalDistribution[0.26461752673700545`, 0.18499737247673567`], 
      NormalDistribution[0.19739766540008452`, 0.18499737247673567`], 
      NormalDistribution[-0.19597673325226217`, 0.18499737247673567`], 
      NormalDistribution[-2.447655708833679, 0.18499737247673567`], 
      NormalDistribution[-0.4261642561250244, 0.18499737247673567`], 
      NormalDistribution[1.960595412037776, 0.18499737247673567`], 
      NormalDistribution[0.6083797090776629, 0.18499737247673567`], 
      NormalDistribution[3.125049344654455, 0.18499737247673567`], 
      NormalDistribution[0.4101865478826838, 0.18499737247673567`], 
      NormalDistribution[1.4337414456382622`, 0.18499737247673567`]}, 
    "Modes" -> {-1.8610320429684308`, -1.3833269571016233`, 
     1.3946172695706522`, -0.21057569742094706`, 
     1.9304804914893015`, -2.5719211387723537`, 1.1128913312364248`, 
     0.1810405627798483, -2.0860977491200616`, 0.5686160109110849, 
     0.26461752673700545`, 
     0.19739766540008452`, -0.19597673325226217`, -2.447655708833679, \
-0.4261642561250244, 1.960595412037776, 0.6083797090776629, 3.125049344654455,
      0.4101865478826838, 1.4337414456382622`}, "Weights" -> 
    SparseArray[Automatic, {20}, 1., {1, {{0, 0}, {}}, {}}], 
    "BatchEvaluationTime" -> 0.0043505, "SingleEvaluationTime" -> 
    0.0038222916666666665`2., "Version" -> {11.3, 0}]],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.739718054842402*^9, 3.740058151301886*^9},
 CellLabel->
  "Out[401]=",ExpressionUUID->"70edd8dd-f0db-4c62-8293-c5423703b579"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"pm", " ", "/@", " ", 
  RowBox[{"{", 
   RowBox[{"\"\<ResidualPlot\>\"", ",", "\"\<StandardDeviation\>\""}], 
   "}"}]}]], "Input",
 CellLabel->"In[37]:=",ExpressionUUID->"8ae3e6a3-4a68-491f-9109-51e7da70b311"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   GraphicsBox[{{}, GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGCwAWIQ7fD8gMjSypf785pYI9Y+umQvZ3z38487D+wdatdy
bM9v3391kriE86I/9lWql7S+Rj2x11v4u23uR2aHA78qizI6j9jLbf/nwnaQ
/cADx719b1g37d936Z7ZlpoP+x9c87Vk/rnEPu7/w2XVV/7sd9hcLcMWvGr/
zW3bzzol/dr/5fN1hW7hK/YBOs7aDVyt+8uWtFq8jr9hX/4oyflf84X9gpz+
ixfXXdz/SCio69vjZ/YNO3VfcXdtss/16bN5dOme/b31+navGe/uN3o1lTv0
5jf7hKci5xw8L+xPWXPwRPffD/YadguOsktdte9rOZU3M/Gt/YaQY4YHXfbt
r7kqZO4c93H/hlgGpUu399hzeRTzVzv9sH+guWanveMmewGev4yT7z/a/4Gt
v+7c7q37Obenlb1N/bH/wWoh/RKe5fbJH2rmKET/t+cISrZI4Dm1HxZ+DFAA
Cz8YHxZ+MD4s/ODqoeEH48PCD8aHhR+MDws/GB8WfjA+LPxgfFj4wfiw8IPx
YeEH48PCD8aHhR+MDws/GB8WfjA+LPxgfFj4wfiw8IPxR9MfZekPAK2eq/8=

      "], {{{}, {}, {}, 
        {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.3], 
         LineBox[{22, 2}], LineBox[{25, 5}], LineBox[{27, 7}], 
         LineBox[{30, 10}], LineBox[{32, 12}], LineBox[{33, 13}], 
         LineBox[{35, 15}], LineBox[{38, 18}], LineBox[{40, 20}]}, 
        {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.3], 
         LineBox[{21, 1}], LineBox[{23, 3}], LineBox[{24, 4}], 
         LineBox[{26, 6}], LineBox[{28, 8}], LineBox[{29, 9}], 
         LineBox[{31, 11}], LineBox[{34, 14}], LineBox[{36, 16}], 
         LineBox[{37, 17}], LineBox[{39, 19}]}}, {{}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
         0.012833333333333334`], AbsoluteThickness[1.6], 
         PointBox[{41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55,
           56, 57, 58, 59, 60}]}, {}}}], {}, {}, {}, {}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->{True, False},
    AxesLabel->{None, None},
    AxesOrigin->{0, 0.},
    DisplayFunction->Identity,
    Frame->{{True, False}, {True, False}},
    FrameLabel->{{
       FormBox["\"actual value - predicted value\"", TraditionalForm], None}, {
       FormBox["\"predicted value\"", TraditionalForm], None}},
    FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
    GridLines->{None, None},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    ImagePadding->All,
    Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
          (Identity[#]& )[
           Part[#, 1]], 
          (Identity[#]& )[
           Part[#, 2]]}& ), "CopiedValueFunction" -> ({
          (Identity[#]& )[
           Part[#, 1]], 
          (Identity[#]& )[
           Part[#, 2]]}& )}},
    PlotRange->{{-2.9692502393944684`, 
     2.492976240686537}, {-0.667908394638316, 0.667908394638316}},
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {0, 0}},
    Ticks->{Automatic, Automatic}], ",", "0.25608486027718996`"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.739718071796795*^9},
 CellLabel->"Out[37]=",ExpressionUUID->"09328ea8-3c82-452d-a8b6-e4770080960c"]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.74006062882016*^9, 
  3.740060629881715*^9}},ExpressionUUID->"3c645171-e12d-460e-bb3d-\
d48938748e82"]
}, Open  ]],

Cell[CellGroupData[{

Cell["NeuralNetwork", "Section",
 CellChangeTimes->{{3.7397176223262377`*^9, 
  3.739717629954794*^9}},ExpressionUUID->"6d513e21-1ff1-48ee-832f-\
2e561a48a3a5"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"network", " ", "=", " ", 
  RowBox[{"NetChain", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"LinearLayer", "[", "32", "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{"ElementwiseLayer", "[", "\"\<Sigmoid\>\"", "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"LinearLayer", "[", "20", "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{"LinearLayer", "[", "1", "]"}]}], "\[IndentingNewLine]", "}"}], 
    ",", "\[IndentingNewLine]", 
    RowBox[{"\"\<Input\>\"", "\[Rule]", "8"}], ",", "\[IndentingNewLine]", 
    RowBox[{"\"\<Output\>\"", "\[Rule]", "1"}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.739718110586678*^9, 3.7397182113335342`*^9}, {
  3.7397191796394243`*^9, 3.7397191853923798`*^9}, {3.739719246418309*^9, 
  3.739719436135602*^9}, {3.739719482794931*^9, 3.7397195176659822`*^9}, {
  3.739719626607998*^9, 3.7397196974488697`*^9}},
 CellLabel->
  "In[418]:=",ExpressionUUID->"807ceccd-e0e2-4903-a15c-942be07fa97e"],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["NetChain", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open = False}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"]], 
                ButtonFunction :> (Typeset`open = True), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              OverlayBox[{
                GraphicsBox[{
                  Thickness[0.014925373134328358`], {
                   GrayLevel[0.6], 
                   Thickness[0.018686567164179105`], 
                   Opacity[1.], 
                   JoinForm[{"Miter", 10.}], 
                   
                   JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 91.5}}},
                     CurveClosed -> {0}]}, {
                   GrayLevel[0.6], 
                   Thickness[0.018686567164179105`], 
                   Opacity[1.], 
                   JoinForm[{"Miter", 10.}], 
                   
                   JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 91.5}}},
                     CurveClosed -> {0}]}, {
                   FaceForm[{
                    GrayLevel[0.9], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 
                    79.5}}}]}, {
                   FaceForm[{
                    GrayLevel[0.6], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                    15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                    103.}, {23., 103.}}}]}, {
                   FaceForm[{
                    GrayLevel[0.9], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    29.5, 103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 
                    79.5}}}]}, {
                   FaceForm[{
                    GrayLevel[0.6], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                    29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                    103.}, {37., 103.}}}]}, {
                   FaceForm[{
                    GrayLevel[0.9], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    43.5, 103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 
                    79.5}}}]}, {
                   FaceForm[{
                    GrayLevel[0.6], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                    43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                    103.}, {51., 103.}}}]}, {
                   FaceForm[{
                    GrayLevel[0.6], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{28., 91.5}, {
                    25., 95.}, {25., 88.}}}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{42., 91.5}, {
                    39., 95.}, {39., 88.}}}]}}, ImageMargins -> 0, 
                 ImageSize -> {36, Automatic}, PlotRangePadding -> 0, 
                 BaseStyle -> GrayLevel[0.6]], 
                StyleBox["uninitialized", 
                 RGBColor[0.66, 0, 0], FontSize -> 8, FontFamily -> "Roboto", 
                 Background -> GrayLevel[1, 0.65]]}, Alignment -> {Center, 
                 Scaled[0.0001]}], 
              GridBox[{{
                 StyleBox[
                  TemplateBox[{
                    TemplateBox[{
                    StyleBox["\"Input\"", 
                    GrayLevel[0], StripOnInput -> False], "\" \"", 
                    "\"port\""}, "RowDefault"], "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox[
                  TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"8\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                  "SummaryItem"]}, {
                 StyleBox[
                  TemplateBox[{
                    TemplateBox[{
                    StyleBox["\"Output\"", 
                    GrayLevel[0], StripOnInput -> False], "\" \"", 
                    "\"port\""}, "RowDefault"], "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox[
                  TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"1\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                  "SummaryItem"]}, {
                 StyleBox[
                  
                  TemplateBox[{"\"Number of layers\"", "\":\""}, 
                   "RowDefault"], "SummaryItemAnnotation"], 
                 StyleBox["4", "SummaryItem"]}}, BaselinePosition -> {2, 1}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, BaselinePosition -> {1, 3}],
           True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"]], 
                ButtonFunction :> (Typeset`open = False), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              OverlayBox[{
                GraphicsBox[{
                  Thickness[0.014925373134328358`], {
                   GrayLevel[0.6], 
                   Thickness[0.018686567164179105`], 
                   Opacity[1.], 
                   JoinForm[{"Miter", 10.}], 
                   
                   JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 91.5}}},
                     CurveClosed -> {0}]}, {
                   GrayLevel[0.6], 
                   Thickness[0.018686567164179105`], 
                   Opacity[1.], 
                   JoinForm[{"Miter", 10.}], 
                   
                   JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 91.5}}},
                     CurveClosed -> {0}]}, {
                   FaceForm[{
                    GrayLevel[0.9], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 
                    79.5}}}]}, {
                   FaceForm[{
                    GrayLevel[0.6], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                    15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                    103.}, {23., 103.}}}]}, {
                   FaceForm[{
                    GrayLevel[0.9], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    29.5, 103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 
                    79.5}}}]}, {
                   FaceForm[{
                    GrayLevel[0.6], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                    29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                    103.}, {37., 103.}}}]}, {
                   FaceForm[{
                    GrayLevel[0.9], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    43.5, 103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 
                    79.5}}}]}, {
                   FaceForm[{
                    GrayLevel[0.6], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                    43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                    103.}, {51., 103.}}}]}, {
                   FaceForm[{
                    GrayLevel[0.6], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{28., 91.5}, {
                    25., 95.}, {25., 88.}}}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{42., 91.5}, {
                    39., 95.}, {39., 88.}}}]}}, ImageMargins -> 0, 
                 ImageSize -> {36, Automatic}, PlotRangePadding -> 0, 
                 BaseStyle -> GrayLevel[0.6]], 
                StyleBox["uninitialized", 
                 RGBColor[0.66, 0, 0], FontSize -> 8, FontFamily -> "Roboto", 
                 Background -> GrayLevel[1, 0.65]]}, Alignment -> {Center, 
                 Scaled[0.0001]}], 
              GridBox[{{
                 
                 DynamicModuleBox[{
                  NeuralNetworks`Private`NetChain`assoc3 = 
                   Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association[
                    "1" -> Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`TensorT[{32, 8}, NeuralNetworks`RealT], 
                    "Biases" -> NeuralNetworks`Nullable[
                    NeuralNetworks`TensorT[{32}, NeuralNetworks`RealT]]], 
                    "Parameters" -> 
                    Association[
                    "OutputDimensions" -> {32}, "$OutputSize" -> 32, 
                    "$InputSize" -> 8, "$InputDimensions" -> {8}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{8}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{32}, NeuralNetworks`RealT]]], "2" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[2], 
                    Association[
                    NeuralNetworks`Private`ScalarSymbol[2] -> {"Sigmoid", 
                    NeuralNetworks`Private`ScalarSymbol[1]}]]], 
                    "$Dimensions" -> {32}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{32}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{32}, NeuralNetworks`RealT]]], "3" -> 
                    Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`TensorT[{20, 32}, NeuralNetworks`RealT], 
                    "Biases" -> NeuralNetworks`Nullable[
                    NeuralNetworks`TensorT[{20}, NeuralNetworks`RealT]]], 
                    "Parameters" -> 
                    Association[
                    "OutputDimensions" -> {20}, "$OutputSize" -> 20, 
                    "$InputSize" -> 32, "$InputDimensions" -> {32}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{32}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{20}, NeuralNetworks`RealT]]], "4" -> 
                    Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`TensorT[{1, 20}, NeuralNetworks`RealT], 
                    "Biases" -> NeuralNetworks`Nullable[
                    NeuralNetworks`TensorT[{1}, NeuralNetworks`RealT]]], 
                    "Parameters" -> 
                    Association[
                    "OutputDimensions" -> {1}, "$OutputSize" -> 1, 
                    "$InputSize" -> 20, "$InputDimensions" -> {20}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{20}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{1}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "4", "Outputs", "Output"]}, "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{8}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{1}, NeuralNetworks`RealT]]], 
                   NeuralNetworks`Private`NetChain`opart, 
                   NeuralNetworks`Private`NetChain`part, 
                   NeuralNetworks`Private`NetChain`selected = Null}, 
                  DynamicBox[
                   GridBox[{{
                    NeuralNetworks`Private`NetChain`MouseClickBoxes[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    TagBox[
                    "\"\"", Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"Input\"", 
                    Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"8\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"1\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["LinearLayer", 
                    RGBColor[0.66, 0, 0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"32\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"2\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox[
                    RowBox[{"\"Sigmoid\"", "[", 
                    StyleBox["\"x\"", Italic, StripOnInput -> False], "]"}], 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"32\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"3\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["LinearLayer", 
                    RGBColor[0.66, 0, 0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"20\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"4\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "4"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["LinearLayer", 
                    RGBColor[0.66, 0, 0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "4"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"1\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "4"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    "\"\"", Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"Output\"", 
                    Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"1\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1.1}}}], "Grid"], 
                    If[
                    ListQ[
                    NeuralNetworks`Private`NetChain`part = MouseAnnotation[]],
                     If[NeuralNetworks`Private`NetChain`opart === 
                    NeuralNetworks`Private`NetChain`part, 
                    NeuralNetworks`Private`NetChain`selected = Null; 
                    NeuralNetworks`Private`NetChain`opart = Null, 
                    NeuralNetworks`Private`NetChain`selected = 
                    Part[NeuralNetworks`Private`NetChain`assoc3, 
                    Apply[Sequence, NeuralNetworks`Private`NetChain`part]]; 
                    NeuralNetworks`Private`NetChain`opart = 
                    NeuralNetworks`Private`NetChain`part; Null]; Null]]}, 
                    NeuralNetworks`Private`NetChain`fmtSelected[
                    NeuralNetworks`Private`NetChain`selected, 
                    NeuralNetworks`Private`NetChain`part, 
                    NeuralNetworks`Private`GetSharedArrays[
                    NeuralNetworks`Private`NetChain`assoc3]]}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridFrameMargins -> {{0, 0}, {0, 0}}], 
                   TrackedSymbols :> {
                    NeuralNetworks`Private`NetChain`selected}], 
                  Initialization :> {NetChain}]}}, BaselinePosition -> 
               Automatic, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open], ImageSize -> Automatic], BaselinePosition -> 
        Baseline, 
        BaseStyle -> {
         ShowStringCharacters -> False, NumberMarks -> False, PrintPrecision -> 
          3, ShowSyntaxStyles -> False}]], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("NetChain[<>]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.739719734976653*^9, 3.740060621952793*^9},
 CellLabel->
  "Out[418]=",ExpressionUUID->"6dd5e15d-2d41-4b4d-9999-7992eb3b3b73"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"trainedNetwork", "=", 
  RowBox[{"NetTrain", "[", 
   RowBox[{"network", ",", 
    RowBox[{"Thread", "[", 
     RowBox[{"trainingData", "\[Rule]", 
      RowBox[{"Transpose", "[", 
       RowBox[{"{", "trainingResults", "}"}], "]"}]}], "]"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"ValidationSet", "\[Rule]", 
     RowBox[{"Thread", "[", 
      RowBox[{"testData", "\[Rule]", 
       RowBox[{"Transpose", "[", 
        RowBox[{"{", "testResults", "}"}], "]"}]}], "]"}]}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.7397181639609213`*^9, 3.739718166677147*^9}, {
  3.739718221873056*^9, 3.739718246883932*^9}, {3.739718361769885*^9, 
  3.739718444820704*^9}, {3.7397185183422337`*^9, 3.7397185218227777`*^9}},
 CellLabel->
  "In[126]:=",ExpressionUUID->"803b65db-2945-40e6-8bfe-7c28709c8241"],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["NetChain", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open = False}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"]], 
                ButtonFunction :> (Typeset`open = True), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              GraphicsBox[{
                Thickness[0.014925373134328358`], {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.018686567164179105`], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 91.5}}}, 
                  CurveClosed -> {0}]}, {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.018686567164179105`], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 91.5}}}, 
                  CurveClosed -> {0}]}, {
                 FaceForm[{
                   RGBColor[0.631, 0.8160000000000001, 0.498], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                  103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.40800000000000003`, 0.627, 0.196], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                  15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                  103.}, {23., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.38, 0.753, 0.89], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{29.5, 
                  103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.24300000000000002`, 0.608, 0.71], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                  29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                  103.}, {37., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.584, 0.51, 0.8390000000000001], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{43.5, 
                  103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.4, 0.396, 0.659], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                  43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                  103.}, {51., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.549, 0.549, 0.549], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{28., 91.5}, {25.,
                   95.}, {25., 88.}}}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{42., 91.5}, {39.,
                   95.}, {39., 88.}}}]}}, ImageMargins -> 0, 
               ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
              GridBox[{{
                 StyleBox[
                  TemplateBox[{
                    TemplateBox[{
                    StyleBox["\"Input\"", 
                    GrayLevel[0], StripOnInput -> False], "\" \"", 
                    "\"port\""}, "RowDefault"], "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox[
                  TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"8\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                  "SummaryItem"]}, {
                 StyleBox[
                  TemplateBox[{
                    TemplateBox[{
                    StyleBox["\"Output\"", 
                    GrayLevel[0], StripOnInput -> False], "\" \"", 
                    "\"port\""}, "RowDefault"], "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox[
                  TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"1\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                  "SummaryItem"]}, {
                 StyleBox[
                  
                  TemplateBox[{"\"Number of layers\"", "\":\""}, 
                   "RowDefault"], "SummaryItemAnnotation"], 
                 StyleBox["4", "SummaryItem"]}}, BaselinePosition -> {2, 1}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, BaselinePosition -> {1, 3}],
           True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"]], 
                ButtonFunction :> (Typeset`open = False), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              GraphicsBox[{
                Thickness[0.014925373134328358`], {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.018686567164179105`], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 91.5}}}, 
                  CurveClosed -> {0}]}, {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.018686567164179105`], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 91.5}}}, 
                  CurveClosed -> {0}]}, {
                 FaceForm[{
                   RGBColor[0.631, 0.8160000000000001, 0.498], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                  103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.40800000000000003`, 0.627, 0.196], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                  15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                  103.}, {23., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.38, 0.753, 0.89], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{29.5, 
                  103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.24300000000000002`, 0.608, 0.71], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                  29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                  103.}, {37., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.584, 0.51, 0.8390000000000001], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{43.5, 
                  103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.4, 0.396, 0.659], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                  43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                  103.}, {51., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.549, 0.549, 0.549], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{28., 91.5}, {25.,
                   95.}, {25., 88.}}}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{42., 91.5}, {39.,
                   95.}, {39., 88.}}}]}}, ImageMargins -> 0, 
               ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
              GridBox[{{
                 
                 DynamicModuleBox[{
                  NeuralNetworks`Private`NetChain`assoc3 = 
                   Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association[
                    "1" -> Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{32, 8}], "Biases" -> 
                    NeuralNetworks`Private`DummyRawArray[{32}]], "Parameters" -> 
                    Association[
                    "OutputDimensions" -> {32}, "$OutputSize" -> 32, 
                    "$InputSize" -> 8, "$InputDimensions" -> {8}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{8}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{32}, NeuralNetworks`RealT]]], "2" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[2], 
                    Association[
                    NeuralNetworks`Private`ScalarSymbol[2] -> {"Sigmoid", 
                    NeuralNetworks`Private`ScalarSymbol[1]}]]], 
                    "$Dimensions" -> {32}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{32}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{32}, NeuralNetworks`RealT]]], "3" -> 
                    Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{20, 32}], "Biases" -> 
                    NeuralNetworks`Private`DummyRawArray[{20}]], "Parameters" -> 
                    Association[
                    "OutputDimensions" -> {20}, "$OutputSize" -> 20, 
                    "$InputSize" -> 32, "$InputDimensions" -> {32}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{32}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{20}, NeuralNetworks`RealT]]], "4" -> 
                    Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{1, 20}], "Biases" -> 
                    NeuralNetworks`Private`DummyRawArray[{1}]], "Parameters" -> 
                    Association[
                    "OutputDimensions" -> {1}, "$OutputSize" -> 1, 
                    "$InputSize" -> 20, "$InputDimensions" -> {20}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{20}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{1}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "4", "Outputs", "Output"]}, "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{8}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{1}, NeuralNetworks`RealT]]], 
                   NeuralNetworks`Private`NetChain`opart, 
                   NeuralNetworks`Private`NetChain`part, 
                   NeuralNetworks`Private`NetChain`selected = Null}, 
                  DynamicBox[
                   GridBox[{{
                    NeuralNetworks`Private`NetChain`MouseClickBoxes[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    TagBox[
                    "\"\"", Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"Input\"", 
                    Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"8\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"1\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["LinearLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"32\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"2\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox[
                    RowBox[{"\"Sigmoid\"", "[", 
                    StyleBox["\"x\"", Italic, StripOnInput -> False], "]"}], 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"32\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"3\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["LinearLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"20\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"4\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "4"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["LinearLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "4"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"1\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "4"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    "\"\"", Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"Output\"", 
                    Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"1\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1.1}}}], "Grid"], 
                    If[
                    ListQ[
                    NeuralNetworks`Private`NetChain`part = MouseAnnotation[]],
                     If[NeuralNetworks`Private`NetChain`opart === 
                    NeuralNetworks`Private`NetChain`part, 
                    NeuralNetworks`Private`NetChain`selected = Null; 
                    NeuralNetworks`Private`NetChain`opart = Null, 
                    NeuralNetworks`Private`NetChain`selected = 
                    Part[NeuralNetworks`Private`NetChain`assoc3, 
                    Apply[Sequence, NeuralNetworks`Private`NetChain`part]]; 
                    NeuralNetworks`Private`NetChain`opart = 
                    NeuralNetworks`Private`NetChain`part; Null]; Null]]}, 
                    NeuralNetworks`Private`NetChain`fmtSelected[
                    NeuralNetworks`Private`NetChain`selected, 
                    NeuralNetworks`Private`NetChain`part, 
                    NeuralNetworks`Private`GetSharedArrays[
                    NeuralNetworks`Private`NetChain`assoc3]]}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridFrameMargins -> {{0, 0}, {0, 0}}], 
                   TrackedSymbols :> {
                    NeuralNetworks`Private`NetChain`selected}], 
                  Initialization :> {NetChain}]}}, BaselinePosition -> 
               Automatic, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open], ImageSize -> Automatic], BaselinePosition -> 
        Baseline, 
        BaseStyle -> {
         ShowStringCharacters -> False, NumberMarks -> False, PrintPrecision -> 
          3, ShowSyntaxStyles -> False}]], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("NetChain[<>]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.739719745188765*^9},
 CellLabel->
  "Out[126]=",ExpressionUUID->"3be0caae-032c-40f7-adf8-4db14ce2253f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"predictedTestResults", "=", 
  RowBox[{
   RowBox[{"Map", "[", 
    RowBox[{"trainedNetwork", ",", "testData"}], "]"}], 
   "\[LeftDoubleBracket]", 
   RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}]}]], "Input",
 CellChangeTimes->{{3.739718661118753*^9, 3.739718674808096*^9}, {
  3.739718794704632*^9, 3.7397188112759132`*^9}, {3.739719021554905*^9, 
  3.739719046729044*^9}},
 CellLabel->
  "In[123]:=",ExpressionUUID->"9a08e246-8f74-493c-bd49-96a677b85d76"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "0.9079099297523499`"}], ",", "0.5919840335845947`", ",", 
   "1.7394208908081055`", ",", "2.5416340827941895`", ",", 
   RowBox[{"-", "2.8631603717803955`"}], ",", 
   RowBox[{"-", "1.1789095401763916`"}], ",", 
   RowBox[{"-", "1.976555347442627`"}], ",", 
   RowBox[{"-", "1.7272307872772217`"}], ",", 
   RowBox[{"-", "0.04172295331954956`"}], ",", 
   RowBox[{"-", "0.31647825241088867`"}], ",", "0.6876722574234009`", ",", 
   "0.4742806553840637`", ",", "1.4456591606140137`", ",", 
   "1.078593134880066`", ",", "0.9483169317245483`", ",", 
   RowBox[{"-", "1.2426996231079102`"}], ",", "1.582540512084961`", ",", 
   RowBox[{"-", "0.7532302737236023`"}], ",", 
   RowBox[{"-", "1.5755000114440918`"}], ",", "1.9179878234863281`"}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.739718797744746*^9, 3.739718811923533*^9}, 
   3.739719047243208*^9, {3.739719203420803*^9, 3.739719262701404*^9}, {
   3.739719295855566*^9, 3.7397194483523397`*^9}, {3.73971951008816*^9, 
   3.739719530000822*^9}, 3.739719656864594*^9, 3.7397196874308863`*^9},
 CellLabel->
  "Out[123]=",ExpressionUUID->"096f48d7-4084-411e-9a78-2880f8ba3654"]
}, Open  ]],

Cell["StandardDeviation:", "Text",
 CellChangeTimes->{{3.73971914737335*^9, 
  3.7397191483610373`*^9}},ExpressionUUID->"3360d8f2-829b-4ed7-9afa-\
f3d749fc980a"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Sqrt", "@", 
  RowBox[{"Mean", "[", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"predictedTestResults", "-", "testResults"}], ")"}], "2"], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.739719079008553*^9, 3.739719122886141*^9}},
 CellLabel->
  "In[124]:=",ExpressionUUID->"fd67818f-9e05-4da1-8ba7-5ca5e525aa95"],

Cell[BoxData["0.28497013732401827`"], "Output",
 CellChangeTimes->{{3.7397191132329483`*^9, 3.7397191233883877`*^9}, {
  3.739719209250967*^9, 3.7397194484281473`*^9}, {3.739719510179358*^9, 
  3.739719530076449*^9}, {3.739719658445691*^9, 3.739719687490967*^9}},
 CellLabel->
  "Out[124]=",ExpressionUUID->"eec71b1c-4be5-4100-a50f-2cbaebb9e61f"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{808, 905},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
FrontEndVersion->"11.3 for Mac OS X x86 (32-bit, 64-bit Kernel) (March 5, \
2018)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 160, 3, 98, "Title",ExpressionUUID->"7dcd12ee-cf7d-405e-aa2b-c12b75ab1a41"],
Cell[743, 27, 167, 3, 35, "Text",ExpressionUUID->"71b87c75-b15e-477f-a825-eec61692b7bf"],
Cell[CellGroupData[{
Cell[935, 34, 159, 3, 67, "Section",ExpressionUUID->"75f305c0-4f65-46d2-9c82-c0ea2f82ebcc"],
Cell[1097, 39, 440, 11, 30, "Input",ExpressionUUID->"d82bf695-3747-4279-be45-a11bd57cd6e1"],
Cell[CellGroupData[{
Cell[1562, 54, 825, 22, 30, "Input",ExpressionUUID->"e943710f-eb94-48b1-845e-baf11516c1b4"],
Cell[2390, 78, 11573, 235, 864, "Output",ExpressionUUID->"d4655b43-be4c-4d17-ab63-0174af6b86cc"]
}, Open  ]],
Cell[CellGroupData[{
Cell[14000, 318, 221, 4, 30, "Input",ExpressionUUID->"d4ea2301-4efb-4446-8f4a-8cba79c5e346"],
Cell[14224, 324, 154, 3, 34, "Output",ExpressionUUID->"8d44bbd7-3577-458d-828b-b69efc0ec44c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[14415, 332, 535, 12, 52, "Input",ExpressionUUID->"42373903-1a05-4ddf-85ab-d283c7e60db3"],
Cell[14953, 346, 2008, 37, 99, "Output",ExpressionUUID->"63be8a8e-9877-486c-ae3a-985e278f71e1"]
}, Open  ]],
Cell[CellGroupData[{
Cell[16998, 388, 222, 4, 30, "Input",ExpressionUUID->"6fadab9c-4512-4250-a490-5d68a9d0e17e"],
Cell[17223, 394, 156, 3, 34, "Output",ExpressionUUID->"c8f813f3-26c2-492f-ad60-345f6e2563ef"]
}, Open  ]],
Cell[CellGroupData[{
Cell[17416, 402, 773, 21, 30, "Input",ExpressionUUID->"c98be602-6cf5-4081-b86a-11ff0ad20319"],
Cell[18192, 425, 5346, 116, 354, "Output",ExpressionUUID->"2e75c402-eb23-421c-89c9-19ded2f71dde"]
}, Open  ]],
Cell[CellGroupData[{
Cell[23575, 546, 523, 12, 30, "Input",ExpressionUUID->"6067c29e-c338-4d62-8e91-f2aa31a7da0b"],
Cell[24101, 560, 1007, 20, 48, "Output",ExpressionUUID->"1eb10013-b30b-4548-9e2a-fcb84af08a16"]
}, Open  ]],
Cell[CellGroupData[{
Cell[25145, 585, 217, 4, 30, "Input",ExpressionUUID->"fbc60357-5a61-4b76-949a-9a2370bd9612"],
Cell[25365, 591, 156, 3, 34, "Output",ExpressionUUID->"06261399-42e0-4e8b-9a4e-c786abbd72a9"]
}, Open  ]],
Cell[CellGroupData[{
Cell[25558, 599, 217, 4, 30, "Input",ExpressionUUID->"3bc92a25-4760-4be2-b94d-ad58a15ba307"],
Cell[25778, 605, 154, 3, 34, "Output",ExpressionUUID->"2db772d5-381d-4888-9e4b-8fbde68913b8"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[25981, 614, 202, 4, 67, "Section",ExpressionUUID->"52a84126-f87a-4cf9-9a93-0bda75b7449c"],
Cell[CellGroupData[{
Cell[26208, 622, 466, 11, 30, "Input",ExpressionUUID->"844a9deb-aa60-4fec-b78d-83d2c870a50f"],
Cell[26677, 635, 77476, 1389, 63, "Output",ExpressionUUID->"491331df-3795-4fdf-9882-390e99e705f1"]
}, Open  ]],
Cell[CellGroupData[{
Cell[104190, 2029, 435, 10, 30, "Input",ExpressionUUID->"82b54fb2-bb71-4f40-8b00-3978c2dde18f"],
Cell[104628, 2041, 85825, 1486, 62, "Output",ExpressionUUID->"70edd8dd-f0db-4c62-8293-c5423703b579"]
}, Open  ]],
Cell[CellGroupData[{
Cell[190490, 3532, 234, 5, 30, "Input",ExpressionUUID->"8ae3e6a3-4a68-491f-9109-51e7da70b311"],
Cell[190727, 3539, 2854, 61, 164, "Output",ExpressionUUID->"09328ea8-3c82-452d-a8b6-e4770080960c"]
}, Open  ]],
Cell[193596, 3603, 151, 3, 30, "Input",ExpressionUUID->"3c645171-e12d-460e-bb3d-d48938748e82"]
}, Open  ]],
Cell[CellGroupData[{
Cell[193784, 3611, 160, 3, 67, "Section",ExpressionUUID->"6d513e21-1ff1-48ee-832f-2e561a48a3a5"],
Cell[CellGroupData[{
Cell[193969, 3618, 1033, 20, 199, "Input",ExpressionUUID->"807ceccd-e0e2-4903-a15c-942be07fa97e"],
Cell[195005, 3640, 26672, 550, 77, "Output",ExpressionUUID->"6dd5e15d-2d41-4b4d-9999-7992eb3b3b73"]
}, Open  ]],
Cell[CellGroupData[{
Cell[221714, 4195, 827, 19, 52, "Input",ExpressionUUID->"803b65db-2945-40e6-8bfe-7c28709c8241"],
Cell[222544, 4216, 25761, 526, 77, "Output",ExpressionUUID->"3be0caae-032c-40f7-adf8-4db14ce2253f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[248342, 4747, 490, 11, 30, "Input",ExpressionUUID->"9a08e246-8f74-493c-bd49-96a677b85d76"],
Cell[248835, 4760, 1185, 22, 77, "Output",ExpressionUUID->"096f48d7-4084-411e-9a78-2880f8ba3654"]
}, Open  ]],
Cell[250035, 4785, 161, 3, 35, "Text",ExpressionUUID->"3360d8f2-829b-4ed7-9afa-f3d749fc980a"],
Cell[CellGroupData[{
Cell[250221, 4792, 341, 9, 33, "Input",ExpressionUUID->"fd67818f-9e05-4da1-8ba7-5ca5e525aa95"],
Cell[250565, 4803, 346, 5, 34, "Output",ExpressionUUID->"eec71b1c-4be5-4100-a50f-2cbaebb9e61f"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

