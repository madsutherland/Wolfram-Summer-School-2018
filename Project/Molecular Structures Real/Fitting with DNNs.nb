(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    242276,       4566]
NotebookOptionsPosition[    239300,       4506]
NotebookOutlinePosition[    239654,       4522]
CellTagsIndexPosition[    239611,       4519]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Fitting With DNNs", "Title",
 CellChangeTimes->{{3.739717271828146*^9, 
  3.739717283643135*^9}},ExpressionUUID->"7dcd12ee-cf7d-405e-aa2b-\
c12b75ab1a41"],

Cell["Markus van Almsick, WRI", "Text",
 CellChangeTimes->{{3.7397172872435217`*^9, 
  3.739717292714032*^9}},ExpressionUUID->"71b87c75-b15e-477f-a825-\
eec61692b7bf"],

Cell[CellGroupData[{

Cell["Creating Data", "Section",
 CellChangeTimes->{{3.7397172950148706`*^9, 
  3.73971730033615*^9}},ExpressionUUID->"75f305c0-4f65-46d2-9c82-\
c0ea2f82ebcc"],

Cell[BoxData[
 RowBox[{
  RowBox[{"coeff", "=", 
   RowBox[{"{", 
    RowBox[{"0.3", ",", 
     RowBox[{"-", "1"}], ",", "2.1", ",", "0.6", ",", "0.0", ",", "1.3", ",", 
     
     RowBox[{"-", "0.5"}], ",", "0.9"}], "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7397172009218683`*^9, 3.739717265730229*^9}, {
  3.7397175353806*^9, 3.739717540473413*^9}},
 CellLabel->"In[21]:=",ExpressionUUID->"d82bf695-3747-4279-be45-a11bd57cd6e1"],

Cell[BoxData[
 RowBox[{
  RowBox[{"trainingData", " ", "=", " ", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Join", "[", 
      RowBox[{
       RowBox[{"RandomReal", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
         RowBox[{"{", "6", "}"}]}], "]"}], ",", 
       RowBox[{"RandomInteger", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0", ",", "1"}], "}"}], ",", 
         RowBox[{"{", "2", "}"}]}], "]"}]}], "]"}], ",", 
     RowBox[{"{", "50", "}"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.739717473347767*^9, 3.739717550415506*^9}, {
  3.739717695802738*^9, 3.7397177011745167`*^9}},
 CellLabel->"In[27]:=",ExpressionUUID->"e943710f-eb94-48b1-845e-baf11516c1b4"],

Cell[BoxData[
 RowBox[{
  RowBox[{"trainingResults", "=", 
   RowBox[{
    RowBox[{"trainingData", ".", "coeff"}], "+", 
    RowBox[{"RandomReal", "[", 
     RowBox[{
      RowBox[{"NormalDistribution", "[", 
       RowBox[{"0", ",", "0.2"}], "]"}], ",", 
      RowBox[{"Length", "[", "trainingData", "]"}]}], "]"}]}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.739717552062099*^9, 3.739717594634424*^9}, {
  3.7397177040019293`*^9, 3.739717750870118*^9}},
 CellLabel->"In[28]:=",ExpressionUUID->"42373903-1a05-4ddf-85ab-d283c7e60db3"],

Cell[BoxData[
 RowBox[{
  RowBox[{"testData", " ", "=", " ", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Join", "[", 
      RowBox[{
       RowBox[{"RandomReal", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
         RowBox[{"{", "6", "}"}]}], "]"}], ",", 
       RowBox[{"RandomInteger", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0", ",", "1"}], "}"}], ",", 
         RowBox[{"{", "2", "}"}]}], "]"}]}], "]"}], ",", 
     RowBox[{"{", "20", "}"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.739717473347767*^9, 3.739717550415506*^9}, {
  3.739717695802738*^9, 3.739717720986071*^9}},
 CellLabel->"In[29]:=",ExpressionUUID->"c98be602-6cf5-4081-b86a-11ff0ad20319"],

Cell[BoxData[
 RowBox[{
  RowBox[{"testResults", "=", 
   RowBox[{
    RowBox[{"testData", ".", "coeff"}], "+", 
    RowBox[{"RandomReal", "[", 
     RowBox[{
      RowBox[{"NormalDistribution", "[", 
       RowBox[{"0", ",", "0.2"}], "]"}], ",", 
      RowBox[{"Length", "[", "testData", "]"}]}], "]"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.739717552062099*^9, 3.739717594634424*^9}, {
  3.7397177040019293`*^9, 3.739717748503187*^9}},
 CellLabel->"In[30]:=",ExpressionUUID->"6067c29e-c338-4d62-8e91-f2aa31a7da0b"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Predict", "Section",
 CellChangeTimes->{{3.7397176223262377`*^9, 3.739717629954794*^9}, {
  3.73971809182152*^9, 
  3.739718093056931*^9}},ExpressionUUID->"52a84126-f87a-4cf9-9a93-\
0bda75b7449c"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"p", "=", 
  RowBox[{"Predict", "[", 
   RowBox[{
    RowBox[{"Thread", "[", 
     RowBox[{"trainingData", "\[Rule]", "trainingResults"}], "]"}], ",", 
    RowBox[{"Method", "\[Rule]", "\"\<LinearRegression\>\""}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.7397176315254803`*^9, 3.739717672195689*^9}, {
  3.7397177591274347`*^9, 3.7397177631548777`*^9}},
 CellLabel->"In[31]:=",ExpressionUUID->"844a9deb-aa60-4fec-b78d-83d2c870a50f"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["PredictorFunction",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    
    TemplateBox[{PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource[
               "FEBitmaps", "SquarePlusIconMedium"]], 
              ButtonFunction :> (Typeset`open$$ = True), Appearance -> None, 
              Evaluator -> Automatic, Method -> "Preemptive"], 
             Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{{}, {{}, {
                PointSize[0.125], 
                GrayLevel[0.55], 
                
                PointBox[{{-1, 1.5}, {0, 2.3}, {1, 0.8}, {2, 2}, {3, 1.3}, {
                  4, 4.}}]}, {
                GrayLevel[0.7], 
                AbsoluteThickness[1.5], 
                
                BSplineCurveBox[{{-1, 2}, {0, 2}, {1, 1}, {2, 1}, {4, 2}, {5, 
                 4}}]}}, {}}, Axes -> {False, False}, 
             AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
             BaseStyle -> {FontFamily -> "Arial", 
               AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
             Frame -> {{True, True}, {True, True}}, 
             FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
             Directive[
               Thickness[Tiny], 
               GrayLevel[0.7]], FrameTicks -> {{None, None}, {None, None}}, 
             GridLines -> {None, None}, LabelStyle -> {FontFamily -> "Arial"},
              Method -> {"ScalingFunctions" -> None}, PlotRange -> {All, All},
              PlotRangeClipping -> True, PlotRangePadding -> {{1, 1}, {1, 1}},
              Ticks -> {None, None}, Axes -> False, AspectRatio -> 1, 
             ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}], Frame -> True, FrameTicks -> None, 
             FrameStyle -> Directive[
               Opacity[0.5], 
               Thickness[Tiny], 
               RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
             GrayLevel[0.94]], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  TagBox[
                   TooltipBox[
                    TemplateBox[{"\"Mixed\"", 
                    StyleBox[
                    
                    TemplateBox[{"\" (number: \"", "8", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    TagBox[
                    RowBox[{"{", 
                    
                    RowBox[{
                    "\"Numerical\"", ",", "\"Numerical\"", ",", 
                    "\"Numerical\"", ",", "\"Numerical\"", ",", 
                    "\"Numerical\"", ",", "\"Numerical\"", ",", "\"Boolean\"",
                     ",", "\"Boolean\""}], "}"}], Short[#, 10]& ]], 
                   Annotation[#, 
                    
                    Short[{"Numerical", "Numerical", "Numerical", "Numerical",
                     "Numerical", "Numerical", "Boolean", "Boolean"}, 10], 
                    "Tooltip"]& ], "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"LinearRegression\"", "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource[
               "FEBitmaps", "SquareMinusIconMedium"]], 
              ButtonFunction :> (Typeset`open$$ = False), Appearance -> None, 
              Evaluator -> Automatic, Method -> "Preemptive"], 
             Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{{}, {{}, {
                PointSize[0.125], 
                GrayLevel[0.55], 
                
                PointBox[{{-1, 1.5}, {0, 2.3}, {1, 0.8}, {2, 2}, {3, 1.3}, {
                  4, 4.}}]}, {
                GrayLevel[0.7], 
                AbsoluteThickness[1.5], 
                
                BSplineCurveBox[{{-1, 2}, {0, 2}, {1, 1}, {2, 1}, {4, 2}, {5, 
                 4}}]}}, {}}, Axes -> {False, False}, 
             AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
             BaseStyle -> {FontFamily -> "Arial", 
               AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
             Frame -> {{True, True}, {True, True}}, 
             FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
             Directive[
               Thickness[Tiny], 
               GrayLevel[0.7]], FrameTicks -> {{None, None}, {None, None}}, 
             GridLines -> {None, None}, LabelStyle -> {FontFamily -> "Arial"},
              Method -> {"ScalingFunctions" -> None}, PlotRange -> {All, All},
              PlotRangeClipping -> True, PlotRangePadding -> {{1, 1}, {1, 1}},
              Ticks -> {None, None}, Axes -> False, AspectRatio -> 1, 
             ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}], Frame -> True, FrameTicks -> None, 
             FrameStyle -> Directive[
               Opacity[0.5], 
               Thickness[Tiny], 
               RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
             GrayLevel[0.94]], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  TagBox[
                   TooltipBox[
                    TemplateBox[{"\"Mixed\"", 
                    StyleBox[
                    
                    TemplateBox[{"\" (number: \"", "8", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    TagBox[
                    RowBox[{"{", 
                    
                    RowBox[{
                    "\"Numerical\"", ",", "\"Numerical\"", ",", 
                    "\"Numerical\"", ",", "\"Numerical\"", ",", 
                    "\"Numerical\"", ",", "\"Numerical\"", ",", "\"Boolean\"",
                     ",", "\"Boolean\""}], "}"}], Short[#, 10]& ]], 
                   Annotation[#, 
                    
                    Short[{"Numerical", "Numerical", "Numerical", "Numerical",
                     "Numerical", "Numerical", "Boolean", "Boolean"}, 10], 
                    "Tooltip"]& ], "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"LinearRegression\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox[
                 "\"Number of training examples: \"", 
                  "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                 TagBox["50", "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  PredictorFunction[
   Association[
   "ExampleNumber" -> 50, "Input" -> 
    Association["Preprocessor" -> MachineLearning`MLProcessor["ToMLDataset", 
        Association[
        "Input" -> Association[
          "f1" -> Association["Type" -> "Numerical"], "f2" -> 
           Association["Type" -> "Numerical"], "f3" -> 
           Association["Type" -> "Numerical"], "f4" -> 
           Association["Type" -> "Numerical"], "f5" -> 
           Association["Type" -> "Numerical"], "f6" -> 
           Association["Type" -> "Numerical"], "f7" -> 
           Association["Type" -> "Boolean"], "f8" -> 
           Association["Type" -> "Boolean"]], "Output" -> 
         Association[
          "f1" -> Association["Type" -> "Numerical", "Weight" -> 1], "f2" -> 
           Association["Type" -> "Numerical", "Weight" -> 1], "f3" -> 
           Association["Type" -> "Numerical", "Weight" -> 1], "f4" -> 
           Association["Type" -> "Numerical", "Weight" -> 1], "f5" -> 
           Association["Type" -> "Numerical", "Weight" -> 1], "f6" -> 
           Association["Type" -> "Numerical", "Weight" -> 1], "f7" -> 
           Association["Type" -> "Boolean", "Weight" -> 1], "f8" -> 
           Association["Type" -> "Boolean", "Weight" -> 1]], "Preprocessor" -> 
         MachineLearning`MLProcessor["Sequence", 
           Association["Processors" -> {
              MachineLearning`MLProcessor["Transpose", 
               Association["FeatureNumber" -> 8]], 
              MachineLearning`MLProcessor["WrapMLDataset", 
               Association[
               "FeatureTypes" -> {
                 "Numerical", "Numerical", "Numerical", "Numerical", 
                  "Numerical", "Numerical", "Boolean", "Boolean"}, 
                "FeatureKeys" -> {
                 "f1", "f2", "f3", "f4", "f5", "f6", "f7", "f8"}, 
                "FeatureWeights" -> Automatic, "ExampleWeights" -> Automatic, 
                "RawExample" -> Missing["KeyAbsent", "RawExample"]]]}]], 
         "ScalarFeature" -> False, "Invertibility" -> "Perfect", "Missing" -> 
         "Allowed"]], "Processor" -> MachineLearning`MLProcessor["Sequence", 
        Association[
        "Input" -> Association[
          "f1" -> Association["Type" -> "Numerical", "Weight" -> 1], "f2" -> 
           Association["Type" -> "Numerical", "Weight" -> 1], "f3" -> 
           Association["Type" -> "Numerical", "Weight" -> 1], "f4" -> 
           Association["Type" -> "Numerical", "Weight" -> 1], "f5" -> 
           Association["Type" -> "Numerical", "Weight" -> 1], "f6" -> 
           Association["Type" -> "Numerical", "Weight" -> 1], "f7" -> 
           Association["Type" -> "Boolean", "Weight" -> 1], "f8" -> 
           Association["Type" -> "Boolean", "Weight" -> 1]], "Output" -> 
         Association[
          "((f7f8)(f1f2f3f4f5f6))" -> 
           Association["Type" -> "NumericalVector", "Weight" -> 8.]], 
         "Processors" -> {
           MachineLearning`MLProcessor["Threads", 
            Association[
            "Input" -> Association[
              "f1" -> Association["Type" -> "Numerical", "Weight" -> 1], "f2" -> 
               Association["Type" -> "Numerical", "Weight" -> 1], "f3" -> 
               Association["Type" -> "Numerical", "Weight" -> 1], "f4" -> 
               Association["Type" -> "Numerical", "Weight" -> 1], "f5" -> 
               Association["Type" -> "Numerical", "Weight" -> 1], "f6" -> 
               Association["Type" -> "Numerical", "Weight" -> 1], "f7" -> 
               Association["Type" -> "Boolean", "Weight" -> 1], "f8" -> 
               Association["Type" -> "Boolean", "Weight" -> 1]], "Output" -> 
             Association[
              "(f1f2f3f4f5f6)" -> 
               Association["Type" -> "NumericalVector", "Weight" -> 6], 
               "(f7f8)" -> 
               Association["Type" -> "BooleanVector", "Weight" -> 2]], 
             "Processors" -> {
               MachineLearning`MLProcessor["ToVector", 
                Association[
                "Invertibility" -> "Perfect", "Missing" -> "Allowed", "Input" -> 
                 Association[
                  "f1" -> Association["Type" -> "Numerical", "Weight" -> 1], 
                   "f2" -> Association["Type" -> "Numerical", "Weight" -> 1], 
                   "f3" -> Association["Type" -> "Numerical", "Weight" -> 1], 
                   "f4" -> Association["Type" -> "Numerical", "Weight" -> 1], 
                   "f5" -> Association["Type" -> "Numerical", "Weight" -> 1], 
                   "f6" -> Association["Type" -> "Numerical", "Weight" -> 1]],
                  "Output" -> 
                 Association[
                  "(f1f2f3f4f5f6)" -> 
                   Association["Type" -> "NumericalVector", "Weight" -> 6]], 
                 "Version" -> {11.3, 0}, "ID" -> 7702479604741579352]], 
               MachineLearning`MLProcessor["ToVector", 
                Association[
                "Invertibility" -> "Perfect", "Missing" -> "Allowed", "Input" -> 
                 Association[
                  "f7" -> Association["Type" -> "Boolean", "Weight" -> 1], 
                   "f8" -> Association["Type" -> "Boolean", "Weight" -> 1]], 
                 "Output" -> 
                 Association[
                  "(f7f8)" -> 
                   Association["Type" -> "BooleanVector", "Weight" -> 2]], 
                 "Version" -> {11.3, 0}, "ID" -> 3355605293894169357]]}, 
             "Invertibility" -> "Perfect", "Missing" -> "Allowed"]], 
           MachineLearning`MLProcessor["ConformBooleanVector", 
            Association[
            "Invertibility" -> "Perfect", "Missing" -> "Allowed", "Input" -> 
             Association[
              "(f7f8)" -> 
               Association["Type" -> "BooleanVector", "Weight" -> 2]], 
             "Version" -> {11.3, 0}, "ID" -> 3859453107201388839, "Output" -> 
             Association[
              "(f7f8)" -> 
               Association["Type" -> "BooleanVector", "Weight" -> 2]]]], 
           MachineLearning`MLProcessor["BooleanVectorToNumericalVector", 
            Association[
            "Invertibility" -> "Perfect", "Missing" -> "Allowed", "Input" -> 
             Association[
              "(f7f8)" -> 
               Association["Type" -> "BooleanVector", "Weight" -> 2]], 
             "Version" -> {11.3, 0}, "ID" -> 4560195258105199146, "Output" -> 
             Association[
              "(f7f8)" -> 
               Association["Type" -> "NumericalVector", "Weight" -> 2]]]], 
           MachineLearning`MLProcessor["MergeVectors", 
            Association[
            "Invertibility" -> "Perfect", "Missing" -> "Allowed", "Input" -> 
             Association[
              "(f7f8)" -> 
               Association["Type" -> "NumericalVector", "Weight" -> 2], 
               "(f1f2f3f4f5f6)" -> 
               Association["Type" -> "NumericalVector", "Weight" -> 6]], 
             "Spans" -> {
               Span[1, 2], 
               Span[3, 8]}, "Wrappers" -> {Identity, Identity}, "Output" -> 
             Association[
              "((f7f8)(f1f2f3f4f5f6))" -> 
               Association[
                "Weight" -> {1., 1., 1., 1., 1., 1., 1., 1.}, "Type" -> 
                 "NumericalVector"]], "Version" -> {11.3, 0}, "ID" -> 
             3344780077936403356]], 
           MachineLearning`MLProcessor["ImputeMissing", 
            Association[
            "Invertibility" -> "Perfect", "Missing" -> "Imputed", "Input" -> 
             Association[
              "((f7f8)(f1f2f3f4f5f6))" -> 
               Association[
                "Weight" -> {1., 1., 1., 1., 1., 1., 1., 1.}, "Type" -> 
                 "NumericalVector"]], "Imputer" -> (DimensionReducerFunction[
               Association[
               "ExampleNumber" -> 50, "Imputer" -> 
                MachineLearning`MLProcessor["ImputeMissing", 
                  Association[
                  "Invertibility" -> "Perfect", "Missing" -> "Imputed", 
                   "Input" -> 
                   Association[
                    "f1" -> Association[
                    "Type" -> "NumericalVector", "Weight" -> 1]], 
                   "Fill" -> {0.48, 0.46, 0.16035733655493947`, 
                    0.006553943077325677, -0.08798711364897852, \
-0.18002025939256588`, -0.11277276726038907`, -0.04658096594465166}, "Method" -> 
                   "Naive", "VectorLength" -> 8, "Output" -> 
                   Association[
                    "f1" -> Association[
                    "Type" -> "NumericalVector", "Weight" -> 1]], "Type" -> 
                   "NumericalVector"]], "RandomImputer" -> 
                MachineLearning`MLProcessor["ImputeMissing", 
                  Association[
                  "Invertibility" -> "Perfect", "Missing" -> "Imputed", 
                   "Input" -> 
                   Association[
                    "f1" -> Association[
                    "Type" -> "NumericalVector", "Weight" -> 1]], 
                   "Mean" -> {0.48, 0.46, 0.16035733655493947`, 
                    0.006553943077325677, -0.08798711364897852, \
-0.18002025939256588`, -0.11277276726038907`, -0.04658096594465166}, 
                   "StandardDeviation" -> {0.49959983987187184`, 
                    0.4983974317750845, 0.5581046578381011, 
                    0.5676290070790009, 0.5953737337266565, 
                    0.49948717902182793`, 0.538732486360925, 
                    0.5557314514268795}, "Method" -> "NaiveSampler", 
                   "VectorLength" -> 8, "Output" -> 
                   Association[
                    "f1" -> Association[
                    "Type" -> "NumericalVector", "Weight" -> 1]], "Type" -> 
                   "NumericalVector"]], "Preprocessor" -> 
                MachineLearning`MLProcessor["ToMLDataset", 
                  Association[
                  "Input" -> 
                   Association[
                    "f1" -> Association[
                    "Type" -> "NumericalVector", "Length" -> 8]], "Output" -> 
                   Association[
                    "f1" -> Association[
                    "Type" -> "NumericalVector", "Weight" -> 1]], 
                   "Preprocessor" -> MachineLearning`MLProcessor["Sequence", 
                    Association["Processors" -> {
                    MachineLearning`MLProcessor["List"], 
                    MachineLearning`MLProcessor["WrapMLDataset", 
                    Association[
                    "FeatureTypes" -> {"NumericalVector"}, 
                    "FeatureKeys" -> {"f1"}, "FeatureWeights" -> Automatic, 
                    "ExampleWeights" -> Automatic, "RawExample" -> 
                    Missing["KeyAbsent", "RawExample"]]]}]], "ScalarFeature" -> 
                   True, "Invertibility" -> "Perfect", "Missing" -> 
                   "Allowed"]], "Processor" -> 
                MachineLearning`MLProcessor["Identity"], "Padder" -> 
                MachineLearning`MLProcessor["Identity"], "PostProcessor" -> 
                MachineLearning`MLProcessor["FromMLDataset", 
                  Association[
                  "DatasetFormat" -> Automatic, "Input" -> 
                   Association[
                    "f1" -> Association[
                    "Type" -> "NumericalVector", "Weight" -> 1]], "Output" -> 
                   Association[
                    "f1" -> Association[
                    "Type" -> "NumericalVector", "Length" -> 8]], 
                   "InversePreprocessor" -> 
                   MachineLearning`MLProcessor["Sequence", 
                    Association["Processors" -> {
                    MachineLearning`MLProcessor["List"], 
                    MachineLearning`MLProcessor["WrapMLDataset", 
                    Association[
                    "FeatureTypes" -> {"NumericalVector"}, 
                    "FeatureKeys" -> {"f1"}, "FeatureWeights" -> {1}, 
                    "ExampleWeights" -> 1]]}]], "ScalarFeature" -> True, 
                   "Invertibility" -> "Perfect", "Missing" -> "Allowed"]], 
                "Model" -> Association["Matrix" -> CompressedData["
1:eJwBEQLu/SFib1JlAgAAAAgAAAAIAAAAFVYesf6M4T9NDDjI3+nAv+TJWfVv
Zp4/Ub3cw+YH0L8fCudo3B6/P2CevNe7IcC/Gtjb60F96D+x2Tpj1JSlP4x5
4+rcOc6/0UD1IrPm0j9s3xn1dIbVPwhleGYvR+K/IIEW0nNgtr/tlt8WyKfi
vxDCP0wabLO/PzVRug890D+4W78aVPOuPxM/di9bjso/6k19v9235j/6bHc1
AwPcPwAnouffG4O/TGWq3qT+w7+g9oAfqiC8P1VNshHlGN6/uG5jO4MS2r8x
qbz65Qbav2uhtrjU8Ng/0GhHT56rvT/H4JAkJf7Vv3egHSHNxNE/o+g3+NB4
1D+joQLD+AndP/33JxoopNY/URLv4gm63b/H1Ug57POSv4ou7kkIBNg/CigX
XzC2wL81uKxgJmDiv0347crLLtO/gD8qxi9A0j8g5oDInwHVP+wSBeAMNr0/
uIep5nu9pb/xVSZSKQPIv48qBallHey/hFIQrUEzwj9LQ4K1Q++5v+USbbeu
jcm/kmERudVl379Ib780qvzEvwtdKFRGg9q/rno7FITevD8URkgQF7jMv4Zz
JwkHoNu/nC2ztqNN1z9GSXdrVhHbv5lbXpJOQ5A/SDYhdqcD5T9XxQj3zGLO
v4thwxgo1d0/3UDlfBcmwr/AgFq1p520v89OLn5evs8/JJb9oCMa3T88jQu5

                   "], "Processor" -> 
                  MachineLearning`MLProcessor["Standardize", 
                    Association[
                    "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
                    "Input" -> 
                    Association[
                    "f1" -> Association[
                    "Type" -> "NumericalVector", "Weight" -> 1]], 
                    "Mean" -> {0.48, 0.46, 0.16035733655493947`, 
                    0.006553943077325677, -0.08798711364897852, \
-0.18002025939256588`, -0.11277276726038907`, -0.04658096594465166}, 
                    "StandardDeviation" -> {0.49959983987187184`, 
                    0.4983974317750845, 0.5581046578381011, 
                    0.5676290070790009, 0.5953737337266565, 
                    0.49948717902182793`, 0.538732486360925, 
                    0.5557314514268795}, "Output" -> 
                    Association[
                    "f1" -> Association[
                    "Type" -> "NumericalVector", "Weight" -> 1]]]], 
                  "FinalDimension" -> 8, "Method" -> "Linear"], 
                "PerformanceGoal" -> Automatic, "Invertibility" -> 
                "Approximate", "Log" -> 
                Association[
                 "TrainingTime" -> 0.009356, "MaxTrainingMemory" -> 64712, 
                  "DataMemory" -> 3448, "FunctionMemory" -> 23032, 
                  "LanguageVersion" -> {11.3, 0}, "Date" -> 
                  DateObject[{2018, 7, 4, 14, 29, 23.617039`8.12580042965394},
                     "Instant", "Gregorian", -4.], "ProcessorCount" -> 4, 
                  "ProcessorType" -> "x86-64", "OperatingSystem" -> "MacOSX", 
                  "SystemWordLength" -> 64, "Evaluations" -> {}]]][#, 
               "ImputedVectors", PerformanceGoal -> "Quality"]& ), "Method" -> 
             "DimensionReduction", "VectorLength" -> 8, "Output" -> 
             Association[
              "((f7f8)(f1f2f3f4f5f6))" -> 
               Association["Type" -> "NumericalVector", "Weight" -> 8.]], 
             "Type" -> "NumericalVector", "Version" -> {11.3, 0}, "ID" -> 
             6746930599685287522]], 
           MachineLearning`MLProcessor["Standardize", 
            Association[
            "Invertibility" -> "Perfect", "Missing" -> "Allowed", "Input" -> 
             Association[
              "((f7f8)(f1f2f3f4f5f6))" -> 
               Association["Type" -> "NumericalVector", "Weight" -> 8.]], 
             "Mean" -> {0.48, 0.46, 0.16035733655493947`, 
              0.006553943077325677, -0.08798711364897852, \
-0.18002025939256588`, -0.11277276726038907`, -0.04658096594465166}, 
             "StandardDeviation" -> {0.49959983987187184`, 0.4983974317750845,
               0.5581046578381011, 0.5676290070790009, 0.5953737337266565, 
              0.49948717902182793`, 0.538732486360925, 0.5557314514268795}, 
             "Output" -> 
             Association[
              "((f7f8)(f1f2f3f4f5f6))" -> 
               Association["Type" -> "NumericalVector", "Weight" -> 8.]], 
             "Version" -> {11.3, 0}, "ID" -> 1752490845919100894]]}, 
         "Invertibility" -> "Perfect", "Missing" -> "Imputed"]]], "Output" -> 
    Association["Preprocessor" -> MachineLearning`MLProcessor["ToMLDataset", 
        Association[
        "Input" -> Association["f1" -> Association["Type" -> "Numerical"]], 
         "Output" -> 
         Association[
          "f1" -> Association["Type" -> "Numerical", "Weight" -> 1]], 
         "Preprocessor" -> MachineLearning`MLProcessor["Sequence", 
           Association["Processors" -> {
              MachineLearning`MLProcessor["List"], 
              MachineLearning`MLProcessor["WrapMLDataset", 
               Association[
               "FeatureTypes" -> {"Numerical"}, "FeatureKeys" -> {"f1"}, 
                "FeatureWeights" -> Automatic, "ExampleWeights" -> Automatic, 
                "RawExample" -> Missing["KeyAbsent", "RawExample"]]]}]], 
         "ScalarFeature" -> True, "Invertibility" -> "Perfect", "Missing" -> 
         "Allowed"]], "Processor" -> MachineLearning`MLProcessor["Sequence", 
        Association[
        "Input" -> Association[
          "f1" -> Association["Type" -> "Numerical", "Weight" -> 1]], 
         "Output" -> 
         Association[
          "f1" -> Association["Type" -> "Numerical", "Weight" -> 1]], 
         "Processors" -> {
           MachineLearning`MLProcessor["ToVector", 
            Association[
            "Invertibility" -> "Perfect", "Missing" -> "Allowed", "Input" -> 
             Association[
              "f1" -> Association["Type" -> "Numerical", "Weight" -> 1]], 
             "Output" -> 
             Association[
              "f1" -> Association[
                "Type" -> "NumericalVector", "Weight" -> 1]], 
             "Version" -> {11.3, 0}, "ID" -> 226620591177916996]], 
           MachineLearning`MLProcessor["Standardize", 
            Association[
            "Invertibility" -> "Perfect", "Missing" -> "Allowed", "Input" -> 
             Association[
              "f1" -> Association[
                "Type" -> "NumericalVector", "Weight" -> 1]], 
             "Mean" -> {-0.13566872678470682`}, 
             "StandardDeviation" -> {1.6228460365885082`}, "Output" -> 
             Association[
              "f1" -> Association[
                "Type" -> "NumericalVector", "Weight" -> 1]], 
             "Version" -> {11.3, 0}, "ID" -> 5066674405040618180]], 
           MachineLearning`MLProcessor["FromVector", 
            Association[
            "Invertibility" -> "Perfect", "Missing" -> "Allowed", "Input" -> 
             Association[
              "f1" -> Association[
                "Type" -> "NumericalVector", "Weight" -> 1]], "Output" -> 
             Association[
              "f1" -> Association["Type" -> "Numerical", "Weight" -> 1]], 
             "Version" -> {11.3, 0}, "ID" -> 1033132177290556771]], 
           MachineLearning`MLProcessor["FirstValues", 
            Association[
            "Info" -> Association["Type" -> "Numerical", "Weight" -> 1], 
             "Key" -> "f1", "Invertibility" -> "Perfect", "Missing" -> 
             "Allowed"]]}, "Invertibility" -> "Perfect", "Missing" -> 
         "Allowed"]], "ProbabilityPostprocessor" -> Identity, 
      "InverseProcessorFunction" -> (-0.13566872678470682` + 
       1.6228460365885082` #& ), 
      "ProcessorFunction" -> (0.08359925940350141 + 0.6162014001661957 #& ), 
      "Name" -> "value", 
      "Quantiles" -> {-2.0023795471049954`, 2.456251522161173}], "Prior" -> 
    Automatic, "Utility" -> (DiracDelta[#2 - #]& ), "Threshold" -> 0, 
    "PerformanceGoal" -> Automatic, "BatchProcessing" -> Automatic, "Model" -> 
    Association["MeanFunction" -> LinearLayer[
        Association[
        "Type" -> "Linear", "Arrays" -> 
         Association[
          "Weights" -> 
           RawArray["Real32",{{-0.20642682909965515`, 0.2775843143463135, 
             0.13517409563064575`, -0.36706671118736267`, 0.7620525360107422, 
             0.19578959047794342`, 0.041532598435878754`, 
             0.4466799199581146}}], "Biases" -> RawArray["Real32",{0.}]], 
         "Parameters" -> 
         Association[
          "OutputDimensions" -> {1}, "$OutputSize" -> 1, "$InputSize" -> 8, 
           "$InputDimensions" -> {8}], "Inputs" -> 
         Association[
          "Input" -> NeuralNetworks`TensorT[{8}, NeuralNetworks`RealT]], 
         "Outputs" -> 
         Association[
          "Output" -> NeuralNetworks`TensorT[{1}, NeuralNetworks`RealT]]], 
        Association["Version" -> "11.3.5"]], 
      "DistributionData" -> {NormalDistribution, 0.12212322652194993`}, 
      "Processor" -> MachineLearning`MLProcessor["Sequence", 
        Association[
        "Input" -> Association[
          "((f7f8)(f1f2f3f4f5f6))" -> 
           Association["Type" -> "NumericalVector", "Weight" -> 8.]], 
         "Output" -> 
         Association[
          "((f7f8)(f1f2f3f4f5f6))" -> 
           Association["Type" -> "NumericalVector", "Weight" -> 8.]], 
         "Processors" -> {
           MachineLearning`MLProcessor["Standardize", 
            Association[
            "Invertibility" -> "Perfect", "Missing" -> "Allowed", "Input" -> 
             Association[
              "((f7f8)(f1f2f3f4f5f6))" -> 
               Association["Type" -> "NumericalVector", "Weight" -> 8.]], 
             "Mean" -> {-4.4408920985006264`*^-17, 2.220446049250313*^-18, 
              1.2878587085651815`*^-16, 
              1.1102230246251566`*^-17, -1.3322676295501878`*^-17, 
              3.7747582837255325`*^-17, 8.881784197001253*^-18, 
              3.0808688933348097`*^-17}, 
             "StandardDeviation" -> {1., 1., 0.9999999999999997, 1., 
              1.0000000000000002`, 1., 0.9999999999999998, 
              0.9999999999999999}, "Output" -> 
             Association[
              "((f7f8)(f1f2f3f4f5f6))" -> 
               Association["Type" -> "NumericalVector", "Weight" -> 8.]], 
             "Version" -> {11.3, 0}, "ID" -> 484788832103453132]], 
           MachineLearning`MLProcessor["FirstValues", 
            Association[
            "Info" -> Association[
              "Type" -> "NumericalVector", "Weight" -> 8.], "Key" -> 
             "((f7f8)(f1f2f3f4f5f6))", "Invertibility" -> "Perfect", 
             "Missing" -> "Allowed"]]}, "Invertibility" -> "Perfect", 
         "Missing" -> "Allowed"]], "Method" -> "LinearRegression", "Options" -> 
      Association[
       "L1Regularization" -> 
        Association["Value" -> 0, "Options" -> Association[]], 
        "L2Regularization" -> 
        Association["Value" -> 0.1, "Options" -> Association[]], 
        "OptimizationMethod" -> 
        Association["Value" -> "NormalEquation", "Options" -> Association[]], 
        MaxIterations -> 
        Association["Value" -> 30, "Options" -> Association[]]]], 
    "TrainingInformation" -> 
    Association[
     "LossName" -> "StandardDeviation", "BestModelInformation" -> Dataset[
        Association[
        "MeanCrossEntropy" -> 
         PlusMinus[1.3141550417047827`, 0.17340640721085118`], 
         "StandardDeviation" -> 
         PlusMinus[0.629746120204327, 0.0675403596674445], "EvaluationTime" -> 
         6.915000000000001*^-6, "TestSize" -> 160, "TrainingSize" -> 10, 
         "TrainingTime" -> 0.005246200000000001, "TrainingMemory" -> 
         60027.200000000004`, "ModelMemory" -> 14904., "ExperimentCount" -> 4,
          "ModelUtility" -> 0.6714916077681171, 
         "MeanCrossEntropyHistory" -> {
           PlusMinus[1.3918139947029136`, 0.016134610876641003`], 
           PlusMinus[0.7519655600438631, 0.04718991605339349], 
           PlusMinus[0.5923141922345181, 0.15867070797116825`], 
           PlusMinus[0.9211456718112168, 0.15121247008886124`]}, 
         "StandardDeviationHistory" -> {
           PlusMinus[0.6597909379092963, 0.11180496522741455`], 
           PlusMinus[0.5852097883060818, 0.12366324945622725`], 
           PlusMinus[0.5537467012778264, 0.13086742929202555`], 
           PlusMinus[0.6921037701790466, 0.11227999410323752`]}, 
         "Configuration" -> {
          "LinearRegression", "L1Regularization" -> 0, "L2Regularization" -> 
           0.1, "OptimizationMethod" -> Automatic, MaxIterations -> 30}, 
         "FinalTrainingSize" -> 50], 
        TypeSystem`Struct[{
         "MeanCrossEntropy", "StandardDeviation", "EvaluationTime", 
          "TestSize", "TrainingSize", "TrainingTime", "TrainingMemory", 
          "ModelMemory", "ExperimentCount", "ModelUtility", 
          "MeanCrossEntropyHistory", "StandardDeviationHistory", 
          "Configuration", "FinalTrainingSize"}, {
         TypeSystem`AnyType, TypeSystem`AnyType, 
          TypeSystem`Atom[Real], 
          TypeSystem`Atom[Integer], 
          TypeSystem`Atom[Integer], 
          TypeSystem`Atom[Real], 
          TypeSystem`Atom[Real], 
          TypeSystem`Atom[Real], 
          TypeSystem`Atom[Integer], 
          TypeSystem`Atom[Real], 
          TypeSystem`Vector[TypeSystem`AnyType, 4], 
          TypeSystem`Vector[TypeSystem`AnyType, 4], 
          TypeSystem`Tuple[{
            TypeSystem`Atom[String], TypeSystem`AnyType, TypeSystem`AnyType, 
            TypeSystem`AnyType, TypeSystem`AnyType}], 
          TypeSystem`Atom[Integer]}], 
        Association["ID" -> 269105613078342]], "Configurations" -> Dataset[
        Association[
        Association[
          "Value" -> "LinearRegression", "Options" -> 
           Association[
            "L1Regularization" -> Association["Value" -> 0], 
             "L2Regularization" -> Association["Value" -> 0.00001], 
             "OptimizationMethod" -> Association["Value" -> Automatic], 
             MaxIterations -> Association["Value" -> 30]]] -> 
         Association["Experiments" -> {
             Association[
             "MeanCrossEntropy" -> 
              PlusMinus[1.341085874794058, 0.29781647156001995`], 
              "StandardDeviation" -> 
              PlusMinus[0.7096859175505484, 0.11086934446269812`], 
              "EvaluationTime" -> 8.55625*^-6, "TestSize" -> 120, 
              "TrainingSize" -> 10, "TrainingTime" -> 0.00625675, 
              "TrainingMemory" -> 60024., "ModelMemory" -> 14904., 
              "ExperimentCount" -> 3, "ModelUtility" -> 0.5901947326175043, 
              "MeanCrossEntropyHistory" -> {
                PlusMinus[1.4487250855580371`, 0.026331100612476305`], 
                PlusMinus[0.8850340341910701, 0.06373619246168337], 
                PlusMinus[0.4220610490185479, 0.14621786921227253`]}, 
              "StandardDeviationHistory" -> {
                PlusMinus[0.8327445150565215, 0.09874553515438882], 
                PlusMinus[0.6748094306017951, 0.10752963817389859`], 
                PlusMinus[0.5205543050821874, 0.140330297910276]}], 
             Association[
             "MeanCrossEntropy" -> 
              PlusMinus[0.08281971331954595, 0.11588490810632872`], 
              "StandardDeviation" -> 
              PlusMinus[0.7687767409794622, 0.14686841435523681`], 
              "EvaluationTime" -> 0.000025285714285714282`, "TestSize" -> 60, 
              "TrainingSize" -> 40, "TrainingTime" -> 0.005601285714285715, 
              "TrainingMemory" -> 65100.57142857143, "ModelMemory" -> 14904., 
              "ExperimentCount" -> 6, "ModelUtility" -> 0.5411759122589422, 
              "MeanCrossEntropyHistory" -> {
                PlusMinus[0.017387259159744317`, 0.17916152461756113`], 
                PlusMinus[0., 0.2303048156284786], 
                PlusMinus[0.30261704316117377`, 0.34761128727228263`], 
                PlusMinus[0.015982324044097274`, 0.26278455785942684`], 
                PlusMinus[0.09139543989723377, 0.23105218970558902`], 
                PlusMinus[0.3202732343271999, 0.3028970415909145]}, 
              "StandardDeviationHistory" -> {
                PlusMinus[0.7605596113801513, 0.3669369295913735], 
                PlusMinus[0.7539377681485749, 0.374359740153295], 
                PlusMinus[0.7787032218788305, 0.34981417444770363`], 
                PlusMinus[0.7636831288095947, 0.36385393587327963`], 
                PlusMinus[0.7676917676800826, 0.3597484368078746], 
                PlusMinus[0.7845824240104206, 0.34518433393102443`]}]}, 
           "PredictedPerformances" -> 
           Association[
            "EvaluationTime" -> 0.000025285714285714282`, "ModelMemory" -> 
             14904., "StandardDeviation" -> 
             PlusMinus[0.7687767409794622, 0.14686841435523681`], 
             "TrainingMemory" -> 65100.57142857143, "TrainingTime" -> 
             0.009057392857142858], "Index" -> 1], 
         Association[
          "Value" -> "LinearRegression", "Options" -> 
           Association[
            "L1Regularization" -> Association["Value" -> 0], 
             "L2Regularization" -> Association["Value" -> 1.*^6], 
             "OptimizationMethod" -> Association["Value" -> Automatic], 
             MaxIterations -> Association["Value" -> 30]]] -> 
         Association["Experiments" -> {
             Association[
             "MeanCrossEntropy" -> 
              PlusMinus[2.5796665205171774`, 0.06047008680038738], 
              "StandardDeviation" -> 
              PlusMinus[1.6297630962061225`, 0.09573218267602708], 
              "EvaluationTime" -> 8.0125*^-6, "TestSize" -> 120, 
              "TrainingSize" -> 10, "TrainingTime" -> 0.005823999999999999, 
              "TrainingMemory" -> 59976., "ModelMemory" -> 14904., 
              "ExperimentCount" -> 3, "ModelUtility" -> 0.26195481476175675`, 
              "MeanCrossEntropyHistory" -> {
                PlusMinus[2.56859880074426, 0.04915920614319379], 
                PlusMinus[2.685910390152306, 0.052536998419402], 
                PlusMinus[2.50383967169599, 0.047285938312428825`]}, 
              "StandardDeviationHistory" -> {
                PlusMinus[1.6407024563058472`, 0.16665770746921005`], 
                PlusMinus[1.5826117663529793`, 0.15760485208540426`], 
                PlusMinus[1.6666911081819877`, 0.15667394557032743`]}], 
             Association[
             "MeanCrossEntropy" -> 
              PlusMinus[1.896611229245926, 0.0784121034493254], 
              "StandardDeviation" -> 
              PlusMinus[1.631977722822274, 0.13480588018206568`], 
              "EvaluationTime" -> 0.000026442857142857144`, "TestSize" -> 60, 
              "TrainingSize" -> 40, "TrainingTime" -> 0.0071884285714285704`, 
              "TrainingMemory" -> 67128., "ModelMemory" -> 14904., 
              "ExperimentCount" -> 6, "ModelUtility" -> 0.26037112249553596`, 
              "MeanCrossEntropyHistory" -> {
                PlusMinus[1.89055387664106, 0.11390939669031329`], 
                PlusMinus[1.839558963245907, 0.1597828112880903], 
                PlusMinus[2.016354360716285, 0.23240906260151983`], 
                PlusMinus[1.851602471134943, 0.14780944932847054`], 
                PlusMinus[1.891538000467687, 0.14341434508859854`], 
                PlusMinus[2.118817914548931, 0.28214230081651254`]}, 
              "StandardDeviationHistory" -> {
                PlusMinus[1.6011034253217955`, 0.17642532414215886`], 
                PlusMinus[1.4786278070593974`, 0.33774157037071173`], 
                PlusMinus[1.832536075004648, 0.3450117258653635], 
                PlusMinus[1.5095695934423516`, 0.2936603935118558], 
                PlusMinus[1.6032640915785392`, 0.24861692996874646`], 
                PlusMinus[1.9736505640773467`, 0.367100174370906]}]}, 
           "PredictedPerformances" -> 
           Association[
            "EvaluationTime" -> 0.000026442857142857144`, "ModelMemory" -> 
             14904., "StandardDeviation" -> 
             PlusMinus[1.631977722822274, 0.13480588018206568`], 
             "TrainingMemory" -> 67128., "TrainingTime" -> 
             0.009418214285714285], "Index" -> 2], 
         Association[
          "Value" -> "LinearRegression", "Options" -> 
           Association[
            "L1Regularization" -> Association["Value" -> 0], 
             "L2Regularization" -> Association["Value" -> 1.], 
             "OptimizationMethod" -> Association["Value" -> Automatic], 
             MaxIterations -> Association["Value" -> 30]]] -> 
         Association["Experiments" -> {
             Association[
             "MeanCrossEntropy" -> 
              PlusMinus[1.1248745669646576`, 0.12500695065423031`], 
              "StandardDeviation" -> 
              PlusMinus[0.7660909778019988, 0.08781196989855873], 
              "EvaluationTime" -> 8.874999999999999*^-6, "TestSize" -> 160, 
              "TrainingSize" -> 10, "TrainingTime" -> 0.006200400000000001, 
              "TrainingMemory" -> 59976., "ModelMemory" -> 14904., 
              "ExperimentCount" -> 4, "ModelUtility" -> 0.5511873060069213, 
              "MeanCrossEntropyHistory" -> {
                PlusMinus[1.4963766944511119`, 0.027214962627759406`], 
                PlusMinus[0.8972589238499176, 0.021267445768054165`], 
                PlusMinus[1.1431213539928278`, 0.09252329830066032], 
                PlusMinus[1.1165698909290893`, 0.13122372859937617`]}, 
              "StandardDeviationHistory" -> {
                PlusMinus[0.8003873247413303, 0.11152703054103168`], 
                PlusMinus[0.5423519626866319, 0.13322721903861004`], 
                PlusMinus[0.8275732831970787, 0.09847933936854214], 
                PlusMinus[0.8094924406751625, 0.11122247818052053`]}], 
             Association[
             "MeanCrossEntropy" -> 
              PlusMinus[0.07748110023628678, 0.09712033225083923], 
              "StandardDeviation" -> 
              PlusMinus[0.7659296329695714, 0.13690872584031086`], 
              "EvaluationTime" -> 0.000024237500000000003`, "TestSize" -> 70, 
              "TrainingSize" -> 40, "TrainingTime" -> 0.005685875, 
              "TrainingMemory" -> 65116., "ModelMemory" -> 14904., 
              "ExperimentCount" -> 7, "ModelUtility" -> 0.5444769810486546, 
              "MeanCrossEntropyHistory" -> {
                PlusMinus[0., 0.18578163939122969`], 
                PlusMinus[0., 0.21808995268503947`], 
                PlusMinus[0.31532697647821095`, 0.25675148617579835`], 
                PlusMinus[0.06716114973795617, 0.26441722619547836`], 
                PlusMinus[0.021642279611603088`, 0.21582049515383295`], 
                PlusMinus[0.23561294902405056`, 0.22077968616211013`], 
                PlusMinus[0., 0.21789794426380685`]}, 
              "StandardDeviationHistory" -> {
                PlusMinus[0.7561352542680827, 0.37179162312985686`], 
                PlusMinus[0.755596456566464, 0.3724510231813747], 
                PlusMinus[0.7802087380816484, 0.3481526133325321], 
                PlusMinus[0.7663383753330779, 0.3611947315560245], 
                PlusMinus[0.7637052046589068, 0.36373379049695864`], 
                PlusMinus[0.7774420539959225, 0.35080902114177287`], 
                PlusMinus[0.7588088910323224, 0.36890121330443754`]}]}, 
           "PredictedPerformances" -> 
           Association[
            "EvaluationTime" -> 0.000024237500000000003`, "ModelMemory" -> 
             14904., "StandardDeviation" -> 
             PlusMinus[0.7659296329695714, 0.13690872584031086`], 
             "TrainingMemory" -> 65116., "TrainingTime" -> 
             0.009043337500000002], "Index" -> 3], 
         Association[
          "Value" -> "LinearRegression", "Options" -> 
           Association[
            "L1Regularization" -> Association["Value" -> 0], 
             "L2Regularization" -> Association["Value" -> 1000.], 
             "OptimizationMethod" -> Association["Value" -> Automatic], 
             MaxIterations -> Association["Value" -> 30]]] -> 
         Association["Experiments" -> {
             Association[
             "MeanCrossEntropy" -> 
              PlusMinus[2.5638952152733765`, 0.06143831270093887], 
              "StandardDeviation" -> 
              PlusMinus[1.6184483780996228`, 0.0957509713032483], 
              "EvaluationTime" -> 7.4625*^-6, "TestSize" -> 120, 
              "TrainingSize" -> 10, "TrainingTime" -> 0.00604625, 
              "TrainingMemory" -> 59944., "ModelMemory" -> 14904., 
              "ExperimentCount" -> 3, "ModelUtility" -> 0.26376414753657307`, 
              "MeanCrossEntropyHistory" -> {
                PlusMinus[2.55051435729751, 0.048642899703026765`], 
                PlusMinus[2.673501487206932, 0.052117657345889586`], 
                PlusMinus[2.4878662170462564`, 0.04681061575640676]}, 
              "StandardDeviationHistory" -> {
                PlusMinus[1.6326689205674383`, 0.166885497731676], 
                PlusMinus[1.5663149836510448`, 0.15612573643876665`], 
                PlusMinus[1.657471513651472, 0.15481356104821276`]}], 
             Association[
             "MeanCrossEntropy" -> 
              PlusMinus[1.8636394308305568`, 0.0789204719656424], 
              "StandardDeviation" -> 
              PlusMinus[1.5902705083690778`, 0.13182239064185322`], 
              "EvaluationTime" -> 0.000028328571428571426`, "TestSize" -> 60, 
              "TrainingSize" -> 40, "TrainingTime" -> 0.005987142857142856, 
              "TrainingMemory" -> 65137.142857142855`, "ModelMemory" -> 
              14904., "ExperimentCount" -> 6, "ModelUtility" -> 
              0.26718448260770183`, "MeanCrossEntropyHistory" -> {
                PlusMinus[1.8570084144818944`, 0.1101799744554287], 
                PlusMinus[1.8068180190650347`, 0.16062403106271392`], 
                PlusMinus[1.987875469292374, 0.23167150453327925`], 
                PlusMinus[1.816357497939848, 0.1463039087904611], 
                PlusMinus[1.859482242072627, 0.14193921346890695`], 
                PlusMinus[2.098083425540786, 0.28685493287774555`]}, 
              "StandardDeviationHistory" -> {
                PlusMinus[1.5574434916547983`, 0.17291366796922816`], 
                PlusMinus[1.4426750641368007`, 0.33132520104628244`], 
                PlusMinus[1.7846757375959514`, 0.331409817932642], 
                PlusMinus[1.4685389686652721`, 0.2850446253617685], 
                PlusMinus[1.561705586598759, 0.2427623923857135], 
                PlusMinus[1.9278275360712593`, 0.3565441574235346]}]}, 
           "PredictedPerformances" -> 
           Association[
            "EvaluationTime" -> 0.000028328571428571426`, "ModelMemory" -> 
             14904., "StandardDeviation" -> 
             PlusMinus[1.5902705083690778`, 0.13182239064185322`], 
             "TrainingMemory" -> 65137.142857142855`, "TrainingTime" -> 
             0.009039821428571428], "Index" -> 4], 
         Association[
          "Value" -> "LinearRegression", "Options" -> 
           Association[
            "L1Regularization" -> Association["Value" -> 0], 
             "L2Regularization" -> Association["Value" -> 1.*^-6], 
             "OptimizationMethod" -> Association["Value" -> Automatic], 
             MaxIterations -> Association["Value" -> 30]]] -> 
         Association["Experiments" -> {
             Association[
             "MeanCrossEntropy" -> 
              PlusMinus[1.3220764103517417`, 0.21276427231867565`], 
              "StandardDeviation" -> 
              PlusMinus[0.6959849932219615, 0.08524671312448685], 
              "EvaluationTime" -> 7.2149999999999995`*^-6, "TestSize" -> 160, 
              "TrainingSize" -> 10, "TrainingTime" -> 0.0053004, 
              "TrainingMemory" -> 59924.8, "ModelMemory" -> 14904., 
              "ExperimentCount" -> 4, "ModelUtility" -> 0.6057769869379626, 
              "MeanCrossEntropyHistory" -> {
                PlusMinus[1.4487403669394197`, 0.02633397008788894], 
                PlusMinus[0.8850852830492881, 0.06374273745213181], 
                PlusMinus[0.42204534855292747`, 0.1462155673353737], 
                PlusMinus[0.8165188875804734, 0.12377134838215804`]}, 
              "StandardDeviationHistory" -> {
                PlusMinus[0.8327835150022387, 0.09874483115211588], 
                PlusMinus[0.6748408449609504, 0.10752518662919447`], 
                PlusMinus[0.5205517129154769, 0.1403311120990816], 
                PlusMinus[0.6524507563421851, 0.11498741970797113`]}], 
             Association[
             "MeanCrossEntropy" -> 
              PlusMinus[0.0828200120352277, 0.11588500159081919`], 
              "StandardDeviation" -> 
              PlusMinus[0.7687767802120754, 0.14686840089395137`], 
              "EvaluationTime" -> 0.000024828571428571426`, "TestSize" -> 60, 
              "TrainingSize" -> 40, "TrainingTime" -> 0.007157285714285715, 
              "TrainingMemory" -> 69674.28571428571, "ModelMemory" -> 14904., 
              "ExperimentCount" -> 6, "ModelUtility" -> 0.5411758877306067, 
              "MeanCrossEntropyHistory" -> {
                PlusMinus[0.01738809522305329, 0.1791614259077634], 
                PlusMinus[0., 0.2303048706744891], 
                PlusMinus[0.3026171388450414, 0.34761221128796815`], 
                PlusMinus[0.015982033919412497`, 0.26278445727099886`], 
                PlusMinus[0.09139647101501414, 0.2310523427702556], 
                PlusMinus[0.3202746063333862, 0.30289787221767384`]}, 
              "StandardDeviationHistory" -> {
                PlusMinus[0.7605596773682234, 0.3669368591490853], 
                PlusMinus[0.7539377631443273, 0.3743597460996307], 
                PlusMinus[0.778703226860696, 0.34981417414180527`], 
                PlusMinus[0.7636831143712645, 0.3638539504047177], 
                PlusMinus[0.7676918238668389, 0.3597483817875024], 
                PlusMinus[0.7845825373734198, 0.3451842448077574]}]}, 
           "PredictedPerformances" -> 
           Association[
            "EvaluationTime" -> 0.000024828571428571426`, "ModelMemory" -> 
             14904., "StandardDeviation" -> 
             PlusMinus[0.7687767802120754, 0.14686840089395137`], 
             "TrainingMemory" -> 69674.28571428571, "TrainingTime" -> 
             0.008879042857142857], "Index" -> 5], 
         Association[
          "Value" -> "LinearRegression", "Options" -> 
           Association[
            "L1Regularization" -> Association["Value" -> 0], 
             "L2Regularization" -> Association["Value" -> 10000.], 
             "OptimizationMethod" -> Association["Value" -> Automatic], 
             MaxIterations -> Association["Value" -> 30]]] -> 
         Association["Experiments" -> {
             Association[
             "MeanCrossEntropy" -> 
              PlusMinus[2.5780798433807637`, 0.06056813269638718], 
              "StandardDeviation" -> 
              PlusMinus[1.628620845760507, 0.09572995268770007], 
              "EvaluationTime" -> 7.1*^-6, "TestSize" -> 120, "TrainingSize" -> 
              10, "TrainingTime" -> 0.00526975, "TrainingMemory" -> 59976., 
              "ModelMemory" -> 14904., "ExperimentCount" -> 3, "ModelUtility" -> 
              0.26213647591834743`, "MeanCrossEntropyHistory" -> {
                PlusMinus[2.5667752858001225`, 0.0491067064473743], 
                PlusMinus[2.6846681374056978`, 0.052495008349796535`], 
                PlusMinus[2.502231743262788, 0.04723786885767819]}, 
              "StandardDeviationHistory" -> {
                PlusMinus[1.6398857290129574`, 0.1666809135420818], 
                PlusMinus[1.5809722640114832`, 0.15745617428648384`], 
                PlusMinus[1.6657542870430635`, 0.15648439551119908`]}], 
             Association[
             "MeanCrossEntropy" -> 
              PlusMinus[1.893262737992171, 0.07846062914390481], 
              "StandardDeviation" -> 
              PlusMinus[1.6276580930944222`, 0.13448904732670386`], 
              "EvaluationTime" -> 0.000024771428571428567`, "TestSize" -> 60, 
              "TrainingSize" -> 40, "TrainingTime" -> 0.005728857142857143, 
              "TrainingMemory" -> 65109.71428571428, "ModelMemory" -> 14904., 
              "ExperimentCount" -> 6, "ModelUtility" -> 0.26106085826477515`, 
              "MeanCrossEntropyHistory" -> {
                PlusMinus[1.887143048609816, 0.11352464457042702`], 
                PlusMinus[1.8362341186013535`, 0.1598598521313926], 
                PlusMinus[2.013462937925238, 0.2323322869829235], 
                PlusMinus[1.8480169589927151`, 0.14765379602063233`], 
                PlusMinus[1.8882842356811727`, 0.14325715255303414`], 
                PlusMinus[2.1167118848860165`, 0.28261943087510044`]}, 
              "StandardDeviationHistory" -> {
                PlusMinus[1.5965813415767454`, 0.17601362062847417`], 
                PlusMinus[1.4749093588515472`, 0.33708265239058444`], 
                PlusMinus[1.8276001908277097`, 0.3435872412313936], 
                PlusMinus[1.5053169924026266`, 0.2927522066151982], 
                PlusMinus[1.5989723801603968`, 0.24798922842803628`], 
                PlusMinus[1.9689439099515496`, 0.3660047414480336]}]}, 
           "PredictedPerformances" -> 
           Association[
            "EvaluationTime" -> 0.000024771428571428567`, "ModelMemory" -> 
             14904., "StandardDeviation" -> 
             PlusMinus[1.6276580930944222`, 0.13448904732670386`], 
             "TrainingMemory" -> 65109.71428571428, "TrainingTime" -> 
             0.008134178571428572], "Index" -> 6], 
         Association[
          "Value" -> "LinearRegression", "Options" -> 
           Association[
            "L1Regularization" -> Association["Value" -> 0], 
             "L2Regularization" -> Association["Value" -> 10.], 
             "OptimizationMethod" -> Association["Value" -> Automatic], 
             MaxIterations -> Association["Value" -> 30]]] -> 
         Association["Experiments" -> {
             Association[
             "MeanCrossEntropy" -> 
              PlusMinus[1.9564838891539176`, 0.04195022722165816], 
              "StandardDeviation" -> 
              PlusMinus[1.1585288099852744`, 0.16375946061764785`], 
              "EvaluationTime" -> 6.96875*^-6, "TestSize" -> 120, 
              "TrainingSize" -> 10, "TrainingTime" -> 0.0053825, 
              "TrainingMemory" -> 59912., "ModelMemory" -> 14904., 
              "ExperimentCount" -> 3, "ModelUtility" -> 0.36258439416870203`, 
              "MeanCrossEntropyHistory" -> {
                PlusMinus[1.9447772853164398`, 0.04484866889813929], 
                PlusMinus[2.004077164760821, 0.030016706788224993`], 
                PlusMinus[1.8788587941582995`, 0.040638795338832516`]}, 
              "StandardDeviationHistory" -> {
                PlusMinus[1.3462810056119334`, 0.15696184569221372`], 
                PlusMinus[0.9076826958631231, 0.10567083964464676`], 
                PlusMinus[1.3574681927720251`, 0.11576788795786892`]}], 
             Association[
             "MeanCrossEntropy" -> 
              PlusMinus[0.6796222774150307, 0.10206478711041957`], 
              "StandardDeviation" -> 
              PlusMinus[0.8544040857636956, 0.12498731025362277`], 
              "EvaluationTime" -> 0.00002507142857142857, "TestSize" -> 60, 
              "TrainingSize" -> 40, "TrainingTime" -> 0.005474999999999998, 
              "TrainingMemory" -> 65091.428571428565`, "ModelMemory" -> 
              14904., "ExperimentCount" -> 6, "ModelUtility" -> 
              0.49117469137190056`, "MeanCrossEntropyHistory" -> {
                PlusMinus[0.6419719656242574, 0.12072066429764562`], 
                PlusMinus[0.6374001922073934, 0.21663569313025582`], 
                PlusMinus[0.9060327699642217, 0.23288042646674598`], 
                PlusMinus[0.6353408362453528, 0.1669707718818114], 
                PlusMinus[0.6344431544871735, 0.14379825150983863`], 
                PlusMinus[1.046748367400428, 0.3451581963973532]}, 
              "StandardDeviationHistory" -> {
                PlusMinus[0.8223147309314001, 0.3164265722703053], 
                PlusMinus[0.8234459235342627, 0.31964067803935303`], 
                PlusMinus[0.8843838052843076, 0.2846019375667432], 
                PlusMinus[0.8250664474176449, 0.3157178272370078], 
                PlusMinus[0.8229081522144542, 0.3166386348806019], 
                PlusMinus[0.9200567775201076, 0.27600313393382836`]}]}, 
           "PredictedPerformances" -> 
           Association[
            "EvaluationTime" -> 0.00002507142857142857, "ModelMemory" -> 
             14904., "StandardDeviation" -> 
             PlusMinus[0.8544040857636956, 0.12498731025362277`], 
             "TrainingMemory" -> 65091.428571428565`, "TrainingTime" -> 
             0.008119999999999999], "Index" -> 7], 
         Association[
          "Value" -> "LinearRegression", "Options" -> 
           Association[
            "L1Regularization" -> Association["Value" -> 0], 
             "L2Regularization" -> Association["Value" -> 0.0001], 
             "OptimizationMethod" -> Association["Value" -> Automatic], 
             MaxIterations -> Association["Value" -> 30]]] -> 
         Association["Experiments" -> {
             Association[
             "MeanCrossEntropy" -> 
              PlusMinus[1.3220002059686866`, 0.2126912348188538], 
              "StandardDeviation" -> 
              PlusMinus[0.6957602811001751, 0.08517699904399882], 
              "EvaluationTime" -> 6.980000000000001*^-6, "TestSize" -> 160, 
              "TrainingSize" -> 10, "TrainingTime" -> 0.005371, 
              "TrainingMemory" -> 59937.600000000006`, "ModelMemory" -> 
              14904., "ExperimentCount" -> 4, "ModelUtility" -> 
              0.6059798105163977, "MeanCrossEntropyHistory" -> {
                PlusMinus[1.4485724121040595`, 0.026302421048134593`], 
                PlusMinus[0.8845229449380564, 0.06367098341417486], 
                PlusMinus[0.42221863950774036`, 0.14624101037922124`], 
                PlusMinus[0.8166343711395094, 0.12380479899772265`]}, 
              "StandardDeviationHistory" -> {
                PlusMinus[0.8323547516289956, 0.0987525906894856], 
                PlusMinus[0.674496061532291, 0.10757409528909957`], 
                PlusMinus[0.5205803263013666, 0.1403221271458053], 
                PlusMinus[0.6524948276895913, 0.11498371119622369`]}], 
             Association[
             "MeanCrossEntropy" -> 
              PlusMinus[0.08281684220450759, 0.11588394629804595`], 
              "StandardDeviation" -> 
              PlusMinus[0.7687763504261685, 0.14686854813605393`], 
              "EvaluationTime" -> 0.000025657142857142855`, "TestSize" -> 60, 
              "TrainingSize" -> 40, "TrainingTime" -> 0.005548428571428572, 
              "TrainingMemory" -> 65091.428571428565`, "ModelMemory" -> 
              14904., "ExperimentCount" -> 6, "ModelUtility" -> 
              0.5411761587261406, "MeanCrossEntropyHistory" -> {
                PlusMinus[0.01737882369666277, 0.17916254332971326`], 
                PlusMinus[0., 0.2303041375059637], 
                PlusMinus[0.30261592754233224`, 0.3476021364225891], 
                PlusMinus[0.01598584961427052, 0.2627857040023392], 
                PlusMinus[0.09138550849385324, 0.23105077520025538`], 
                PlusMinus[0.32025939409079335`, 0.30288863272140826`]}, 
              "StandardDeviationHistory" -> {
                PlusMinus[0.7605589455859944, 0.3669376404593297], 
                PlusMinus[0.7539378023941073, 0.37435969827364546`], 
                PlusMinus[0.7787031638011225, 0.3498141853379364], 
                PlusMinus[0.7636833042629116, 0.36385375903935435`], 
                PlusMinus[0.7676912265076681, 0.35974896695105024`], 
                PlusMinus[0.7845812804520687, 0.34518523268377993`]}]}, 
           "PredictedPerformances" -> 
           Association[
            "EvaluationTime" -> 0.000025657142857142855`, "ModelMemory" -> 
             14904., "StandardDeviation" -> 
             PlusMinus[0.7687763504261685, 0.14686854813605393`], 
             "TrainingMemory" -> 65091.428571428565`, "TrainingTime" -> 
             0.008145214285714287], "Index" -> 8], 
         Association[
          "Value" -> "LinearRegression", "Options" -> 
           Association[
            "L1Regularization" -> Association["Value" -> 0], 
             "L2Regularization" -> Association["Value" -> 0.001], 
             "OptimizationMethod" -> Association["Value" -> Automatic], 
             MaxIterations -> Association["Value" -> 30]]] -> 
         Association["Experiments" -> {
             Association[
             "MeanCrossEntropy" -> 
              PlusMinus[1.3397648944155311`, 0.29692966011460853`], 
              "StandardDeviation" -> 
              PlusMinus[0.706700078941206, 0.10988258689039807`], 
              "EvaluationTime" -> 6.943750000000001*^-6, "TestSize" -> 120, 
              "TrainingSize" -> 10, "TrainingTime" -> 0.00530075, 
              "TrainingMemory" -> 59992., "ModelMemory" -> 14904., 
              "ExperimentCount" -> 3, "ModelUtility" -> 0.5927729720586787, 
              "MeanCrossEntropyHistory" -> {
                PlusMinus[1.4470692461496224`, 0.026020212207900573`], 
                PlusMinus[0.879571010270285, 0.0630419310737181], 
                PlusMinus[0.42379694860861145`, 0.1464712245580271]}, 
              "StandardDeviationHistory" -> {
                PlusMinus[0.8285053235212527, 0.09882645755071437], 
                PlusMinus[0.6714519394679506, 0.10801010663015052`], 
                PlusMinus[0.520841221049871, 0.14024027181003182`]}], 
             Association[
             "MeanCrossEntropy" -> 
              PlusMinus[0.08278820159595077, 0.11587446302219676`], 
              "StandardDeviation" -> 
              PlusMinus[0.768772473174059, 0.1468698762369682], 
              "EvaluationTime" -> 0.000023914285714285715`, "TestSize" -> 60, 
              "TrainingSize" -> 40, "TrainingTime" -> 0.005668999999999999, 
              "TrainingMemory" -> 65100.57142857143, "ModelMemory" -> 14904., 
              "ExperimentCount" -> 6, "ModelUtility" -> 0.5411786085045064, 
              "MeanCrossEntropyHistory" -> {
                PlusMinus[0.017294830105980763`, 0.1791727533011173], 
                PlusMinus[0., 0.23029747132821288`], 
                PlusMinus[0.30260614565785515`, 0.3475115761541398], 
                PlusMinus[0.016020638802418996`, 0.2627968529359238], 
                PlusMinus[0.09128555864101383, 0.2310364645239794], 
                PlusMinus[0.32012194180202524`, 0.30280440107916634`]}, 
              "StandardDeviationHistory" -> {
                PlusMinus[0.7605523154076465, 0.3669447201569234], 
                PlusMinus[0.7539381778910402, 0.3743592421227433], 
                PlusMinus[0.7787026553925291, 0.3498142335869211], 
                PlusMinus[0.7636850355771319, 0.3638520136214105], 
                PlusMinus[0.7676857802177531, 0.35975430216557946`], 
                PlusMinus[0.784569923485005, 0.3451941520194568]}]}, 
           "PredictedPerformances" -> 
           Association[
            "EvaluationTime" -> 0.000023914285714285715`, "ModelMemory" -> 
             14904., "StandardDeviation" -> 
             PlusMinus[0.768772473174059, 0.1468698762369682], 
             "TrainingMemory" -> 65100.57142857143, "TrainingTime" -> 
             0.00813525], "Index" -> 9], 
         Association[
          "Value" -> "LinearRegression", "Options" -> 
           Association[
            "L1Regularization" -> Association["Value" -> 0], 
             "L2Regularization" -> Association["Value" -> 100000.], 
             "OptimizationMethod" -> Association["Value" -> Automatic], 
             MaxIterations -> Association["Value" -> 30]]] -> 
         Association["Experiments" -> {
             Association[
             "MeanCrossEntropy" -> 
              PlusMinus[2.5795220576061197`, 0.060479018694910354`], 
              "StandardDeviation" -> 
              PlusMinus[1.6296590592007993`, 0.09573194215760662], 
              "EvaluationTime" -> 6.89375*^-6, "TestSize" -> 120, 
              "TrainingSize" -> 10, "TrainingTime" -> 0.005743, 
              "TrainingMemory" -> 60024., "ModelMemory" -> 14904., 
              "ExperimentCount" -> 3, "ModelUtility" -> 0.261971351630143, 
              "MeanCrossEntropyHistory" -> {
                PlusMinus[2.5684327361004877`, 0.04915442112121776], 
                PlusMinus[2.685797342212652, 0.052533177132676245`], 
                PlusMinus[2.503693265094039, 0.04728155943904749]}, 
              "StandardDeviationHistory" -> {
                PlusMinus[1.6406280147052805`, 0.16665982273736313`], 
                PlusMinus[1.5824624934552656`, 0.15759131651173763`], 
                PlusMinus[1.6666057255794513`, 0.15665666538518846`]}], 
             Association[
             "MeanCrossEntropy" -> 
              PlusMinus[1.8963060501929807`, 0.07841649571478652], 
              "StandardDeviation" -> 
              PlusMinus[1.6315832441014226`, 0.13477687112554554`], 
              "EvaluationTime" -> 0.00003084285714285714, "TestSize" -> 60, 
              "TrainingSize" -> 40, "TrainingTime" -> 0.005819857142857143, 
              "TrainingMemory" -> 65100.57142857143, "ModelMemory" -> 14904., 
              "ExperimentCount" -> 6, "ModelUtility" -> 0.2604339607012816, 
              "MeanCrossEntropyHistory" -> {
                PlusMinus[1.8902429776584562`, 0.1138742752372826], 
                PlusMinus[1.8392559442974705`, 0.1597897523559215], 
                PlusMinus[2.016090842659569, 0.23240204767829775`], 
                PlusMinus[1.851275629842652, 0.14779523838272357`], 
                PlusMinus[1.89124147079824, 0.14339994908920048`], 
                PlusMinus[2.1186259599692105`, 0.2821857686016476]}, 
              "StandardDeviationHistory" -> {
                PlusMinus[1.6006904493548983`, 0.176387273954184], 
                PlusMinus[1.478288275901878, 0.3376814542785922], 
                PlusMinus[1.8320855080420178`, 0.3448814921981766], 
                PlusMinus[1.5091812025591684`, 0.2935773178437449], 
                PlusMinus[1.6028722753593796`, 0.24855940861665493`], 
                PlusMinus[1.9732211006807474`, 0.3670001152691956]}]}, 
           "PredictedPerformances" -> 
           Association[
            "EvaluationTime" -> 0.00003084285714285714, "ModelMemory" -> 
             14904., "StandardDeviation" -> 
             PlusMinus[1.6315832441014226`, 0.13477687112554554`], 
             "TrainingMemory" -> 65100.57142857143, "TrainingTime" -> 
             0.008652928571428572], "Index" -> 10], 
         Association[
          "Value" -> "LinearRegression", "Options" -> 
           Association[
            "L1Regularization" -> Association["Value" -> 0], 
             "L2Regularization" -> Association["Value" -> 100.], 
             "OptimizationMethod" -> Association["Value" -> Automatic], 
             MaxIterations -> Association["Value" -> 30]]] -> 
         Association["Experiments" -> {
             Association[
             "MeanCrossEntropy" -> 
              PlusMinus[2.4424079870840183`, 0.06789513395140873], 
              "StandardDeviation" -> 
              PlusMinus[1.533052711649118, 0.09932515659047911], 
              "EvaluationTime" -> 8.562500000000001*^-6, "TestSize" -> 120, 
              "TrainingSize" -> 10, "TrainingTime" -> 0.005580750000000001, 
              "TrainingMemory" -> 59976., "ModelMemory" -> 14904., 
              "ExperimentCount" -> 3, "ModelUtility" -> 0.2781472443899445, 
              "MeanCrossEntropyHistory" -> {
                PlusMinus[2.414216445794575, 0.04515285468878397], 
                PlusMinus[2.5726244108957323`, 0.048717098404610304`], 
                PlusMinus[2.3652279066145327`, 0.04336685353321476]}, 
              "StandardDeviationHistory" -> {
                PlusMinus[1.575832127136367, 0.1682602284016317], 
                PlusMinus[1.4401746904505897`, 0.14461946749364046`], 
                PlusMinus[1.5922996123877124`, 0.14220572944996734`]}], 
             Association[
             "MeanCrossEntropy" -> 
              PlusMinus[1.6241659357692915`, 0.08396834835291768], 
              "StandardDeviation" -> 
              PlusMinus[1.338512417060597, 0.11712443739538221`], 
              "EvaluationTime" -> 0.00002411428571428572, "TestSize" -> 60, 
              "TrainingSize" -> 40, "TrainingTime" -> 0.005421571428571428, 
              "TrainingMemory" -> 65100.57142857143, "ModelMemory" -> 14904., 
              "ExperimentCount" -> 6, "ModelUtility" -> 0.31715100453845085`, 
              "MeanCrossEntropyHistory" -> {
                PlusMinus[1.6155695379793438`, 0.08762841161104117], 
                PlusMinus[1.5699658161350378`, 0.17110395000689355`], 
                PlusMinus[1.7790761418828165`, 0.2275158618845431], 
                PlusMinus[1.563616313540164, 0.13781330250942642`], 
                PlusMinus[1.6252273950511353`, 0.13557468124296865`], 
                PlusMinus[1.942900468454398, 0.32021331929623126`]}, 
              "StandardDeviationHistory" -> {
                PlusMinus[1.2924406547231904`, 0.176038058507466], 
                PlusMinus[1.2224711489705145`, 0.29264068380344505`], 
                PlusMinus[1.482766676448405, 0.259367353024902], 
                PlusMinus[1.2221553207204845`, 0.24631388603524978`], 
                PlusMinus[1.3032191580621697`, 0.22039002696485224`], 
                PlusMinus[1.627525605624717, 0.294081345951792]}]}, 
           "PredictedPerformances" -> 
           Association[
            "EvaluationTime" -> 0.00002411428571428572, "ModelMemory" -> 
             14904., "StandardDeviation" -> 
             PlusMinus[1.338512417060597, 0.11712443739538221`], 
             "TrainingMemory" -> 65100.57142857143, "TrainingTime" -> 
             0.008291535714285715], "Index" -> 11], 
         Association[
          "Value" -> "LinearRegression", "Options" -> 
           Association[
            "L1Regularization" -> Association["Value" -> 0], 
             "L2Regularization" -> Association["Value" -> 0.01], 
             "OptimizationMethod" -> Association["Value" -> Automatic], 
             MaxIterations -> Association["Value" -> 30]]] -> 
         Association["Experiments" -> {
             Association[
             "MeanCrossEntropy" -> 
              PlusMinus[1.3175647207935643`, 0.20621883334224003`], 
              "StandardDeviation" -> 
              PlusMinus[0.6770398226089743, 0.07942734620147084], 
              "EvaluationTime" -> 7.150000000000001*^-6, "TestSize" -> 160, 
              "TrainingSize" -> 10, "TrainingTime" -> 0.0054462, 
              "TrainingMemory" -> 59963.200000000004`, "ModelMemory" -> 
              14904., "ExperimentCount" -> 4, "ModelUtility" -> 
              0.6233569428934296, "MeanCrossEntropyHistory" -> {
                PlusMinus[1.434114415154047, 0.023601811722073745`], 
                PlusMinus[0.8421073448935428, 0.05844435912526723], 
                PlusMinus[0.4397484725521387, 0.14864393416360944`], 
                PlusMinus[0.8281086314115844, 0.12709018365932015`]}, 
              "StandardDeviationHistory" -> {
                PlusMinus[0.7943529961515017, 0.0998305199776209], 
                PlusMinus[0.6479262441526353, 0.11164008568807778`], 
                PlusMinus[0.5235089858262735, 0.13941011919698656`], 
                PlusMinus[0.656863528771964, 0.11462401024061149`]}], 
             Association[
             "MeanCrossEntropy" -> 
              PlusMinus[0.08250502626177492, 0.11577984298361092`], 
              "StandardDeviation" -> 
              PlusMinus[0.7687339551719025, 0.14688307273247392`], 
              "EvaluationTime" -> 0.000024342857142857144`, "TestSize" -> 60, 
              "TrainingSize" -> 40, "TrainingTime" -> 0.005626285714285713, 
              "TrainingMemory" -> 65100.57142857143, "ModelMemory" -> 14904., 
              "ExperimentCount" -> 6, "ModelUtility" -> 0.5412029367144238, 
              "MeanCrossEntropyHistory" -> {
                PlusMinus[0.01645967837714174, 0.1792744600227298], 
                PlusMinus[0., 0.23023022817811442`], 
                PlusMinus[0.30250986146348396`, 0.34660534199269444`], 
                PlusMinus[0.016370088542495553`, 0.26290747272322934`], 
                PlusMinus[0.09028948003974235, 0.23089323185983382`], 
                PlusMinus[0.3187539938344247, 0.30196275516823645`]}, 
              "StandardDeviationHistory" -> {
                PlusMinus[0.7604863177434654, 0.36701522149354365`], 
                PlusMinus[0.7539420401696164, 0.3743545577313623], 
                PlusMinus[0.7786977324018639, 0.3498145819799689], 
                PlusMinus[0.7637024261100863, 0.3638344815977717], 
                PlusMinus[0.767631511396731, 0.3598074796784665], 
                PlusMinus[0.7844569082084522, 0.3452829401160892]}]}, 
           "PredictedPerformances" -> 
           Association[
            "EvaluationTime" -> 0.000024342857142857144`, "ModelMemory" -> 
             14904., "StandardDeviation" -> 
             PlusMinus[0.7687339551719025, 0.14688307273247392`], 
             "TrainingMemory" -> 65100.57142857143, "TrainingTime" -> 
             0.008259342857142856], "Index" -> 12], 
         Association[
          "Value" -> "LinearRegression", "Options" -> 
           Association[
            "L1Regularization" -> Association["Value" -> 0], 
             "L2Regularization" -> Association["Value" -> 0.1], 
             "OptimizationMethod" -> Association["Value" -> Automatic], 
             MaxIterations -> Association["Value" -> 30]]] -> 
         Association["Experiments" -> {
             Association[
             "MeanCrossEntropy" -> 
              PlusMinus[1.3141550417047827`, 0.17340640721085118`], 
              "StandardDeviation" -> 
              PlusMinus[0.629746120204327, 0.0675403596674445], 
              "EvaluationTime" -> 6.915000000000001*^-6, "TestSize" -> 160, 
              "TrainingSize" -> 10, "TrainingTime" -> 0.005246200000000001, 
              "TrainingMemory" -> 60027.200000000004`, "ModelMemory" -> 
              14904., "ExperimentCount" -> 4, "ModelUtility" -> 
              0.6714916077681171, "MeanCrossEntropyHistory" -> {
                PlusMinus[1.3918139947029136`, 0.016134610876641003`], 
                PlusMinus[0.7519655600438631, 0.04718991605339349], 
                PlusMinus[0.5923141922345181, 0.15867070797116825`], 
                PlusMinus[0.9211456718112168, 0.15121247008886124`]}, 
              "StandardDeviationHistory" -> {
                PlusMinus[0.6597909379092963, 0.11180496522741455`], 
                PlusMinus[0.5852097883060818, 0.12366324945622725`], 
                PlusMinus[0.5537467012778264, 0.13086742929202555`], 
                PlusMinus[0.6921037701790466, 0.11227999410323752`]}], 
             Association[
             "MeanCrossEntropy" -> 
              PlusMinus[0.07999128103174193, 0.11485789690480408`], 
              "StandardDeviation" -> 
              PlusMinus[0.768374269364663, 0.14700649328256596`], 
              "EvaluationTime" -> 0.000025642857142857145`, "TestSize" -> 60, 
              "TrainingSize" -> 40, "TrainingTime" -> 0.005904857142857143, 
              "TrainingMemory" -> 65091.428571428565`, "ModelMemory" -> 
              14904., "ExperimentCount" -> 6, "ModelUtility" -> 
              0.541430197798977, "MeanCrossEntropyHistory" -> {
                PlusMinus[0.008574628520630179, 0.1802537184888833], 
                PlusMinus[0., 0.22949145725726197`], 
                PlusMinus[0.301773660035271, 0.33755082788355883`], 
                PlusMinus[0.020001888989195193`, 0.2639115423911425], 
                PlusMinus[0.08068199568614531, 0.22947528145510007`], 
                PlusMinus[0.3057064032392417, 0.29359506624138176`]}, 
              "StandardDeviationHistory" -> {
                PlusMinus[0.7598556030479836, 0.36769167514160805`], 
                PlusMinus[0.7539925947384795, 0.37429402283067953`], 
                PlusMinus[0.7786683335631709, 0.3498015684029039], 
                PlusMinus[0.7638832587009687, 0.3636521781317881], 
                PlusMinus[0.7671085076177933, 0.3603214978652488], 
                PlusMinus[0.7833796572067945, 0.34613183155379706`]}]}, 
           "PredictedPerformances" -> 
           Association[
            "EvaluationTime" -> 0.000025642857142857145`, "ModelMemory" -> 
             14904., "StandardDeviation" -> 
             PlusMinus[0.768374269364663, 0.14700649328256596`], 
             "TrainingMemory" -> 65091.428571428565`, "TrainingTime" -> 
             0.008198628571428572], "Index" -> 13]], 
        TypeSystem`Assoc[
         TypeSystem`Struct[{"Value", "Options"}, {
           TypeSystem`Atom[
            TypeSystem`Enumeration["LinearRegression"]], 
           TypeSystem`Assoc[TypeSystem`AnyType, 
            TypeSystem`Struct[{"Value"}, {TypeSystem`AnyType}], 4]}], 
         TypeSystem`Struct[{"Experiments", "PredictedPerformances", "Index"}, {
           TypeSystem`Vector[
            
            TypeSystem`Struct[{
             "MeanCrossEntropy", "StandardDeviation", "EvaluationTime", 
              "TestSize", "TrainingSize", "TrainingTime", "TrainingMemory", 
              "ModelMemory", "ExperimentCount", "ModelUtility", 
              "MeanCrossEntropyHistory", "StandardDeviationHistory"}, {
             TypeSystem`AnyType, TypeSystem`AnyType, 
              TypeSystem`Atom[Real], 
              TypeSystem`Atom[Integer], 
              TypeSystem`Atom[Integer], 
              TypeSystem`Atom[Real], 
              TypeSystem`Atom[Real], 
              TypeSystem`Atom[Real], 
              TypeSystem`Atom[Integer], 
              TypeSystem`Atom[Real], 
              TypeSystem`Vector[TypeSystem`AnyType, TypeSystem`AnyLength], 
              TypeSystem`Vector[TypeSystem`AnyType, TypeSystem`AnyLength]}], 
            2], 
           
           TypeSystem`Struct[{
            "EvaluationTime", "ModelMemory", "StandardDeviation", 
             "TrainingMemory", "TrainingTime"}, {
             TypeSystem`Atom[Real], 
             TypeSystem`Atom[Real], TypeSystem`AnyType, 
             TypeSystem`Atom[Real], 
             TypeSystem`Atom[Real]}], 
           TypeSystem`Atom[Integer]}], 13], 
        Association["ID" -> 269101318111046]], "MaxTrainingSize" -> 50, 
      "LastReportingTime" -> 3.739703365598803`16.325412144357028*^9, 
      "PreprocessorEvaluationTime" -> 
      3.77099609375001728131526768095227`4.*^-6, "PreprocessorMemory" -> 
      72176, "RoundPartitioning" -> Dataset[{
         Association[
         "TrainingSizes" -> 10, "TimeBudgets" -> 0.7999999999999999, 
          "ElapsedTimes" -> 0.8558, "ExperimentCounts" -> 44], 
         Association[
         "TrainingSizes" -> 40, "TimeBudgets" -> 1., "ElapsedTimes" -> 
          0.9956710000000002, "ExperimentCounts" -> 79]}, 
        TypeSystem`Vector[
         TypeSystem`Struct[{
          "TrainingSizes", "TimeBudgets", "ElapsedTimes", 
           "ExperimentCounts"}, {
           TypeSystem`Atom[Integer], 
           TypeSystem`Atom[Real], 
           TypeSystem`Atom[Real], 
           TypeSystem`Atom[Integer]}], 2], 
        Association[
        "Origin" -> HoldComplete[GeneralUtilities`AssociationTranspose, 
           Dataset`DatasetHandle[269109908045638]], "ID" -> 
         269114203012934]]], "Log" -> 
    Association["Example" -> MachineLearning`MLDataset[
        Association[
        "f1" -> Association[
          "Type" -> "Numerical", "Weight" -> 1, 
           "Values" -> {-0.04439120677217234}, "ID" -> 6256679568790717639], 
         "f2" -> Association[
          "Type" -> "Numerical", "Weight" -> 1, 
           "Values" -> {0.9289025084482456}, "ID" -> 8623262771504601198], 
         "f3" -> Association[
          "Type" -> "Numerical", "Weight" -> 1, 
           "Values" -> {0.3586161208392409}, "ID" -> 4132395819933524331], 
         "f4" -> Association[
          "Type" -> "Numerical", "Weight" -> 1, 
           "Values" -> {-0.4432093379288915}, "ID" -> 8694373178801165222], 
         "f5" -> Association[
          "Type" -> "Numerical", "Weight" -> 1, 
           "Values" -> {0.2719353855530362}, "ID" -> 1348181103987964274], 
         "f6" -> Association[
          "Type" -> "Numerical", "Weight" -> 1, 
           "Values" -> {-0.6671619527949235}, "ID" -> 157490378243617503], 
         "f7" -> Association[
          "Type" -> "Boolean", "Weight" -> 1, "Values" -> {1}, "ID" -> 
           939946895530328469], "f8" -> 
         Association[
          "Type" -> "Boolean", "Weight" -> 1, "Values" -> {0}, "ID" -> 
           3064004026125996483]], 
        Association[
        "ExampleNumber" -> 1, "ExampleWeights" -> 1, "RawExample" -> False]], 
      "TrainingTime" -> 2.498327, "MaxTrainingMemory" -> 757072, "DataMemory" -> 
      15648, "FunctionMemory" -> 293472, "LanguageVersion" -> {11.3, 0}, 
      "Date" -> DateObject[{2018, 7, 4, 14, 29, 26.02112`8.16790096758186}, 
        "Instant", "Gregorian", -4.], "ProcessorCount" -> 4, "ProcessorType" -> 
      "x86-64", "OperatingSystem" -> "MacOSX", "SystemWordLength" -> 64, 
      "Evaluations" -> {}]]],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.739717680132369*^9, 3.739717766053022*^9},
 CellLabel->"Out[31]=",ExpressionUUID->"3a37e342-c00c-4080-a897-a436416e2f8d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"pm", "=", 
  RowBox[{"PredictorMeasurements", "[", 
   RowBox[{"p", ",", 
    RowBox[{"Thread", "[", 
     RowBox[{"testData", "\[Rule]", "testResults"}], "]"}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.7397178362833767`*^9, 3.739717857026514*^9}, 
   3.739718016503529*^9, {3.739718048670498*^9, 3.7397180507085733`*^9}},
 CellLabel->"In[36]:=",ExpressionUUID->"82b54fb2-bb71-4f40-8b00-3978c2dde18f"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["PredictorMeasurementsObject",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    
    TemplateBox[{PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource[
               "FEBitmaps", "SquarePlusIconMedium"]], 
              ButtonFunction :> (Typeset`open$$ = True), Appearance -> None, 
              Evaluator -> Automatic, Method -> "Preemptive"], 
             Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{{{}, {}, {
                GrayLevel[0.6], 
                Thickness[0.03], 
                Opacity[1.], 
                Dashing[{Small, Small}], 
                
                LineBox[{{2.409616047529911*^-7, 2.409616047529911*^-7}, {
                 11.803066020732206`, 11.803066020732206`}}]}}, {{}, {{}, {
                 GrayLevel[0.4], 
                 PointSize[0.09], 
                 AbsoluteThickness[1.6], 
                 
                 PointBox[{{1.6948167795276383`, 2.9052679959834418`}, {
                  2.227816320451859, 2.584653237430766}, {3.043099335090081, 
                  4.798822972025658}, {3.5728355469237116`, 
                  5.9507424155697155`}, {4.158566334344331, 
                  5.2097676165465385`}, {4.824808988689111, 
                  7.23346088027902}, {6.88649660338492, 5.297021421229134}, {
                  7.819072150835878, 6.533166043611269}, {8.437306856915493, 
                  8.81724006216815}, {8.604907881861761, 
                  11.302704526196452`}}]}, {}}, {}}}, FrameStyle -> 
             Directive[
               Thickness[Tiny], 
               GrayLevel[0.7]], Axes -> False, AspectRatio -> 1, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}], Frame -> True, FrameTicks -> None, 
             FrameStyle -> Directive[
               Opacity[0.5], 
               Thickness[Tiny], 
               RGBColor[0.368417, 0.506779, 0.709798]]], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Predictor: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"LinearRegression\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox[
                 "\"Number of test examples: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["20", "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource[
               "FEBitmaps", "SquareMinusIconMedium"]], 
              ButtonFunction :> (Typeset`open$$ = False), Appearance -> None, 
              Evaluator -> Automatic, Method -> "Preemptive"], 
             Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{{{}, {}, {
                GrayLevel[0.6], 
                Thickness[0.03], 
                Opacity[1.], 
                Dashing[{Small, Small}], 
                
                LineBox[{{2.409616047529911*^-7, 2.409616047529911*^-7}, {
                 11.803066020732206`, 11.803066020732206`}}]}}, {{}, {{}, {
                 GrayLevel[0.4], 
                 PointSize[0.09], 
                 AbsoluteThickness[1.6], 
                 
                 PointBox[{{1.6948167795276383`, 2.9052679959834418`}, {
                  2.227816320451859, 2.584653237430766}, {3.043099335090081, 
                  4.798822972025658}, {3.5728355469237116`, 
                  5.9507424155697155`}, {4.158566334344331, 
                  5.2097676165465385`}, {4.824808988689111, 
                  7.23346088027902}, {6.88649660338492, 5.297021421229134}, {
                  7.819072150835878, 6.533166043611269}, {8.437306856915493, 
                  8.81724006216815}, {8.604907881861761, 
                  11.302704526196452`}}]}, {}}, {}}}, FrameStyle -> 
             Directive[
               Thickness[Tiny], 
               GrayLevel[0.7]], Axes -> False, AspectRatio -> 1, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}], Frame -> True, FrameTicks -> None, 
             FrameStyle -> Directive[
               Opacity[0.5], 
               Thickness[Tiny], 
               RGBColor[0.368417, 0.506779, 0.709798]]], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Predictor: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"LinearRegression\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox[
                 "\"Number of test examples: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["20", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"StandardDeviation: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  
                  RowBox[{
                   "0.2560848602771899629`2.774126656498813", "\[PlusMinus]", 
                    "0.0434400670229186381`2."}], "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  PredictorMeasurementsObject[
   Association["Model" -> PredictorFunction[
      Association[
      "ExampleNumber" -> 50, "Input" -> 
       Association[
        "Preprocessor" -> MachineLearning`MLProcessor["ToMLDataset", 
           Association[
           "Input" -> Association[
             "f1" -> Association["Type" -> "Numerical"], "f2" -> 
              Association["Type" -> "Numerical"], "f3" -> 
              Association["Type" -> "Numerical"], "f4" -> 
              Association["Type" -> "Numerical"], "f5" -> 
              Association["Type" -> "Numerical"], "f6" -> 
              Association["Type" -> "Numerical"], "f7" -> 
              Association["Type" -> "Boolean"], "f8" -> 
              Association["Type" -> "Boolean"]], "Output" -> 
            Association[
             "f1" -> Association["Type" -> "Numerical", "Weight" -> 1], "f2" -> 
              Association["Type" -> "Numerical", "Weight" -> 1], "f3" -> 
              Association["Type" -> "Numerical", "Weight" -> 1], "f4" -> 
              Association["Type" -> "Numerical", "Weight" -> 1], "f5" -> 
              Association["Type" -> "Numerical", "Weight" -> 1], "f6" -> 
              Association["Type" -> "Numerical", "Weight" -> 1], "f7" -> 
              Association["Type" -> "Boolean", "Weight" -> 1], "f8" -> 
              Association["Type" -> "Boolean", "Weight" -> 1]], 
            "Preprocessor" -> MachineLearning`MLProcessor["Sequence", 
              Association["Processors" -> {
                 MachineLearning`MLProcessor["Transpose", 
                  Association["FeatureNumber" -> 8]], 
                 MachineLearning`MLProcessor["WrapMLDataset", 
                  Association[
                  "FeatureTypes" -> {
                    "Numerical", "Numerical", "Numerical", "Numerical", 
                    "Numerical", "Numerical", "Boolean", "Boolean"}, 
                   "FeatureKeys" -> {
                    "f1", "f2", "f3", "f4", "f5", "f6", "f7", "f8"}, 
                   "FeatureWeights" -> Automatic, "ExampleWeights" -> 
                   Automatic, "RawExample" -> 
                   Missing["KeyAbsent", "RawExample"]]]}]], "ScalarFeature" -> 
            False, "Invertibility" -> "Perfect", "Missing" -> "Allowed"]], 
         "Processor" -> MachineLearning`MLProcessor["Sequence", 
           Association[
           "Input" -> Association[
             "f1" -> Association["Type" -> "Numerical", "Weight" -> 1], "f2" -> 
              Association["Type" -> "Numerical", "Weight" -> 1], "f3" -> 
              Association["Type" -> "Numerical", "Weight" -> 1], "f4" -> 
              Association["Type" -> "Numerical", "Weight" -> 1], "f5" -> 
              Association["Type" -> "Numerical", "Weight" -> 1], "f6" -> 
              Association["Type" -> "Numerical", "Weight" -> 1], "f7" -> 
              Association["Type" -> "Boolean", "Weight" -> 1], "f8" -> 
              Association["Type" -> "Boolean", "Weight" -> 1]], "Output" -> 
            Association[
             "((f7f8)(f1f2f3f4f5f6))" -> 
              Association["Type" -> "NumericalVector", "Weight" -> 8.]], 
            "Processors" -> {
              MachineLearning`MLProcessor["Threads", 
               Association[
               "Input" -> 
                Association[
                 "f1" -> Association["Type" -> "Numerical", "Weight" -> 1], 
                  "f2" -> Association["Type" -> "Numerical", "Weight" -> 1], 
                  "f3" -> Association["Type" -> "Numerical", "Weight" -> 1], 
                  "f4" -> Association["Type" -> "Numerical", "Weight" -> 1], 
                  "f5" -> Association["Type" -> "Numerical", "Weight" -> 1], 
                  "f6" -> Association["Type" -> "Numerical", "Weight" -> 1], 
                  "f7" -> Association["Type" -> "Boolean", "Weight" -> 1], 
                  "f8" -> Association["Type" -> "Boolean", "Weight" -> 1]], 
                "Output" -> 
                Association[
                 "(f1f2f3f4f5f6)" -> 
                  Association["Type" -> "NumericalVector", "Weight" -> 6], 
                  "(f7f8)" -> 
                  Association["Type" -> "BooleanVector", "Weight" -> 2]], 
                "Processors" -> {
                  MachineLearning`MLProcessor["ToVector", 
                   Association[
                   "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
                    "Input" -> 
                    Association[
                    "f1" -> Association["Type" -> "Numerical", "Weight" -> 1],
                     "f2" -> Association[
                    "Type" -> "Numerical", "Weight" -> 1], "f3" -> 
                    Association["Type" -> "Numerical", "Weight" -> 1], "f4" -> 
                    Association["Type" -> "Numerical", "Weight" -> 1], "f5" -> 
                    Association["Type" -> "Numerical", "Weight" -> 1], "f6" -> 
                    Association["Type" -> "Numerical", "Weight" -> 1]], 
                    "Output" -> 
                    Association[
                    "(f1f2f3f4f5f6)" -> 
                    Association["Type" -> "NumericalVector", "Weight" -> 6]], 
                    "Version" -> {11.3, 0}, "ID" -> 7702479604741579352]], 
                  MachineLearning`MLProcessor["ToVector", 
                   Association[
                   "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
                    "Input" -> 
                    Association[
                    "f7" -> Association["Type" -> "Boolean", "Weight" -> 1], 
                    "f8" -> Association["Type" -> "Boolean", "Weight" -> 1]], 
                    "Output" -> 
                    Association[
                    "(f7f8)" -> 
                    Association["Type" -> "BooleanVector", "Weight" -> 2]], 
                    "Version" -> {11.3, 0}, "ID" -> 3355605293894169357]]}, 
                "Invertibility" -> "Perfect", "Missing" -> "Allowed"]], 
              MachineLearning`MLProcessor["ConformBooleanVector", 
               Association[
               "Invertibility" -> "Perfect", "Missing" -> "Allowed", "Input" -> 
                Association[
                 "(f7f8)" -> 
                  Association["Type" -> "BooleanVector", "Weight" -> 2]], 
                "Version" -> {11.3, 0}, "ID" -> 3859453107201388839, "Output" -> 
                Association[
                 "(f7f8)" -> 
                  Association["Type" -> "BooleanVector", "Weight" -> 2]]]], 
              MachineLearning`MLProcessor["BooleanVectorToNumericalVector", 
               Association[
               "Invertibility" -> "Perfect", "Missing" -> "Allowed", "Input" -> 
                Association[
                 "(f7f8)" -> 
                  Association["Type" -> "BooleanVector", "Weight" -> 2]], 
                "Version" -> {11.3, 0}, "ID" -> 4560195258105199146, "Output" -> 
                Association[
                 "(f7f8)" -> 
                  Association["Type" -> "NumericalVector", "Weight" -> 2]]]], 
              
              MachineLearning`MLProcessor["MergeVectors", 
               Association[
               "Invertibility" -> "Perfect", "Missing" -> "Allowed", "Input" -> 
                Association[
                 "(f7f8)" -> 
                  Association["Type" -> "NumericalVector", "Weight" -> 2], 
                  "(f1f2f3f4f5f6)" -> 
                  Association["Type" -> "NumericalVector", "Weight" -> 6]], 
                "Spans" -> {
                  Span[1, 2], 
                  Span[3, 8]}, "Wrappers" -> {Identity, Identity}, "Output" -> 
                Association[
                 "((f7f8)(f1f2f3f4f5f6))" -> 
                  Association[
                   "Weight" -> {1., 1., 1., 1., 1., 1., 1., 1.}, "Type" -> 
                    "NumericalVector"]], "Version" -> {11.3, 0}, "ID" -> 
                3344780077936403356]], 
              MachineLearning`MLProcessor["ImputeMissing", 
               Association[
               "Invertibility" -> "Perfect", "Missing" -> "Imputed", "Input" -> 
                Association[
                 "((f7f8)(f1f2f3f4f5f6))" -> 
                  Association[
                   "Weight" -> {1., 1., 1., 1., 1., 1., 1., 1.}, "Type" -> 
                    "NumericalVector"]], 
                "Imputer" -> (DimensionReducerFunction[
                  Association[
                  "ExampleNumber" -> 50, "Imputer" -> 
                   MachineLearning`MLProcessor["ImputeMissing", 
                    Association[
                    "Invertibility" -> "Perfect", "Missing" -> "Imputed", 
                    "Input" -> 
                    Association[
                    "f1" -> Association[
                    "Type" -> "NumericalVector", "Weight" -> 1]], 
                    "Fill" -> {0.48, 0.46, 0.16035733655493947`, 
                    0.006553943077325677, -0.08798711364897852, \
-0.18002025939256588`, -0.11277276726038907`, -0.04658096594465166}, "Method" -> 
                    "Naive", "VectorLength" -> 8, "Output" -> 
                    Association[
                    "f1" -> Association[
                    "Type" -> "NumericalVector", "Weight" -> 1]], "Type" -> 
                    "NumericalVector"]], "RandomImputer" -> 
                   MachineLearning`MLProcessor["ImputeMissing", 
                    Association[
                    "Invertibility" -> "Perfect", "Missing" -> "Imputed", 
                    "Input" -> 
                    Association[
                    "f1" -> Association[
                    "Type" -> "NumericalVector", "Weight" -> 1]], 
                    "Mean" -> {0.48, 0.46, 0.16035733655493947`, 
                    0.006553943077325677, -0.08798711364897852, \
-0.18002025939256588`, -0.11277276726038907`, -0.04658096594465166}, 
                    "StandardDeviation" -> {0.49959983987187184`, 
                    0.4983974317750845, 0.5581046578381011, 
                    0.5676290070790009, 0.5953737337266565, 
                    0.49948717902182793`, 0.538732486360925, 
                    0.5557314514268795}, "Method" -> "NaiveSampler", 
                    "VectorLength" -> 8, "Output" -> 
                    Association[
                    "f1" -> Association[
                    "Type" -> "NumericalVector", "Weight" -> 1]], "Type" -> 
                    "NumericalVector"]], "Preprocessor" -> 
                   MachineLearning`MLProcessor["ToMLDataset", 
                    Association[
                    "Input" -> 
                    Association[
                    "f1" -> Association[
                    "Type" -> "NumericalVector", "Length" -> 8]], "Output" -> 
                    Association[
                    "f1" -> Association[
                    "Type" -> "NumericalVector", "Weight" -> 1]], 
                    "Preprocessor" -> 
                    MachineLearning`MLProcessor["Sequence", 
                    Association["Processors" -> {
                    MachineLearning`MLProcessor["List"], 
                    MachineLearning`MLProcessor["WrapMLDataset", 
                    Association[
                    "FeatureTypes" -> {"NumericalVector"}, 
                    "FeatureKeys" -> {"f1"}, "FeatureWeights" -> Automatic, 
                    "ExampleWeights" -> Automatic, "RawExample" -> 
                    Missing["KeyAbsent", "RawExample"]]]}]], "ScalarFeature" -> 
                    True, "Invertibility" -> "Perfect", "Missing" -> 
                    "Allowed"]], "Processor" -> 
                   MachineLearning`MLProcessor["Identity"], "Padder" -> 
                   MachineLearning`MLProcessor["Identity"], "PostProcessor" -> 
                   MachineLearning`MLProcessor["FromMLDataset", 
                    Association[
                    "DatasetFormat" -> Automatic, "Input" -> 
                    Association[
                    "f1" -> Association[
                    "Type" -> "NumericalVector", "Weight" -> 1]], "Output" -> 
                    Association[
                    "f1" -> Association[
                    "Type" -> "NumericalVector", "Length" -> 8]], 
                    "InversePreprocessor" -> 
                    MachineLearning`MLProcessor["Sequence", 
                    Association["Processors" -> {
                    MachineLearning`MLProcessor["List"], 
                    MachineLearning`MLProcessor["WrapMLDataset", 
                    Association[
                    "FeatureTypes" -> {"NumericalVector"}, 
                    "FeatureKeys" -> {"f1"}, "FeatureWeights" -> {1}, 
                    "ExampleWeights" -> 1]]}]], "ScalarFeature" -> True, 
                    "Invertibility" -> "Perfect", "Missing" -> "Allowed"]], 
                   "Model" -> Association["Matrix" -> CompressedData["
1:eJwBEQLu/SFib1JlAgAAAAgAAAAIAAAAFVYesf6M4T9NDDjI3+nAv+TJWfVv
Zp4/Ub3cw+YH0L8fCudo3B6/P2CevNe7IcC/Gtjb60F96D+x2Tpj1JSlP4x5
4+rcOc6/0UD1IrPm0j9s3xn1dIbVPwhleGYvR+K/IIEW0nNgtr/tlt8WyKfi
vxDCP0wabLO/PzVRug890D+4W78aVPOuPxM/di9bjso/6k19v9235j/6bHc1
AwPcPwAnouffG4O/TGWq3qT+w7+g9oAfqiC8P1VNshHlGN6/uG5jO4MS2r8x
qbz65Qbav2uhtrjU8Ng/0GhHT56rvT/H4JAkJf7Vv3egHSHNxNE/o+g3+NB4
1D+joQLD+AndP/33JxoopNY/URLv4gm63b/H1Ug57POSv4ou7kkIBNg/CigX
XzC2wL81uKxgJmDiv0347crLLtO/gD8qxi9A0j8g5oDInwHVP+wSBeAMNr0/
uIep5nu9pb/xVSZSKQPIv48qBallHey/hFIQrUEzwj9LQ4K1Q++5v+USbbeu
jcm/kmERudVl379Ib780qvzEvwtdKFRGg9q/rno7FITevD8URkgQF7jMv4Zz
JwkHoNu/nC2ztqNN1z9GSXdrVhHbv5lbXpJOQ5A/SDYhdqcD5T9XxQj3zGLO
v4thwxgo1d0/3UDlfBcmwr/AgFq1p520v89OLn5evs8/JJb9oCMa3T88jQu5

                    "], "Processor" -> 
                    MachineLearning`MLProcessor["Standardize", 
                    Association[
                    "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
                    "Input" -> 
                    Association[
                    "f1" -> Association[
                    "Type" -> "NumericalVector", "Weight" -> 1]], 
                    "Mean" -> {0.48, 0.46, 0.16035733655493947`, 
                    0.006553943077325677, -0.08798711364897852, \
-0.18002025939256588`, -0.11277276726038907`, -0.04658096594465166}, 
                    "StandardDeviation" -> {0.49959983987187184`, 
                    0.4983974317750845, 0.5581046578381011, 
                    0.5676290070790009, 0.5953737337266565, 
                    0.49948717902182793`, 0.538732486360925, 
                    0.5557314514268795}, "Output" -> 
                    Association[
                    "f1" -> Association[
                    "Type" -> "NumericalVector", "Weight" -> 1]]]], 
                    "FinalDimension" -> 8, "Method" -> "Linear"], 
                   "PerformanceGoal" -> Automatic, "Invertibility" -> 
                   "Approximate", "Log" -> 
                   Association[
                    "TrainingTime" -> 0.009356, "MaxTrainingMemory" -> 64712, 
                    "DataMemory" -> 3448, "FunctionMemory" -> 23032, 
                    "LanguageVersion" -> {11.3, 0}, "Date" -> 
                    DateObject[{
                    2018, 7, 4, 14, 29, 23.617039`8.12580042965394}, 
                    "Instant", "Gregorian", -4.], "ProcessorCount" -> 4, 
                    "ProcessorType" -> "x86-64", "OperatingSystem" -> 
                    "MacOSX", "SystemWordLength" -> 64, 
                    "Evaluations" -> {}]]][#, "ImputedVectors", 
                  PerformanceGoal -> "Quality"]& ), "Method" -> 
                "DimensionReduction", "VectorLength" -> 8, "Output" -> 
                Association[
                 "((f7f8)(f1f2f3f4f5f6))" -> 
                  Association["Type" -> "NumericalVector", "Weight" -> 8.]], 
                "Type" -> "NumericalVector", "Version" -> {11.3, 0}, "ID" -> 
                6746930599685287522]], 
              MachineLearning`MLProcessor["Standardize", 
               Association[
               "Invertibility" -> "Perfect", "Missing" -> "Allowed", "Input" -> 
                Association[
                 "((f7f8)(f1f2f3f4f5f6))" -> 
                  Association["Type" -> "NumericalVector", "Weight" -> 8.]], 
                "Mean" -> {0.48, 0.46, 0.16035733655493947`, 
                 0.006553943077325677, -0.08798711364897852, \
-0.18002025939256588`, -0.11277276726038907`, -0.04658096594465166}, 
                "StandardDeviation" -> {0.49959983987187184`, 
                 0.4983974317750845, 0.5581046578381011, 0.5676290070790009, 
                 0.5953737337266565, 0.49948717902182793`, 0.538732486360925, 
                 0.5557314514268795}, "Output" -> 
                Association[
                 "((f7f8)(f1f2f3f4f5f6))" -> 
                  Association["Type" -> "NumericalVector", "Weight" -> 8.]], 
                "Version" -> {11.3, 0}, "ID" -> 1752490845919100894]]}, 
            "Invertibility" -> "Perfect", "Missing" -> "Imputed"]]], "Output" -> 
       Association[
        "Preprocessor" -> MachineLearning`MLProcessor["ToMLDataset", 
           Association[
           "Input" -> Association["f1" -> Association["Type" -> "Numerical"]],
             "Output" -> 
            Association[
             "f1" -> Association["Type" -> "Numerical", "Weight" -> 1]], 
            "Preprocessor" -> MachineLearning`MLProcessor["Sequence", 
              Association["Processors" -> {
                 MachineLearning`MLProcessor["List"], 
                 MachineLearning`MLProcessor["WrapMLDataset", 
                  Association[
                  "FeatureTypes" -> {"Numerical"}, "FeatureKeys" -> {"f1"}, 
                   "FeatureWeights" -> Automatic, "ExampleWeights" -> 
                   Automatic, "RawExample" -> 
                   Missing["KeyAbsent", "RawExample"]]]}]], "ScalarFeature" -> 
            True, "Invertibility" -> "Perfect", "Missing" -> "Allowed"]], 
         "Processor" -> MachineLearning`MLProcessor["Sequence", 
           Association[
           "Input" -> Association[
             "f1" -> Association["Type" -> "Numerical", "Weight" -> 1]], 
            "Output" -> 
            Association[
             "f1" -> Association["Type" -> "Numerical", "Weight" -> 1]], 
            "Processors" -> {
              MachineLearning`MLProcessor["ToVector", 
               Association[
               "Invertibility" -> "Perfect", "Missing" -> "Allowed", "Input" -> 
                Association[
                 "f1" -> Association["Type" -> "Numerical", "Weight" -> 1]], 
                "Output" -> 
                Association[
                 "f1" -> Association[
                   "Type" -> "NumericalVector", "Weight" -> 1]], 
                "Version" -> {11.3, 0}, "ID" -> 226620591177916996]], 
              MachineLearning`MLProcessor["Standardize", 
               Association[
               "Invertibility" -> "Perfect", "Missing" -> "Allowed", "Input" -> 
                Association[
                 "f1" -> Association[
                   "Type" -> "NumericalVector", "Weight" -> 1]], 
                "Mean" -> {-0.13566872678470682`}, 
                "StandardDeviation" -> {1.6228460365885082`}, "Output" -> 
                Association[
                 "f1" -> Association[
                   "Type" -> "NumericalVector", "Weight" -> 1]], 
                "Version" -> {11.3, 0}, "ID" -> 5066674405040618180]], 
              MachineLearning`MLProcessor["FromVector", 
               Association[
               "Invertibility" -> "Perfect", "Missing" -> "Allowed", "Input" -> 
                Association[
                 "f1" -> Association[
                   "Type" -> "NumericalVector", "Weight" -> 1]], "Output" -> 
                Association[
                 "f1" -> Association["Type" -> "Numerical", "Weight" -> 1]], 
                "Version" -> {11.3, 0}, "ID" -> 1033132177290556771]], 
              MachineLearning`MLProcessor["FirstValues", 
               Association[
               "Info" -> Association["Type" -> "Numerical", "Weight" -> 1], 
                "Key" -> "f1", "Invertibility" -> "Perfect", "Missing" -> 
                "Allowed"]]}, "Invertibility" -> "Perfect", "Missing" -> 
            "Allowed"]], "ProbabilityPostprocessor" -> Identity, 
         "InverseProcessorFunction" -> (-0.13566872678470682` + 
          1.6228460365885082` #& ), 
         "ProcessorFunction" -> (0.08359925940350141 + 
          0.6162014001661957 #& ), "Name" -> "value", 
         "Quantiles" -> {-2.0023795471049954`, 2.456251522161173}], "Prior" -> 
       Automatic, "Utility" -> (DiracDelta[#2 - #]& ), "Threshold" -> 0, 
       "PerformanceGoal" -> Automatic, "BatchProcessing" -> Automatic, 
       "Model" -> Association["MeanFunction" -> LinearLayer[
           Association[
           "Type" -> "Linear", "Arrays" -> 
            Association[
             "Weights" -> 
              RawArray["Real32",{{-0.20642682909965515`, 0.2775843143463135, 
                0.13517409563064575`, -0.36706671118736267`, 
                0.7620525360107422, 0.19578959047794342`, 
                0.041532598435878754`, 0.4466799199581146}}], "Biases" -> 
              RawArray["Real32",{0.}]], "Parameters" -> 
            Association[
             "OutputDimensions" -> {1}, "$OutputSize" -> 1, "$InputSize" -> 8,
               "$InputDimensions" -> {8}], "Inputs" -> 
            Association[
             "Input" -> NeuralNetworks`TensorT[{8}, NeuralNetworks`RealT]], 
            "Outputs" -> 
            Association[
             "Output" -> NeuralNetworks`TensorT[{1}, NeuralNetworks`RealT]]], 
           
           Association["Version" -> "11.3.5"]], 
         "DistributionData" -> {NormalDistribution, 0.12212322652194993`}, 
         "Processor" -> MachineLearning`MLProcessor["Sequence", 
           Association[
           "Input" -> Association[
             "((f7f8)(f1f2f3f4f5f6))" -> 
              Association["Type" -> "NumericalVector", "Weight" -> 8.]], 
            "Output" -> 
            Association[
             "((f7f8)(f1f2f3f4f5f6))" -> 
              Association["Type" -> "NumericalVector", "Weight" -> 8.]], 
            "Processors" -> {
              MachineLearning`MLProcessor["Standardize", 
               Association[
               "Invertibility" -> "Perfect", "Missing" -> "Allowed", "Input" -> 
                Association[
                 "((f7f8)(f1f2f3f4f5f6))" -> 
                  Association["Type" -> "NumericalVector", "Weight" -> 8.]], 
                "Mean" -> {-4.4408920985006264`*^-17, 2.220446049250313*^-18, 
                 1.2878587085651815`*^-16, 
                 1.1102230246251566`*^-17, -1.3322676295501878`*^-17, 
                 3.7747582837255325`*^-17, 8.881784197001253*^-18, 
                 3.0808688933348097`*^-17}, 
                "StandardDeviation" -> {1., 1., 0.9999999999999997, 1., 
                 1.0000000000000002`, 1., 0.9999999999999998, 
                 0.9999999999999999}, "Output" -> 
                Association[
                 "((f7f8)(f1f2f3f4f5f6))" -> 
                  Association["Type" -> "NumericalVector", "Weight" -> 8.]], 
                "Version" -> {11.3, 0}, "ID" -> 484788832103453132]], 
              MachineLearning`MLProcessor["FirstValues", 
               Association[
               "Info" -> Association[
                 "Type" -> "NumericalVector", "Weight" -> 8.], "Key" -> 
                "((f7f8)(f1f2f3f4f5f6))", "Invertibility" -> "Perfect", 
                "Missing" -> "Allowed"]]}, "Invertibility" -> "Perfect", 
            "Missing" -> "Allowed"]], "Method" -> "LinearRegression", 
         "Options" -> 
         Association[
          "L1Regularization" -> 
           Association["Value" -> 0, "Options" -> Association[]], 
           "L2Regularization" -> 
           Association["Value" -> 0.1, "Options" -> Association[]], 
           "OptimizationMethod" -> 
           Association[
            "Value" -> "NormalEquation", "Options" -> Association[]], 
           MaxIterations -> 
           Association["Value" -> 30, "Options" -> Association[]]]], 
       "TrainingInformation" -> 
       Association[
        "LossName" -> "StandardDeviation", "BestModelInformation" -> Dataset[
           Association[
           "MeanCrossEntropy" -> 
            PlusMinus[1.3141550417047827`, 0.17340640721085118`], 
            "StandardDeviation" -> 
            PlusMinus[0.629746120204327, 0.0675403596674445], 
            "EvaluationTime" -> 6.915000000000001*^-6, "TestSize" -> 160, 
            "TrainingSize" -> 10, "TrainingTime" -> 0.005246200000000001, 
            "TrainingMemory" -> 60027.200000000004`, "ModelMemory" -> 14904., 
            "ExperimentCount" -> 4, "ModelUtility" -> 0.6714916077681171, 
            "MeanCrossEntropyHistory" -> {
              PlusMinus[1.3918139947029136`, 0.016134610876641003`], 
              PlusMinus[0.7519655600438631, 0.04718991605339349], 
              PlusMinus[0.5923141922345181, 0.15867070797116825`], 
              PlusMinus[0.9211456718112168, 0.15121247008886124`]}, 
            "StandardDeviationHistory" -> {
              PlusMinus[0.6597909379092963, 0.11180496522741455`], 
              PlusMinus[0.5852097883060818, 0.12366324945622725`], 
              PlusMinus[0.5537467012778264, 0.13086742929202555`], 
              PlusMinus[0.6921037701790466, 0.11227999410323752`]}, 
            "Configuration" -> {
             "LinearRegression", "L1Regularization" -> 0, "L2Regularization" -> 
              0.1, "OptimizationMethod" -> Automatic, MaxIterations -> 30}, 
            "FinalTrainingSize" -> 50], 
           
           TypeSystem`Struct[{
            "MeanCrossEntropy", "StandardDeviation", "EvaluationTime", 
             "TestSize", "TrainingSize", "TrainingTime", "TrainingMemory", 
             "ModelMemory", "ExperimentCount", "ModelUtility", 
             "MeanCrossEntropyHistory", "StandardDeviationHistory", 
             "Configuration", "FinalTrainingSize"}, {
            TypeSystem`AnyType, TypeSystem`AnyType, 
             TypeSystem`Atom[Real], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Real], 
             TypeSystem`Atom[Real], 
             TypeSystem`Atom[Real], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Real], 
             TypeSystem`Vector[TypeSystem`AnyType, 4], 
             TypeSystem`Vector[TypeSystem`AnyType, 4], 
             TypeSystem`Tuple[{
               TypeSystem`Atom[String], TypeSystem`AnyType, 
               TypeSystem`AnyType, TypeSystem`AnyType, TypeSystem`AnyType}], 
             TypeSystem`Atom[Integer]}], 
           Association["ID" -> 269105613078342]], "Configurations" -> 
         Dataset[
           Association[
           Association[
             "Value" -> "LinearRegression", "Options" -> 
              Association[
               "L1Regularization" -> Association["Value" -> 0], 
                "L2Regularization" -> Association["Value" -> 0.00001], 
                "OptimizationMethod" -> Association["Value" -> Automatic], 
                MaxIterations -> Association["Value" -> 30]]] -> 
            Association["Experiments" -> {
                Association[
                "MeanCrossEntropy" -> 
                 PlusMinus[1.341085874794058, 0.29781647156001995`], 
                 "StandardDeviation" -> 
                 PlusMinus[0.7096859175505484, 0.11086934446269812`], 
                 "EvaluationTime" -> 8.55625*^-6, "TestSize" -> 120, 
                 "TrainingSize" -> 10, "TrainingTime" -> 0.00625675, 
                 "TrainingMemory" -> 60024., "ModelMemory" -> 14904., 
                 "ExperimentCount" -> 3, "ModelUtility" -> 0.5901947326175043,
                  "MeanCrossEntropyHistory" -> {
                   PlusMinus[1.4487250855580371`, 0.026331100612476305`], 
                   PlusMinus[0.8850340341910701, 0.06373619246168337], 
                   PlusMinus[0.4220610490185479, 0.14621786921227253`]}, 
                 "StandardDeviationHistory" -> {
                   PlusMinus[0.8327445150565215, 0.09874553515438882], 
                   PlusMinus[0.6748094306017951, 0.10752963817389859`], 
                   PlusMinus[0.5205543050821874, 0.140330297910276]}], 
                Association[
                "MeanCrossEntropy" -> 
                 PlusMinus[0.08281971331954595, 0.11588490810632872`], 
                 "StandardDeviation" -> 
                 PlusMinus[0.7687767409794622, 0.14686841435523681`], 
                 "EvaluationTime" -> 0.000025285714285714282`, "TestSize" -> 
                 60, "TrainingSize" -> 40, "TrainingTime" -> 
                 0.005601285714285715, "TrainingMemory" -> 65100.57142857143, 
                 "ModelMemory" -> 14904., "ExperimentCount" -> 6, 
                 "ModelUtility" -> 0.5411759122589422, 
                 "MeanCrossEntropyHistory" -> {
                   PlusMinus[0.017387259159744317`, 0.17916152461756113`], 
                   PlusMinus[0., 0.2303048156284786], 
                   PlusMinus[0.30261704316117377`, 0.34761128727228263`], 
                   PlusMinus[0.015982324044097274`, 0.26278455785942684`], 
                   PlusMinus[0.09139543989723377, 0.23105218970558902`], 
                   PlusMinus[0.3202732343271999, 0.3028970415909145]}, 
                 "StandardDeviationHistory" -> {
                   PlusMinus[0.7605596113801513, 0.3669369295913735], 
                   PlusMinus[0.7539377681485749, 0.374359740153295], 
                   PlusMinus[0.7787032218788305, 0.34981417444770363`], 
                   PlusMinus[0.7636831288095947, 0.36385393587327963`], 
                   PlusMinus[0.7676917676800826, 0.3597484368078746], 
                   PlusMinus[0.7845824240104206, 0.34518433393102443`]}]}, 
              "PredictedPerformances" -> 
              Association[
               "EvaluationTime" -> 0.000025285714285714282`, "ModelMemory" -> 
                14904., "StandardDeviation" -> 
                PlusMinus[0.7687767409794622, 0.14686841435523681`], 
                "TrainingMemory" -> 65100.57142857143, "TrainingTime" -> 
                0.009057392857142858], "Index" -> 1], 
            Association[
             "Value" -> "LinearRegression", "Options" -> 
              Association[
               "L1Regularization" -> Association["Value" -> 0], 
                "L2Regularization" -> Association["Value" -> 1.*^6], 
                "OptimizationMethod" -> Association["Value" -> Automatic], 
                MaxIterations -> Association["Value" -> 30]]] -> 
            Association["Experiments" -> {
                Association[
                "MeanCrossEntropy" -> 
                 PlusMinus[2.5796665205171774`, 0.06047008680038738], 
                 "StandardDeviation" -> 
                 PlusMinus[1.6297630962061225`, 0.09573218267602708], 
                 "EvaluationTime" -> 8.0125*^-6, "TestSize" -> 120, 
                 "TrainingSize" -> 10, "TrainingTime" -> 0.005823999999999999,
                  "TrainingMemory" -> 59976., "ModelMemory" -> 14904., 
                 "ExperimentCount" -> 3, "ModelUtility" -> 
                 0.26195481476175675`, "MeanCrossEntropyHistory" -> {
                   PlusMinus[2.56859880074426, 0.04915920614319379], 
                   PlusMinus[2.685910390152306, 0.052536998419402], 
                   PlusMinus[2.50383967169599, 0.047285938312428825`]}, 
                 "StandardDeviationHistory" -> {
                   PlusMinus[1.6407024563058472`, 0.16665770746921005`], 
                   PlusMinus[1.5826117663529793`, 0.15760485208540426`], 
                   PlusMinus[1.6666911081819877`, 0.15667394557032743`]}], 
                Association[
                "MeanCrossEntropy" -> 
                 PlusMinus[1.896611229245926, 0.0784121034493254], 
                 "StandardDeviation" -> 
                 PlusMinus[1.631977722822274, 0.13480588018206568`], 
                 "EvaluationTime" -> 0.000026442857142857144`, "TestSize" -> 
                 60, "TrainingSize" -> 40, "TrainingTime" -> 
                 0.0071884285714285704`, "TrainingMemory" -> 67128., 
                 "ModelMemory" -> 14904., "ExperimentCount" -> 6, 
                 "ModelUtility" -> 0.26037112249553596`, 
                 "MeanCrossEntropyHistory" -> {
                   PlusMinus[1.89055387664106, 0.11390939669031329`], 
                   PlusMinus[1.839558963245907, 0.1597828112880903], 
                   PlusMinus[2.016354360716285, 0.23240906260151983`], 
                   PlusMinus[1.851602471134943, 0.14780944932847054`], 
                   PlusMinus[1.891538000467687, 0.14341434508859854`], 
                   PlusMinus[2.118817914548931, 0.28214230081651254`]}, 
                 "StandardDeviationHistory" -> {
                   PlusMinus[1.6011034253217955`, 0.17642532414215886`], 
                   PlusMinus[1.4786278070593974`, 0.33774157037071173`], 
                   PlusMinus[1.832536075004648, 0.3450117258653635], 
                   PlusMinus[1.5095695934423516`, 0.2936603935118558], 
                   PlusMinus[1.6032640915785392`, 0.24861692996874646`], 
                   PlusMinus[1.9736505640773467`, 0.367100174370906]}]}, 
              "PredictedPerformances" -> 
              Association[
               "EvaluationTime" -> 0.000026442857142857144`, "ModelMemory" -> 
                14904., "StandardDeviation" -> 
                PlusMinus[1.631977722822274, 0.13480588018206568`], 
                "TrainingMemory" -> 67128., "TrainingTime" -> 
                0.009418214285714285], "Index" -> 2], 
            Association[
             "Value" -> "LinearRegression", "Options" -> 
              Association[
               "L1Regularization" -> Association["Value" -> 0], 
                "L2Regularization" -> Association["Value" -> 1.], 
                "OptimizationMethod" -> Association["Value" -> Automatic], 
                MaxIterations -> Association["Value" -> 30]]] -> 
            Association["Experiments" -> {
                Association[
                "MeanCrossEntropy" -> 
                 PlusMinus[1.1248745669646576`, 0.12500695065423031`], 
                 "StandardDeviation" -> 
                 PlusMinus[0.7660909778019988, 0.08781196989855873], 
                 "EvaluationTime" -> 8.874999999999999*^-6, "TestSize" -> 160,
                  "TrainingSize" -> 10, "TrainingTime" -> 
                 0.006200400000000001, "TrainingMemory" -> 59976., 
                 "ModelMemory" -> 14904., "ExperimentCount" -> 4, 
                 "ModelUtility" -> 0.5511873060069213, 
                 "MeanCrossEntropyHistory" -> {
                   PlusMinus[1.4963766944511119`, 0.027214962627759406`], 
                   PlusMinus[0.8972589238499176, 0.021267445768054165`], 
                   PlusMinus[1.1431213539928278`, 0.09252329830066032], 
                   PlusMinus[1.1165698909290893`, 0.13122372859937617`]}, 
                 "StandardDeviationHistory" -> {
                   PlusMinus[0.8003873247413303, 0.11152703054103168`], 
                   PlusMinus[0.5423519626866319, 0.13322721903861004`], 
                   PlusMinus[0.8275732831970787, 0.09847933936854214], 
                   PlusMinus[0.8094924406751625, 0.11122247818052053`]}], 
                Association[
                "MeanCrossEntropy" -> 
                 PlusMinus[0.07748110023628678, 0.09712033225083923], 
                 "StandardDeviation" -> 
                 PlusMinus[0.7659296329695714, 0.13690872584031086`], 
                 "EvaluationTime" -> 0.000024237500000000003`, "TestSize" -> 
                 70, "TrainingSize" -> 40, "TrainingTime" -> 0.005685875, 
                 "TrainingMemory" -> 65116., "ModelMemory" -> 14904., 
                 "ExperimentCount" -> 7, "ModelUtility" -> 0.5444769810486546,
                  "MeanCrossEntropyHistory" -> {
                   PlusMinus[0., 0.18578163939122969`], 
                   PlusMinus[0., 0.21808995268503947`], 
                   PlusMinus[0.31532697647821095`, 0.25675148617579835`], 
                   PlusMinus[0.06716114973795617, 0.26441722619547836`], 
                   PlusMinus[0.021642279611603088`, 0.21582049515383295`], 
                   PlusMinus[0.23561294902405056`, 0.22077968616211013`], 
                   PlusMinus[0., 0.21789794426380685`]}, 
                 "StandardDeviationHistory" -> {
                   PlusMinus[0.7561352542680827, 0.37179162312985686`], 
                   PlusMinus[0.755596456566464, 0.3724510231813747], 
                   PlusMinus[0.7802087380816484, 0.3481526133325321], 
                   PlusMinus[0.7663383753330779, 0.3611947315560245], 
                   PlusMinus[0.7637052046589068, 0.36373379049695864`], 
                   PlusMinus[0.7774420539959225, 0.35080902114177287`], 
                   PlusMinus[0.7588088910323224, 0.36890121330443754`]}]}, 
              "PredictedPerformances" -> 
              Association[
               "EvaluationTime" -> 0.000024237500000000003`, "ModelMemory" -> 
                14904., "StandardDeviation" -> 
                PlusMinus[0.7659296329695714, 0.13690872584031086`], 
                "TrainingMemory" -> 65116., "TrainingTime" -> 
                0.009043337500000002], "Index" -> 3], 
            Association[
             "Value" -> "LinearRegression", "Options" -> 
              Association[
               "L1Regularization" -> Association["Value" -> 0], 
                "L2Regularization" -> Association["Value" -> 1000.], 
                "OptimizationMethod" -> Association["Value" -> Automatic], 
                MaxIterations -> Association["Value" -> 30]]] -> 
            Association["Experiments" -> {
                Association[
                "MeanCrossEntropy" -> 
                 PlusMinus[2.5638952152733765`, 0.06143831270093887], 
                 "StandardDeviation" -> 
                 PlusMinus[1.6184483780996228`, 0.0957509713032483], 
                 "EvaluationTime" -> 7.4625*^-6, "TestSize" -> 120, 
                 "TrainingSize" -> 10, "TrainingTime" -> 0.00604625, 
                 "TrainingMemory" -> 59944., "ModelMemory" -> 14904., 
                 "ExperimentCount" -> 3, "ModelUtility" -> 
                 0.26376414753657307`, "MeanCrossEntropyHistory" -> {
                   PlusMinus[2.55051435729751, 0.048642899703026765`], 
                   PlusMinus[2.673501487206932, 0.052117657345889586`], 
                   PlusMinus[2.4878662170462564`, 0.04681061575640676]}, 
                 "StandardDeviationHistory" -> {
                   PlusMinus[1.6326689205674383`, 0.166885497731676], 
                   PlusMinus[1.5663149836510448`, 0.15612573643876665`], 
                   PlusMinus[1.657471513651472, 0.15481356104821276`]}], 
                Association[
                "MeanCrossEntropy" -> 
                 PlusMinus[1.8636394308305568`, 0.0789204719656424], 
                 "StandardDeviation" -> 
                 PlusMinus[1.5902705083690778`, 0.13182239064185322`], 
                 "EvaluationTime" -> 0.000028328571428571426`, "TestSize" -> 
                 60, "TrainingSize" -> 40, "TrainingTime" -> 
                 0.005987142857142856, "TrainingMemory" -> 
                 65137.142857142855`, "ModelMemory" -> 14904., 
                 "ExperimentCount" -> 6, "ModelUtility" -> 
                 0.26718448260770183`, "MeanCrossEntropyHistory" -> {
                   PlusMinus[1.8570084144818944`, 0.1101799744554287], 
                   PlusMinus[1.8068180190650347`, 0.16062403106271392`], 
                   PlusMinus[1.987875469292374, 0.23167150453327925`], 
                   PlusMinus[1.816357497939848, 0.1463039087904611], 
                   PlusMinus[1.859482242072627, 0.14193921346890695`], 
                   PlusMinus[2.098083425540786, 0.28685493287774555`]}, 
                 "StandardDeviationHistory" -> {
                   PlusMinus[1.5574434916547983`, 0.17291366796922816`], 
                   PlusMinus[1.4426750641368007`, 0.33132520104628244`], 
                   PlusMinus[1.7846757375959514`, 0.331409817932642], 
                   PlusMinus[1.4685389686652721`, 0.2850446253617685], 
                   PlusMinus[1.561705586598759, 0.2427623923857135], 
                   PlusMinus[1.9278275360712593`, 0.3565441574235346]}]}, 
              "PredictedPerformances" -> 
              Association[
               "EvaluationTime" -> 0.000028328571428571426`, "ModelMemory" -> 
                14904., "StandardDeviation" -> 
                PlusMinus[1.5902705083690778`, 0.13182239064185322`], 
                "TrainingMemory" -> 65137.142857142855`, "TrainingTime" -> 
                0.009039821428571428], "Index" -> 4], 
            Association[
             "Value" -> "LinearRegression", "Options" -> 
              Association[
               "L1Regularization" -> Association["Value" -> 0], 
                "L2Regularization" -> Association["Value" -> 1.*^-6], 
                "OptimizationMethod" -> Association["Value" -> Automatic], 
                MaxIterations -> Association["Value" -> 30]]] -> 
            Association["Experiments" -> {
                Association[
                "MeanCrossEntropy" -> 
                 PlusMinus[1.3220764103517417`, 0.21276427231867565`], 
                 "StandardDeviation" -> 
                 PlusMinus[0.6959849932219615, 0.08524671312448685], 
                 "EvaluationTime" -> 7.2149999999999995`*^-6, "TestSize" -> 
                 160, "TrainingSize" -> 10, "TrainingTime" -> 0.0053004, 
                 "TrainingMemory" -> 59924.8, "ModelMemory" -> 14904., 
                 "ExperimentCount" -> 4, "ModelUtility" -> 0.6057769869379626,
                  "MeanCrossEntropyHistory" -> {
                   PlusMinus[1.4487403669394197`, 0.02633397008788894], 
                   PlusMinus[0.8850852830492881, 0.06374273745213181], 
                   PlusMinus[0.42204534855292747`, 0.1462155673353737], 
                   PlusMinus[0.8165188875804734, 0.12377134838215804`]}, 
                 "StandardDeviationHistory" -> {
                   PlusMinus[0.8327835150022387, 0.09874483115211588], 
                   PlusMinus[0.6748408449609504, 0.10752518662919447`], 
                   PlusMinus[0.5205517129154769, 0.1403311120990816], 
                   PlusMinus[0.6524507563421851, 0.11498741970797113`]}], 
                Association[
                "MeanCrossEntropy" -> 
                 PlusMinus[0.0828200120352277, 0.11588500159081919`], 
                 "StandardDeviation" -> 
                 PlusMinus[0.7687767802120754, 0.14686840089395137`], 
                 "EvaluationTime" -> 0.000024828571428571426`, "TestSize" -> 
                 60, "TrainingSize" -> 40, "TrainingTime" -> 
                 0.007157285714285715, "TrainingMemory" -> 69674.28571428571, 
                 "ModelMemory" -> 14904., "ExperimentCount" -> 6, 
                 "ModelUtility" -> 0.5411758877306067, 
                 "MeanCrossEntropyHistory" -> {
                   PlusMinus[0.01738809522305329, 0.1791614259077634], 
                   PlusMinus[0., 0.2303048706744891], 
                   PlusMinus[0.3026171388450414, 0.34761221128796815`], 
                   PlusMinus[0.015982033919412497`, 0.26278445727099886`], 
                   PlusMinus[0.09139647101501414, 0.2310523427702556], 
                   PlusMinus[0.3202746063333862, 0.30289787221767384`]}, 
                 "StandardDeviationHistory" -> {
                   PlusMinus[0.7605596773682234, 0.3669368591490853], 
                   PlusMinus[0.7539377631443273, 0.3743597460996307], 
                   PlusMinus[0.778703226860696, 0.34981417414180527`], 
                   PlusMinus[0.7636831143712645, 0.3638539504047177], 
                   PlusMinus[0.7676918238668389, 0.3597483817875024], 
                   PlusMinus[0.7845825373734198, 0.3451842448077574]}]}, 
              "PredictedPerformances" -> 
              Association[
               "EvaluationTime" -> 0.000024828571428571426`, "ModelMemory" -> 
                14904., "StandardDeviation" -> 
                PlusMinus[0.7687767802120754, 0.14686840089395137`], 
                "TrainingMemory" -> 69674.28571428571, "TrainingTime" -> 
                0.008879042857142857], "Index" -> 5], 
            Association[
             "Value" -> "LinearRegression", "Options" -> 
              Association[
               "L1Regularization" -> Association["Value" -> 0], 
                "L2Regularization" -> Association["Value" -> 10000.], 
                "OptimizationMethod" -> Association["Value" -> Automatic], 
                MaxIterations -> Association["Value" -> 30]]] -> 
            Association["Experiments" -> {
                Association[
                "MeanCrossEntropy" -> 
                 PlusMinus[2.5780798433807637`, 0.06056813269638718], 
                 "StandardDeviation" -> 
                 PlusMinus[1.628620845760507, 0.09572995268770007], 
                 "EvaluationTime" -> 7.1*^-6, "TestSize" -> 120, 
                 "TrainingSize" -> 10, "TrainingTime" -> 0.00526975, 
                 "TrainingMemory" -> 59976., "ModelMemory" -> 14904., 
                 "ExperimentCount" -> 3, "ModelUtility" -> 
                 0.26213647591834743`, "MeanCrossEntropyHistory" -> {
                   PlusMinus[2.5667752858001225`, 0.0491067064473743], 
                   PlusMinus[2.6846681374056978`, 0.052495008349796535`], 
                   PlusMinus[2.502231743262788, 0.04723786885767819]}, 
                 "StandardDeviationHistory" -> {
                   PlusMinus[1.6398857290129574`, 0.1666809135420818], 
                   PlusMinus[1.5809722640114832`, 0.15745617428648384`], 
                   PlusMinus[1.6657542870430635`, 0.15648439551119908`]}], 
                Association[
                "MeanCrossEntropy" -> 
                 PlusMinus[1.893262737992171, 0.07846062914390481], 
                 "StandardDeviation" -> 
                 PlusMinus[1.6276580930944222`, 0.13448904732670386`], 
                 "EvaluationTime" -> 0.000024771428571428567`, "TestSize" -> 
                 60, "TrainingSize" -> 40, "TrainingTime" -> 
                 0.005728857142857143, "TrainingMemory" -> 65109.71428571428, 
                 "ModelMemory" -> 14904., "ExperimentCount" -> 6, 
                 "ModelUtility" -> 0.26106085826477515`, 
                 "MeanCrossEntropyHistory" -> {
                   PlusMinus[1.887143048609816, 0.11352464457042702`], 
                   PlusMinus[1.8362341186013535`, 0.1598598521313926], 
                   PlusMinus[2.013462937925238, 0.2323322869829235], 
                   PlusMinus[1.8480169589927151`, 0.14765379602063233`], 
                   PlusMinus[1.8882842356811727`, 0.14325715255303414`], 
                   PlusMinus[2.1167118848860165`, 0.28261943087510044`]}, 
                 "StandardDeviationHistory" -> {
                   PlusMinus[1.5965813415767454`, 0.17601362062847417`], 
                   PlusMinus[1.4749093588515472`, 0.33708265239058444`], 
                   PlusMinus[1.8276001908277097`, 0.3435872412313936], 
                   PlusMinus[1.5053169924026266`, 0.2927522066151982], 
                   PlusMinus[1.5989723801603968`, 0.24798922842803628`], 
                   PlusMinus[1.9689439099515496`, 0.3660047414480336]}]}, 
              "PredictedPerformances" -> 
              Association[
               "EvaluationTime" -> 0.000024771428571428567`, "ModelMemory" -> 
                14904., "StandardDeviation" -> 
                PlusMinus[1.6276580930944222`, 0.13448904732670386`], 
                "TrainingMemory" -> 65109.71428571428, "TrainingTime" -> 
                0.008134178571428572], "Index" -> 6], 
            Association[
             "Value" -> "LinearRegression", "Options" -> 
              Association[
               "L1Regularization" -> Association["Value" -> 0], 
                "L2Regularization" -> Association["Value" -> 10.], 
                "OptimizationMethod" -> Association["Value" -> Automatic], 
                MaxIterations -> Association["Value" -> 30]]] -> 
            Association["Experiments" -> {
                Association[
                "MeanCrossEntropy" -> 
                 PlusMinus[1.9564838891539176`, 0.04195022722165816], 
                 "StandardDeviation" -> 
                 PlusMinus[1.1585288099852744`, 0.16375946061764785`], 
                 "EvaluationTime" -> 6.96875*^-6, "TestSize" -> 120, 
                 "TrainingSize" -> 10, "TrainingTime" -> 0.0053825, 
                 "TrainingMemory" -> 59912., "ModelMemory" -> 14904., 
                 "ExperimentCount" -> 3, "ModelUtility" -> 
                 0.36258439416870203`, "MeanCrossEntropyHistory" -> {
                   PlusMinus[1.9447772853164398`, 0.04484866889813929], 
                   PlusMinus[2.004077164760821, 0.030016706788224993`], 
                   PlusMinus[1.8788587941582995`, 0.040638795338832516`]}, 
                 "StandardDeviationHistory" -> {
                   PlusMinus[1.3462810056119334`, 0.15696184569221372`], 
                   PlusMinus[0.9076826958631231, 0.10567083964464676`], 
                   PlusMinus[1.3574681927720251`, 0.11576788795786892`]}], 
                Association[
                "MeanCrossEntropy" -> 
                 PlusMinus[0.6796222774150307, 0.10206478711041957`], 
                 "StandardDeviation" -> 
                 PlusMinus[0.8544040857636956, 0.12498731025362277`], 
                 "EvaluationTime" -> 0.00002507142857142857, "TestSize" -> 60,
                  "TrainingSize" -> 40, "TrainingTime" -> 
                 0.005474999999999998, "TrainingMemory" -> 
                 65091.428571428565`, "ModelMemory" -> 14904., 
                 "ExperimentCount" -> 6, "ModelUtility" -> 
                 0.49117469137190056`, "MeanCrossEntropyHistory" -> {
                   PlusMinus[0.6419719656242574, 0.12072066429764562`], 
                   PlusMinus[0.6374001922073934, 0.21663569313025582`], 
                   PlusMinus[0.9060327699642217, 0.23288042646674598`], 
                   PlusMinus[0.6353408362453528, 0.1669707718818114], 
                   PlusMinus[0.6344431544871735, 0.14379825150983863`], 
                   PlusMinus[1.046748367400428, 0.3451581963973532]}, 
                 "StandardDeviationHistory" -> {
                   PlusMinus[0.8223147309314001, 0.3164265722703053], 
                   PlusMinus[0.8234459235342627, 0.31964067803935303`], 
                   PlusMinus[0.8843838052843076, 0.2846019375667432], 
                   PlusMinus[0.8250664474176449, 0.3157178272370078], 
                   PlusMinus[0.8229081522144542, 0.3166386348806019], 
                   PlusMinus[0.9200567775201076, 0.27600313393382836`]}]}, 
              "PredictedPerformances" -> 
              Association[
               "EvaluationTime" -> 0.00002507142857142857, "ModelMemory" -> 
                14904., "StandardDeviation" -> 
                PlusMinus[0.8544040857636956, 0.12498731025362277`], 
                "TrainingMemory" -> 65091.428571428565`, "TrainingTime" -> 
                0.008119999999999999], "Index" -> 7], 
            Association[
             "Value" -> "LinearRegression", "Options" -> 
              Association[
               "L1Regularization" -> Association["Value" -> 0], 
                "L2Regularization" -> Association["Value" -> 0.0001], 
                "OptimizationMethod" -> Association["Value" -> Automatic], 
                MaxIterations -> Association["Value" -> 30]]] -> 
            Association["Experiments" -> {
                Association[
                "MeanCrossEntropy" -> 
                 PlusMinus[1.3220002059686866`, 0.2126912348188538], 
                 "StandardDeviation" -> 
                 PlusMinus[0.6957602811001751, 0.08517699904399882], 
                 "EvaluationTime" -> 6.980000000000001*^-6, "TestSize" -> 160,
                  "TrainingSize" -> 10, "TrainingTime" -> 0.005371, 
                 "TrainingMemory" -> 59937.600000000006`, "ModelMemory" -> 
                 14904., "ExperimentCount" -> 4, "ModelUtility" -> 
                 0.6059798105163977, "MeanCrossEntropyHistory" -> {
                   PlusMinus[1.4485724121040595`, 0.026302421048134593`], 
                   PlusMinus[0.8845229449380564, 0.06367098341417486], 
                   PlusMinus[0.42221863950774036`, 0.14624101037922124`], 
                   PlusMinus[0.8166343711395094, 0.12380479899772265`]}, 
                 "StandardDeviationHistory" -> {
                   PlusMinus[0.8323547516289956, 0.0987525906894856], 
                   PlusMinus[0.674496061532291, 0.10757409528909957`], 
                   PlusMinus[0.5205803263013666, 0.1403221271458053], 
                   PlusMinus[0.6524948276895913, 0.11498371119622369`]}], 
                Association[
                "MeanCrossEntropy" -> 
                 PlusMinus[0.08281684220450759, 0.11588394629804595`], 
                 "StandardDeviation" -> 
                 PlusMinus[0.7687763504261685, 0.14686854813605393`], 
                 "EvaluationTime" -> 0.000025657142857142855`, "TestSize" -> 
                 60, "TrainingSize" -> 40, "TrainingTime" -> 
                 0.005548428571428572, "TrainingMemory" -> 
                 65091.428571428565`, "ModelMemory" -> 14904., 
                 "ExperimentCount" -> 6, "ModelUtility" -> 0.5411761587261406,
                  "MeanCrossEntropyHistory" -> {
                   PlusMinus[0.01737882369666277, 0.17916254332971326`], 
                   PlusMinus[0., 0.2303041375059637], 
                   PlusMinus[0.30261592754233224`, 0.3476021364225891], 
                   PlusMinus[0.01598584961427052, 0.2627857040023392], 
                   PlusMinus[0.09138550849385324, 0.23105077520025538`], 
                   PlusMinus[0.32025939409079335`, 0.30288863272140826`]}, 
                 "StandardDeviationHistory" -> {
                   PlusMinus[0.7605589455859944, 0.3669376404593297], 
                   PlusMinus[0.7539378023941073, 0.37435969827364546`], 
                   PlusMinus[0.7787031638011225, 0.3498141853379364], 
                   PlusMinus[0.7636833042629116, 0.36385375903935435`], 
                   PlusMinus[0.7676912265076681, 0.35974896695105024`], 
                   PlusMinus[0.7845812804520687, 0.34518523268377993`]}]}, 
              "PredictedPerformances" -> 
              Association[
               "EvaluationTime" -> 0.000025657142857142855`, "ModelMemory" -> 
                14904., "StandardDeviation" -> 
                PlusMinus[0.7687763504261685, 0.14686854813605393`], 
                "TrainingMemory" -> 65091.428571428565`, "TrainingTime" -> 
                0.008145214285714287], "Index" -> 8], 
            Association[
             "Value" -> "LinearRegression", "Options" -> 
              Association[
               "L1Regularization" -> Association["Value" -> 0], 
                "L2Regularization" -> Association["Value" -> 0.001], 
                "OptimizationMethod" -> Association["Value" -> Automatic], 
                MaxIterations -> Association["Value" -> 30]]] -> 
            Association["Experiments" -> {
                Association[
                "MeanCrossEntropy" -> 
                 PlusMinus[1.3397648944155311`, 0.29692966011460853`], 
                 "StandardDeviation" -> 
                 PlusMinus[0.706700078941206, 0.10988258689039807`], 
                 "EvaluationTime" -> 6.943750000000001*^-6, "TestSize" -> 120,
                  "TrainingSize" -> 10, "TrainingTime" -> 0.00530075, 
                 "TrainingMemory" -> 59992., "ModelMemory" -> 14904., 
                 "ExperimentCount" -> 3, "ModelUtility" -> 0.5927729720586787,
                  "MeanCrossEntropyHistory" -> {
                   PlusMinus[1.4470692461496224`, 0.026020212207900573`], 
                   PlusMinus[0.879571010270285, 0.0630419310737181], 
                   PlusMinus[0.42379694860861145`, 0.1464712245580271]}, 
                 "StandardDeviationHistory" -> {
                   PlusMinus[0.8285053235212527, 0.09882645755071437], 
                   PlusMinus[0.6714519394679506, 0.10801010663015052`], 
                   PlusMinus[0.520841221049871, 0.14024027181003182`]}], 
                Association[
                "MeanCrossEntropy" -> 
                 PlusMinus[0.08278820159595077, 0.11587446302219676`], 
                 "StandardDeviation" -> 
                 PlusMinus[0.768772473174059, 0.1468698762369682], 
                 "EvaluationTime" -> 0.000023914285714285715`, "TestSize" -> 
                 60, "TrainingSize" -> 40, "TrainingTime" -> 
                 0.005668999999999999, "TrainingMemory" -> 65100.57142857143, 
                 "ModelMemory" -> 14904., "ExperimentCount" -> 6, 
                 "ModelUtility" -> 0.5411786085045064, 
                 "MeanCrossEntropyHistory" -> {
                   PlusMinus[0.017294830105980763`, 0.1791727533011173], 
                   PlusMinus[0., 0.23029747132821288`], 
                   PlusMinus[0.30260614565785515`, 0.3475115761541398], 
                   PlusMinus[0.016020638802418996`, 0.2627968529359238], 
                   PlusMinus[0.09128555864101383, 0.2310364645239794], 
                   PlusMinus[0.32012194180202524`, 0.30280440107916634`]}, 
                 "StandardDeviationHistory" -> {
                   PlusMinus[0.7605523154076465, 0.3669447201569234], 
                   PlusMinus[0.7539381778910402, 0.3743592421227433], 
                   PlusMinus[0.7787026553925291, 0.3498142335869211], 
                   PlusMinus[0.7636850355771319, 0.3638520136214105], 
                   PlusMinus[0.7676857802177531, 0.35975430216557946`], 
                   PlusMinus[0.784569923485005, 0.3451941520194568]}]}, 
              "PredictedPerformances" -> 
              Association[
               "EvaluationTime" -> 0.000023914285714285715`, "ModelMemory" -> 
                14904., "StandardDeviation" -> 
                PlusMinus[0.768772473174059, 0.1468698762369682], 
                "TrainingMemory" -> 65100.57142857143, "TrainingTime" -> 
                0.00813525], "Index" -> 9], 
            Association[
             "Value" -> "LinearRegression", "Options" -> 
              Association[
               "L1Regularization" -> Association["Value" -> 0], 
                "L2Regularization" -> Association["Value" -> 100000.], 
                "OptimizationMethod" -> Association["Value" -> Automatic], 
                MaxIterations -> Association["Value" -> 30]]] -> 
            Association["Experiments" -> {
                Association[
                "MeanCrossEntropy" -> 
                 PlusMinus[2.5795220576061197`, 0.060479018694910354`], 
                 "StandardDeviation" -> 
                 PlusMinus[1.6296590592007993`, 0.09573194215760662], 
                 "EvaluationTime" -> 6.89375*^-6, "TestSize" -> 120, 
                 "TrainingSize" -> 10, "TrainingTime" -> 0.005743, 
                 "TrainingMemory" -> 60024., "ModelMemory" -> 14904., 
                 "ExperimentCount" -> 3, "ModelUtility" -> 0.261971351630143, 
                 "MeanCrossEntropyHistory" -> {
                   PlusMinus[2.5684327361004877`, 0.04915442112121776], 
                   PlusMinus[2.685797342212652, 0.052533177132676245`], 
                   PlusMinus[2.503693265094039, 0.04728155943904749]}, 
                 "StandardDeviationHistory" -> {
                   PlusMinus[1.6406280147052805`, 0.16665982273736313`], 
                   PlusMinus[1.5824624934552656`, 0.15759131651173763`], 
                   PlusMinus[1.6666057255794513`, 0.15665666538518846`]}], 
                Association[
                "MeanCrossEntropy" -> 
                 PlusMinus[1.8963060501929807`, 0.07841649571478652], 
                 "StandardDeviation" -> 
                 PlusMinus[1.6315832441014226`, 0.13477687112554554`], 
                 "EvaluationTime" -> 0.00003084285714285714, "TestSize" -> 60,
                  "TrainingSize" -> 40, "TrainingTime" -> 
                 0.005819857142857143, "TrainingMemory" -> 65100.57142857143, 
                 "ModelMemory" -> 14904., "ExperimentCount" -> 6, 
                 "ModelUtility" -> 0.2604339607012816, 
                 "MeanCrossEntropyHistory" -> {
                   PlusMinus[1.8902429776584562`, 0.1138742752372826], 
                   PlusMinus[1.8392559442974705`, 0.1597897523559215], 
                   PlusMinus[2.016090842659569, 0.23240204767829775`], 
                   PlusMinus[1.851275629842652, 0.14779523838272357`], 
                   PlusMinus[1.89124147079824, 0.14339994908920048`], 
                   PlusMinus[2.1186259599692105`, 0.2821857686016476]}, 
                 "StandardDeviationHistory" -> {
                   PlusMinus[1.6006904493548983`, 0.176387273954184], 
                   PlusMinus[1.478288275901878, 0.3376814542785922], 
                   PlusMinus[1.8320855080420178`, 0.3448814921981766], 
                   PlusMinus[1.5091812025591684`, 0.2935773178437449], 
                   PlusMinus[1.6028722753593796`, 0.24855940861665493`], 
                   PlusMinus[1.9732211006807474`, 0.3670001152691956]}]}, 
              "PredictedPerformances" -> 
              Association[
               "EvaluationTime" -> 0.00003084285714285714, "ModelMemory" -> 
                14904., "StandardDeviation" -> 
                PlusMinus[1.6315832441014226`, 0.13477687112554554`], 
                "TrainingMemory" -> 65100.57142857143, "TrainingTime" -> 
                0.008652928571428572], "Index" -> 10], 
            Association[
             "Value" -> "LinearRegression", "Options" -> 
              Association[
               "L1Regularization" -> Association["Value" -> 0], 
                "L2Regularization" -> Association["Value" -> 100.], 
                "OptimizationMethod" -> Association["Value" -> Automatic], 
                MaxIterations -> Association["Value" -> 30]]] -> 
            Association["Experiments" -> {
                Association[
                "MeanCrossEntropy" -> 
                 PlusMinus[2.4424079870840183`, 0.06789513395140873], 
                 "StandardDeviation" -> 
                 PlusMinus[1.533052711649118, 0.09932515659047911], 
                 "EvaluationTime" -> 8.562500000000001*^-6, "TestSize" -> 120,
                  "TrainingSize" -> 10, "TrainingTime" -> 
                 0.005580750000000001, "TrainingMemory" -> 59976., 
                 "ModelMemory" -> 14904., "ExperimentCount" -> 3, 
                 "ModelUtility" -> 0.2781472443899445, 
                 "MeanCrossEntropyHistory" -> {
                   PlusMinus[2.414216445794575, 0.04515285468878397], 
                   PlusMinus[2.5726244108957323`, 0.048717098404610304`], 
                   PlusMinus[2.3652279066145327`, 0.04336685353321476]}, 
                 "StandardDeviationHistory" -> {
                   PlusMinus[1.575832127136367, 0.1682602284016317], 
                   PlusMinus[1.4401746904505897`, 0.14461946749364046`], 
                   PlusMinus[1.5922996123877124`, 0.14220572944996734`]}], 
                Association[
                "MeanCrossEntropy" -> 
                 PlusMinus[1.6241659357692915`, 0.08396834835291768], 
                 "StandardDeviation" -> 
                 PlusMinus[1.338512417060597, 0.11712443739538221`], 
                 "EvaluationTime" -> 0.00002411428571428572, "TestSize" -> 60,
                  "TrainingSize" -> 40, "TrainingTime" -> 
                 0.005421571428571428, "TrainingMemory" -> 65100.57142857143, 
                 "ModelMemory" -> 14904., "ExperimentCount" -> 6, 
                 "ModelUtility" -> 0.31715100453845085`, 
                 "MeanCrossEntropyHistory" -> {
                   PlusMinus[1.6155695379793438`, 0.08762841161104117], 
                   PlusMinus[1.5699658161350378`, 0.17110395000689355`], 
                   PlusMinus[1.7790761418828165`, 0.2275158618845431], 
                   PlusMinus[1.563616313540164, 0.13781330250942642`], 
                   PlusMinus[1.6252273950511353`, 0.13557468124296865`], 
                   PlusMinus[1.942900468454398, 0.32021331929623126`]}, 
                 "StandardDeviationHistory" -> {
                   PlusMinus[1.2924406547231904`, 0.176038058507466], 
                   PlusMinus[1.2224711489705145`, 0.29264068380344505`], 
                   PlusMinus[1.482766676448405, 0.259367353024902], 
                   PlusMinus[1.2221553207204845`, 0.24631388603524978`], 
                   PlusMinus[1.3032191580621697`, 0.22039002696485224`], 
                   PlusMinus[1.627525605624717, 0.294081345951792]}]}, 
              "PredictedPerformances" -> 
              Association[
               "EvaluationTime" -> 0.00002411428571428572, "ModelMemory" -> 
                14904., "StandardDeviation" -> 
                PlusMinus[1.338512417060597, 0.11712443739538221`], 
                "TrainingMemory" -> 65100.57142857143, "TrainingTime" -> 
                0.008291535714285715], "Index" -> 11], 
            Association[
             "Value" -> "LinearRegression", "Options" -> 
              Association[
               "L1Regularization" -> Association["Value" -> 0], 
                "L2Regularization" -> Association["Value" -> 0.01], 
                "OptimizationMethod" -> Association["Value" -> Automatic], 
                MaxIterations -> Association["Value" -> 30]]] -> 
            Association["Experiments" -> {
                Association[
                "MeanCrossEntropy" -> 
                 PlusMinus[1.3175647207935643`, 0.20621883334224003`], 
                 "StandardDeviation" -> 
                 PlusMinus[0.6770398226089743, 0.07942734620147084], 
                 "EvaluationTime" -> 7.150000000000001*^-6, "TestSize" -> 160,
                  "TrainingSize" -> 10, "TrainingTime" -> 0.0054462, 
                 "TrainingMemory" -> 59963.200000000004`, "ModelMemory" -> 
                 14904., "ExperimentCount" -> 4, "ModelUtility" -> 
                 0.6233569428934296, "MeanCrossEntropyHistory" -> {
                   PlusMinus[1.434114415154047, 0.023601811722073745`], 
                   PlusMinus[0.8421073448935428, 0.05844435912526723], 
                   PlusMinus[0.4397484725521387, 0.14864393416360944`], 
                   PlusMinus[0.8281086314115844, 0.12709018365932015`]}, 
                 "StandardDeviationHistory" -> {
                   PlusMinus[0.7943529961515017, 0.0998305199776209], 
                   PlusMinus[0.6479262441526353, 0.11164008568807778`], 
                   PlusMinus[0.5235089858262735, 0.13941011919698656`], 
                   PlusMinus[0.656863528771964, 0.11462401024061149`]}], 
                Association[
                "MeanCrossEntropy" -> 
                 PlusMinus[0.08250502626177492, 0.11577984298361092`], 
                 "StandardDeviation" -> 
                 PlusMinus[0.7687339551719025, 0.14688307273247392`], 
                 "EvaluationTime" -> 0.000024342857142857144`, "TestSize" -> 
                 60, "TrainingSize" -> 40, "TrainingTime" -> 
                 0.005626285714285713, "TrainingMemory" -> 65100.57142857143, 
                 "ModelMemory" -> 14904., "ExperimentCount" -> 6, 
                 "ModelUtility" -> 0.5412029367144238, 
                 "MeanCrossEntropyHistory" -> {
                   PlusMinus[0.01645967837714174, 0.1792744600227298], 
                   PlusMinus[0., 0.23023022817811442`], 
                   PlusMinus[0.30250986146348396`, 0.34660534199269444`], 
                   PlusMinus[0.016370088542495553`, 0.26290747272322934`], 
                   PlusMinus[0.09028948003974235, 0.23089323185983382`], 
                   PlusMinus[0.3187539938344247, 0.30196275516823645`]}, 
                 "StandardDeviationHistory" -> {
                   PlusMinus[0.7604863177434654, 0.36701522149354365`], 
                   PlusMinus[0.7539420401696164, 0.3743545577313623], 
                   PlusMinus[0.7786977324018639, 0.3498145819799689], 
                   PlusMinus[0.7637024261100863, 0.3638344815977717], 
                   PlusMinus[0.767631511396731, 0.3598074796784665], 
                   PlusMinus[0.7844569082084522, 0.3452829401160892]}]}, 
              "PredictedPerformances" -> 
              Association[
               "EvaluationTime" -> 0.000024342857142857144`, "ModelMemory" -> 
                14904., "StandardDeviation" -> 
                PlusMinus[0.7687339551719025, 0.14688307273247392`], 
                "TrainingMemory" -> 65100.57142857143, "TrainingTime" -> 
                0.008259342857142856], "Index" -> 12], 
            Association[
             "Value" -> "LinearRegression", "Options" -> 
              Association[
               "L1Regularization" -> Association["Value" -> 0], 
                "L2Regularization" -> Association["Value" -> 0.1], 
                "OptimizationMethod" -> Association["Value" -> Automatic], 
                MaxIterations -> Association["Value" -> 30]]] -> 
            Association["Experiments" -> {
                Association[
                "MeanCrossEntropy" -> 
                 PlusMinus[1.3141550417047827`, 0.17340640721085118`], 
                 "StandardDeviation" -> 
                 PlusMinus[0.629746120204327, 0.0675403596674445], 
                 "EvaluationTime" -> 6.915000000000001*^-6, "TestSize" -> 160,
                  "TrainingSize" -> 10, "TrainingTime" -> 
                 0.005246200000000001, "TrainingMemory" -> 
                 60027.200000000004`, "ModelMemory" -> 14904., 
                 "ExperimentCount" -> 4, "ModelUtility" -> 0.6714916077681171,
                  "MeanCrossEntropyHistory" -> {
                   PlusMinus[1.3918139947029136`, 0.016134610876641003`], 
                   PlusMinus[0.7519655600438631, 0.04718991605339349], 
                   PlusMinus[0.5923141922345181, 0.15867070797116825`], 
                   PlusMinus[0.9211456718112168, 0.15121247008886124`]}, 
                 "StandardDeviationHistory" -> {
                   PlusMinus[0.6597909379092963, 0.11180496522741455`], 
                   PlusMinus[0.5852097883060818, 0.12366324945622725`], 
                   PlusMinus[0.5537467012778264, 0.13086742929202555`], 
                   PlusMinus[0.6921037701790466, 0.11227999410323752`]}], 
                Association[
                "MeanCrossEntropy" -> 
                 PlusMinus[0.07999128103174193, 0.11485789690480408`], 
                 "StandardDeviation" -> 
                 PlusMinus[0.768374269364663, 0.14700649328256596`], 
                 "EvaluationTime" -> 0.000025642857142857145`, "TestSize" -> 
                 60, "TrainingSize" -> 40, "TrainingTime" -> 
                 0.005904857142857143, "TrainingMemory" -> 
                 65091.428571428565`, "ModelMemory" -> 14904., 
                 "ExperimentCount" -> 6, "ModelUtility" -> 0.541430197798977, 
                 "MeanCrossEntropyHistory" -> {
                   PlusMinus[0.008574628520630179, 0.1802537184888833], 
                   PlusMinus[0., 0.22949145725726197`], 
                   PlusMinus[0.301773660035271, 0.33755082788355883`], 
                   PlusMinus[0.020001888989195193`, 0.2639115423911425], 
                   PlusMinus[0.08068199568614531, 0.22947528145510007`], 
                   PlusMinus[0.3057064032392417, 0.29359506624138176`]}, 
                 "StandardDeviationHistory" -> {
                   PlusMinus[0.7598556030479836, 0.36769167514160805`], 
                   PlusMinus[0.7539925947384795, 0.37429402283067953`], 
                   PlusMinus[0.7786683335631709, 0.3498015684029039], 
                   PlusMinus[0.7638832587009687, 0.3636521781317881], 
                   PlusMinus[0.7671085076177933, 0.3603214978652488], 
                   PlusMinus[0.7833796572067945, 0.34613183155379706`]}]}, 
              "PredictedPerformances" -> 
              Association[
               "EvaluationTime" -> 0.000025642857142857145`, "ModelMemory" -> 
                14904., "StandardDeviation" -> 
                PlusMinus[0.768374269364663, 0.14700649328256596`], 
                "TrainingMemory" -> 65091.428571428565`, "TrainingTime" -> 
                0.008198628571428572], "Index" -> 13]], 
           TypeSystem`Assoc[
            TypeSystem`Struct[{"Value", "Options"}, {
              TypeSystem`Atom[
               TypeSystem`Enumeration["LinearRegression"]], 
              TypeSystem`Assoc[TypeSystem`AnyType, 
               TypeSystem`Struct[{"Value"}, {TypeSystem`AnyType}], 4]}], 
            
            TypeSystem`Struct[{
             "Experiments", "PredictedPerformances", "Index"}, {
              TypeSystem`Vector[
               
               TypeSystem`Struct[{
                "MeanCrossEntropy", "StandardDeviation", "EvaluationTime", 
                 "TestSize", "TrainingSize", "TrainingTime", "TrainingMemory",
                  "ModelMemory", "ExperimentCount", "ModelUtility", 
                 "MeanCrossEntropyHistory", "StandardDeviationHistory"}, {
                TypeSystem`AnyType, TypeSystem`AnyType, 
                 TypeSystem`Atom[Real], 
                 TypeSystem`Atom[Integer], 
                 TypeSystem`Atom[Integer], 
                 TypeSystem`Atom[Real], 
                 TypeSystem`Atom[Real], 
                 TypeSystem`Atom[Real], 
                 TypeSystem`Atom[Integer], 
                 TypeSystem`Atom[Real], 
                 TypeSystem`Vector[TypeSystem`AnyType, TypeSystem`AnyLength], 
                 
                 TypeSystem`Vector[
                 TypeSystem`AnyType, TypeSystem`AnyLength]}], 2], 
              
              TypeSystem`Struct[{
               "EvaluationTime", "ModelMemory", "StandardDeviation", 
                "TrainingMemory", "TrainingTime"}, {
                TypeSystem`Atom[Real], 
                TypeSystem`Atom[Real], TypeSystem`AnyType, 
                TypeSystem`Atom[Real], 
                TypeSystem`Atom[Real]}], 
              TypeSystem`Atom[Integer]}], 13], 
           Association["ID" -> 269101318111046]], "MaxTrainingSize" -> 50, 
         "LastReportingTime" -> 3.739703365598803`16.325412144357028*^9, 
         "PreprocessorEvaluationTime" -> 
         3.77099609375001728131526768095227`4.*^-6, "PreprocessorMemory" -> 
         72176, "RoundPartitioning" -> Dataset[{
            Association[
            "TrainingSizes" -> 10, "TimeBudgets" -> 0.7999999999999999, 
             "ElapsedTimes" -> 0.8558, "ExperimentCounts" -> 44], 
            Association[
            "TrainingSizes" -> 40, "TimeBudgets" -> 1., "ElapsedTimes" -> 
             0.9956710000000002, "ExperimentCounts" -> 79]}, 
           TypeSystem`Vector[
            
            TypeSystem`Struct[{
             "TrainingSizes", "TimeBudgets", "ElapsedTimes", 
              "ExperimentCounts"}, {
              TypeSystem`Atom[Integer], 
              TypeSystem`Atom[Real], 
              TypeSystem`Atom[Real], 
              TypeSystem`Atom[Integer]}], 2], 
           Association[
           "Origin" -> HoldComplete[GeneralUtilities`AssociationTranspose, 
              Dataset`DatasetHandle[269109908045638]], "ID" -> 
            269114203012934]]], "Log" -> 
       Association["Example" -> MachineLearning`MLDataset[
           Association[
           "f1" -> Association[
             "Type" -> "Numerical", "Weight" -> 1, 
              "Values" -> {-0.04439120677217234}, "ID" -> 
              6256679568790717639], "f2" -> 
            Association[
             "Type" -> "Numerical", "Weight" -> 1, 
              "Values" -> {0.9289025084482456}, "ID" -> 8623262771504601198], 
            "f3" -> Association[
             "Type" -> "Numerical", "Weight" -> 1, 
              "Values" -> {0.3586161208392409}, "ID" -> 4132395819933524331], 
            "f4" -> Association[
             "Type" -> "Numerical", "Weight" -> 1, 
              "Values" -> {-0.4432093379288915}, "ID" -> 8694373178801165222],
             "f5" -> Association[
             "Type" -> "Numerical", "Weight" -> 1, 
              "Values" -> {0.2719353855530362}, "ID" -> 1348181103987964274], 
            "f6" -> Association[
             "Type" -> "Numerical", "Weight" -> 1, 
              "Values" -> {-0.6671619527949235}, "ID" -> 157490378243617503], 
            "f7" -> Association[
             "Type" -> "Boolean", "Weight" -> 1, "Values" -> {1}, "ID" -> 
              939946895530328469], "f8" -> 
            Association[
             "Type" -> "Boolean", "Weight" -> 1, "Values" -> {0}, "ID" -> 
              3064004026125996483]], 
           Association[
           "ExampleNumber" -> 1, "ExampleWeights" -> 1, "RawExample" -> 
            False]], "TrainingTime" -> 2.498327, "MaxTrainingMemory" -> 
         757072, "DataMemory" -> 15648, "FunctionMemory" -> 293472, 
         "LanguageVersion" -> {11.3, 0}, "Date" -> 
         DateObject[{2018, 7, 4, 14, 29, 26.02112`8.16790096758186}, 
           "Instant", "Gregorian", -4.], "ProcessorCount" -> 4, 
         "ProcessorType" -> "x86-64", "OperatingSystem" -> "MacOSX", 
         "SystemWordLength" -> 64, "Evaluations" -> {}]]], "TestSet" -> 
    Association[
     "Input" -> {{-0.6167114229155501, 
         0.044070601991619274`, -0.3272191522584964, 
         0.7124684832137307, -0.6498032285315025, -0.39819893246047133`, 1, 
         1}, {0.13779796409962763`, -0.28279978068614664`, 
         0.5111195718767094, -0.19346139674718632`, 
         0.31511979265290657`, -0.6811027899936102, 0, 
         0}, {-0.9287889333347294, -0.7243015908589818, 0.45792158708027, 
         0.04154894326210279, -0.7441229732827654, 0.8388383929989329, 1, 
         0}, {-0.030366116185788883`, -0.37198089458160455`, 
         0.33808634007202754`, 0.7483715700436506, -0.6708491351359394, 
         0.022910592529758134`, 0, 1}, {
        0.20121992238479303`, 0.6629817775681421, -0.9486154486234066, 
         0.08855106988293304, 0.05949976405388435, -0.58697497953739, 1, 
         1}, {-0.2539330080575519, -0.3300398213037896, -0.1340103453661663, 
         0.02891431788567278, -0.7173758314561933, -0.2630732768122135, 1, 
         0}, {-0.47510025175886916`, 0.44617089036375956`, 
         0.11469933394340348`, -0.7470958276607553, 
         0.24802935481495592`, -0.27355161774834924`, 1, 0}, {
        0.37705056383509206`, 
         0.9391043074163337, -0.2895087720544014, -0.9351051577504137, \
-0.7028259307039462, -0.3969564958213585, 0, 
         1}, {-0.5954276833571543, -0.7644335366731014, -0.4794505107133835, \
-0.9000504754985257, 0.7237453926321313, 0.4444240077929207, 1, 1}, {
        0.2237638918282494, 0.9068701255366358, 
         0.6764693337363088, -0.1846461569127169, 
         0.6330475819171366, -0.6498054713813648, 0, 0}, {-0.6407148116426411,
          0.4829604575660471, -0.25915971138978344`, 0.4927113013728981, 
         0.817909760356784, 0.978874254517724, 1, 1}, {
        0.26167252680504527`, 0.7206508850612638, -0.14932430614958525`, 
         0.5689156467390433, 0.7560732166218544, 0.6917491779212517, 0, 
         0}, {-0.6134024138914422, 0.19250848032682555`, 
         0.023376162370095432`, 0.7144244436122897, 0.8789969751703821, 
         0.8983346920561783, 0, 0}, {-0.9214388248211636, 0.9623585493701978, 
         0.7443842955087634, 0.37062635284512524`, 0.2209458747381614, 
         0.23356809152718316`, 1, 1}, {-0.045353304738534383`, 
         0.8159548546833442, 0.6178169907775222, -0.35591766182145435`, 
         0.9171759562687054, 0.23068504986832838`, 1, 
         1}, {-0.3993892326026782, 0.7407159138503467, 0.5025976073069849, 
         0.4575586876086626, 0.6271419624066272, -0.75175259894556, 1, 
         0}, {-0.5694578849399354, 0.40006983555059916`, 0.6530095961175193, 
         0.433842548406699, -0.520358625173353, 0.20920837695116834`, 1, 1}, {
        0.17451387016913378`, 
         0.1632455388548788, -0.22521662855015379`, -0.13441998977267877`, 
         0.8085418071556467, 0.42105081199952776`, 1, 0}, {
        0.64401815085998, -0.5376968146709542, -0.8059729615738527, \
-0.33464336138812056`, -0.6585500037829481, -0.35212037357109693`, 0, 
         0}, {-0.9299172430260589, 0.6839083547101015, 0.469136329536314, 
         0.9746313934055193, 0.82449447523642, 0.9651590234694143, 0, 0}}, 
      "Output" -> {-0.5010139508969483, 0.5155306304403996, 2.425718000168079,
        2.6534195999630414`, -3.039653133270028, -0.9894829879688147, \
-1.8532904080037138`, -1.3352966513735884`, 
       0.3705804861803454, -0.5314106705551969, 0.7877464435862882, 
       0.028379200370587776`, 1.1735886039778536`, 1.3916146537774199`, 
       0.7999273698204084, -0.9727841203975702, 
       1.587538760359772, -0.6746887300318158, -1.4798677747331603`, 
       1.7562452161295217`}], 
    "Predictions" -> {-0.7960992246000629, 0.5269741785974451, 
     1.7896147671792069`, 
     2.492976240686537, -2.9692502393944684`, -1.0304453032851337`, \
-1.8018757361278044`, -1.6489894901127882`, -0.010273934669745938`, \
-0.2580562265461945, 0.7153275205206138, 0.4816213218084105, 
     1.4280596211016356`, 1.061900886731359, 
     0.9181639827621824, -1.0855133200942353`, 
     1.5162306407478376`, -0.5897917784535611, -1.5248846650169432`, 
     1.9597478974165135`}, "Distributions" -> {
      NormalDistribution[-0.7960992246000629, 0.19818719413654703`], 
      NormalDistribution[0.5269741785974451, 0.19818719413654703`], 
      NormalDistribution[1.7896147671792069`, 0.19818719413654703`], 
      NormalDistribution[2.492976240686537, 0.19818719413654703`], 
      NormalDistribution[-2.9692502393944684`, 0.19818719413654703`], 
      NormalDistribution[-1.0304453032851337`, 0.19818719413654703`], 
      NormalDistribution[-1.8018757361278044`, 0.19818719413654703`], 
      NormalDistribution[-1.6489894901127882`, 0.19818719413654703`], 
      NormalDistribution[-0.010273934669745938`, 0.19818719413654703`], 
      NormalDistribution[-0.2580562265461945, 0.19818719413654703`], 
      NormalDistribution[0.7153275205206138, 0.19818719413654703`], 
      NormalDistribution[0.4816213218084105, 0.19818719413654703`], 
      NormalDistribution[1.4280596211016356`, 0.19818719413654703`], 
      NormalDistribution[1.061900886731359, 0.19818719413654703`], 
      NormalDistribution[0.9181639827621824, 0.19818719413654703`], 
      NormalDistribution[-1.0855133200942353`, 0.19818719413654703`], 
      NormalDistribution[1.5162306407478376`, 0.19818719413654703`], 
      NormalDistribution[-0.5897917784535611, 0.19818719413654703`], 
      NormalDistribution[-1.5248846650169432`, 0.19818719413654703`], 
      NormalDistribution[1.9597478974165135`, 0.19818719413654703`]}, 
    "Modes" -> {-0.7960992246000629, 0.5269741785974451, 1.7896147671792069`, 
     2.492976240686537, -2.9692502393944684`, -1.0304453032851337`, \
-1.8018757361278044`, -1.6489894901127882`, -0.010273934669745938`, \
-0.2580562265461945, 0.7153275205206138, 0.4816213218084105, 
     1.4280596211016356`, 1.061900886731359, 
     0.9181639827621824, -1.0855133200942353`, 
     1.5162306407478376`, -0.5897917784535611, -1.5248846650169432`, 
     1.9597478974165135`}, "Weights" -> 
    SparseArray[Automatic, {20}, 1., {1, {{0, 0}, {}}, {}}], 
    "BatchEvaluationTime" -> 0.00243295, "SingleEvaluationTime" -> 
    0.0027201944444444444`2., "Version" -> {11.3, 0}]],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.739718054842402*^9},
 CellLabel->"Out[36]=",ExpressionUUID->"94fa116f-6a9d-49ad-a7ea-b963dd78b610"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"pm", " ", "/@", " ", 
  RowBox[{"{", 
   RowBox[{"\"\<ResidualPlot\>\"", ",", "\"\<StandardDeviation\>\""}], 
   "}"}]}]], "Input",
 CellLabel->"In[37]:=",ExpressionUUID->"8ae3e6a3-4a68-491f-9109-51e7da70b311"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   GraphicsBox[{{}, GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGCwAWIQ7fD8gMjSypf785pYI9Y+umQvZ3z38487D+wdatdy
bM9v3391kriE86I/9lWql7S+Rj2x11v4u23uR2aHA78qizI6j9jLbf/nwnaQ
/cADx719b1g37d936Z7ZlpoP+x9c87Vk/rnEPu7/w2XVV/7sd9hcLcMWvGr/
zW3bzzol/dr/5fN1hW7hK/YBOs7aDVyt+8uWtFq8jr9hX/4oyflf84X9gpz+
ixfXXdz/SCio69vjZ/YNO3VfcXdtss/16bN5dOme/b31+navGe/uN3o1lTv0
5jf7hKci5xw8L+xPWXPwRPffD/YadguOsktdte9rOZU3M/Gt/YaQY4YHXfbt
r7kqZO4c93H/hlgGpUu399hzeRTzVzv9sH+guWanveMmewGev4yT7z/a/4Gt
v+7c7q37Obenlb1N/bH/wWoh/RKe5fbJH2rmKET/t+cISrZI4Dm1HxZ+DFAA
Cz8YHxZ+MD4s/ODqoeEH48PCD8aHhR+MDws/GB8WfjA+LPxgfFj4wfiw8IPx
YeEH48PCD8aHhR+MDws/GB8WfjA+LPxgfFj4wfiw8IPxR9MfZekPAK2eq/8=

      "], {{{}, {}, {}, 
        {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.3], 
         LineBox[{22, 2}], LineBox[{25, 5}], LineBox[{27, 7}], 
         LineBox[{30, 10}], LineBox[{32, 12}], LineBox[{33, 13}], 
         LineBox[{35, 15}], LineBox[{38, 18}], LineBox[{40, 20}]}, 
        {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.3], 
         LineBox[{21, 1}], LineBox[{23, 3}], LineBox[{24, 4}], 
         LineBox[{26, 6}], LineBox[{28, 8}], LineBox[{29, 9}], 
         LineBox[{31, 11}], LineBox[{34, 14}], LineBox[{36, 16}], 
         LineBox[{37, 17}], LineBox[{39, 19}]}}, {{}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
         0.012833333333333334`], AbsoluteThickness[1.6], 
         PointBox[{41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55,
           56, 57, 58, 59, 60}]}, {}}}], {}, {}, {}, {}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->{True, False},
    AxesLabel->{None, None},
    AxesOrigin->{0, 0.},
    DisplayFunction->Identity,
    Frame->{{True, False}, {True, False}},
    FrameLabel->{{
       FormBox["\"actual value - predicted value\"", TraditionalForm], None}, {
       FormBox["\"predicted value\"", TraditionalForm], None}},
    FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
    GridLines->{None, None},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    ImagePadding->All,
    Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
          (Identity[#]& )[
           Part[#, 1]], 
          (Identity[#]& )[
           Part[#, 2]]}& ), "CopiedValueFunction" -> ({
          (Identity[#]& )[
           Part[#, 1]], 
          (Identity[#]& )[
           Part[#, 2]]}& )}},
    PlotRange->{{-2.9692502393944684`, 
     2.492976240686537}, {-0.667908394638316, 0.667908394638316}},
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {0, 0}},
    Ticks->{Automatic, Automatic}], ",", "0.25608486027718996`"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.739718071796795*^9},
 CellLabel->"Out[37]=",ExpressionUUID->"09328ea8-3c82-452d-a8b6-e4770080960c"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["NeuralNetwork", "Section",
 CellChangeTimes->{{3.7397176223262377`*^9, 
  3.739717629954794*^9}},ExpressionUUID->"6d513e21-1ff1-48ee-832f-\
2e561a48a3a5"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"network", " ", "=", " ", 
  RowBox[{"NetChain", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"LinearLayer", "[", "32", "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{"ElementwiseLayer", "[", "\"\<Sigmoid\>\"", "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"LinearLayer", "[", "20", "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{"LinearLayer", "[", "1", "]"}]}], "\[IndentingNewLine]", "}"}], 
    ",", "\[IndentingNewLine]", 
    RowBox[{"\"\<Input\>\"", "\[Rule]", "8"}], ",", "\[IndentingNewLine]", 
    RowBox[{"\"\<Output\>\"", "\[Rule]", "1"}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.739718110586678*^9, 3.7397182113335342`*^9}, {
  3.7397191796394243`*^9, 3.7397191853923798`*^9}, {3.739719246418309*^9, 
  3.739719436135602*^9}, {3.739719482794931*^9, 3.7397195176659822`*^9}, {
  3.739719626607998*^9, 3.7397196974488697`*^9}},
 CellLabel->
  "In[125]:=",ExpressionUUID->"807ceccd-e0e2-4903-a15c-942be07fa97e"],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["NetChain", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open = False}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"]], 
                ButtonFunction :> (Typeset`open = True), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              OverlayBox[{
                GraphicsBox[{
                  Thickness[0.014925373134328358`], {
                   GrayLevel[0.6], 
                   Thickness[0.018686567164179105`], 
                   Opacity[1.], 
                   JoinForm[{"Miter", 10.}], 
                   
                   JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 91.5}}},
                     CurveClosed -> {0}]}, {
                   GrayLevel[0.6], 
                   Thickness[0.018686567164179105`], 
                   Opacity[1.], 
                   JoinForm[{"Miter", 10.}], 
                   
                   JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 91.5}}},
                     CurveClosed -> {0}]}, {
                   FaceForm[{
                    GrayLevel[0.9], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 
                    79.5}}}]}, {
                   FaceForm[{
                    GrayLevel[0.6], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                    15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                    103.}, {23., 103.}}}]}, {
                   FaceForm[{
                    GrayLevel[0.9], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    29.5, 103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 
                    79.5}}}]}, {
                   FaceForm[{
                    GrayLevel[0.6], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                    29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                    103.}, {37., 103.}}}]}, {
                   FaceForm[{
                    GrayLevel[0.9], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    43.5, 103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 
                    79.5}}}]}, {
                   FaceForm[{
                    GrayLevel[0.6], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                    43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                    103.}, {51., 103.}}}]}, {
                   FaceForm[{
                    GrayLevel[0.6], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{28., 91.5}, {
                    25., 95.}, {25., 88.}}}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{42., 91.5}, {
                    39., 95.}, {39., 88.}}}]}}, ImageMargins -> 0, 
                 ImageSize -> {36, Automatic}, PlotRangePadding -> 0, 
                 BaseStyle -> GrayLevel[0.6]], 
                StyleBox["uninitialized", 
                 RGBColor[0.66, 0, 0], FontSize -> 8, FontFamily -> "Roboto", 
                 Background -> GrayLevel[1, 0.65]]}, Alignment -> {Center, 
                 Scaled[0.0001]}], 
              GridBox[{{
                 StyleBox[
                  TemplateBox[{
                    TemplateBox[{
                    StyleBox["\"Input\"", 
                    GrayLevel[0], StripOnInput -> False], "\" \"", 
                    "\"port\""}, "RowDefault"], "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox[
                  TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"8\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                  "SummaryItem"]}, {
                 StyleBox[
                  TemplateBox[{
                    TemplateBox[{
                    StyleBox["\"Output\"", 
                    GrayLevel[0], StripOnInput -> False], "\" \"", 
                    "\"port\""}, "RowDefault"], "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox[
                  TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"1\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                  "SummaryItem"]}, {
                 StyleBox[
                  
                  TemplateBox[{"\"Number of layers\"", "\":\""}, 
                   "RowDefault"], "SummaryItemAnnotation"], 
                 StyleBox["4", "SummaryItem"]}}, BaselinePosition -> {2, 1}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, BaselinePosition -> {1, 3}],
           True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"]], 
                ButtonFunction :> (Typeset`open = False), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              OverlayBox[{
                GraphicsBox[{
                  Thickness[0.014925373134328358`], {
                   GrayLevel[0.6], 
                   Thickness[0.018686567164179105`], 
                   Opacity[1.], 
                   JoinForm[{"Miter", 10.}], 
                   
                   JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 91.5}}},
                     CurveClosed -> {0}]}, {
                   GrayLevel[0.6], 
                   Thickness[0.018686567164179105`], 
                   Opacity[1.], 
                   JoinForm[{"Miter", 10.}], 
                   
                   JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 91.5}}},
                     CurveClosed -> {0}]}, {
                   FaceForm[{
                    GrayLevel[0.9], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 
                    79.5}}}]}, {
                   FaceForm[{
                    GrayLevel[0.6], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                    15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                    103.}, {23., 103.}}}]}, {
                   FaceForm[{
                    GrayLevel[0.9], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    29.5, 103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 
                    79.5}}}]}, {
                   FaceForm[{
                    GrayLevel[0.6], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                    29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                    103.}, {37., 103.}}}]}, {
                   FaceForm[{
                    GrayLevel[0.9], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    43.5, 103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 
                    79.5}}}]}, {
                   FaceForm[{
                    GrayLevel[0.6], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                    43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                    103.}, {51., 103.}}}]}, {
                   FaceForm[{
                    GrayLevel[0.6], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{28., 91.5}, {
                    25., 95.}, {25., 88.}}}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{42., 91.5}, {
                    39., 95.}, {39., 88.}}}]}}, ImageMargins -> 0, 
                 ImageSize -> {36, Automatic}, PlotRangePadding -> 0, 
                 BaseStyle -> GrayLevel[0.6]], 
                StyleBox["uninitialized", 
                 RGBColor[0.66, 0, 0], FontSize -> 8, FontFamily -> "Roboto", 
                 Background -> GrayLevel[1, 0.65]]}, Alignment -> {Center, 
                 Scaled[0.0001]}], 
              GridBox[{{
                 
                 DynamicModuleBox[{
                  NeuralNetworks`Private`NetChain`assoc3 = 
                   Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association[
                    "1" -> Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`TensorT[{32, 8}, NeuralNetworks`RealT], 
                    "Biases" -> NeuralNetworks`Nullable[
                    NeuralNetworks`TensorT[{32}, NeuralNetworks`RealT]]], 
                    "Parameters" -> 
                    Association[
                    "OutputDimensions" -> {32}, "$OutputSize" -> 32, 
                    "$InputSize" -> 8, "$InputDimensions" -> {8}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{8}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{32}, NeuralNetworks`RealT]]], "2" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[2], 
                    Association[
                    NeuralNetworks`Private`ScalarSymbol[2] -> {"Sigmoid", 
                    NeuralNetworks`Private`ScalarSymbol[1]}]]], 
                    "$Dimensions" -> {32}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{32}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{32}, NeuralNetworks`RealT]]], "3" -> 
                    Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`TensorT[{20, 32}, NeuralNetworks`RealT], 
                    "Biases" -> NeuralNetworks`Nullable[
                    NeuralNetworks`TensorT[{20}, NeuralNetworks`RealT]]], 
                    "Parameters" -> 
                    Association[
                    "OutputDimensions" -> {20}, "$OutputSize" -> 20, 
                    "$InputSize" -> 32, "$InputDimensions" -> {32}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{32}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{20}, NeuralNetworks`RealT]]], "4" -> 
                    Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`TensorT[{1, 20}, NeuralNetworks`RealT], 
                    "Biases" -> NeuralNetworks`Nullable[
                    NeuralNetworks`TensorT[{1}, NeuralNetworks`RealT]]], 
                    "Parameters" -> 
                    Association[
                    "OutputDimensions" -> {1}, "$OutputSize" -> 1, 
                    "$InputSize" -> 20, "$InputDimensions" -> {20}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{20}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{1}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "4", "Outputs", "Output"]}, "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{8}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{1}, NeuralNetworks`RealT]]], 
                   NeuralNetworks`Private`NetChain`opart, 
                   NeuralNetworks`Private`NetChain`part, 
                   NeuralNetworks`Private`NetChain`selected = Null}, 
                  DynamicBox[
                   GridBox[{{
                    NeuralNetworks`Private`NetChain`MouseClickBoxes[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    TagBox[
                    "\"\"", Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"Input\"", 
                    Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"8\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"1\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["LinearLayer", 
                    RGBColor[0.66, 0, 0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"32\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"2\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox[
                    RowBox[{"\"Sigmoid\"", "[", 
                    StyleBox["\"x\"", Italic, StripOnInput -> False], "]"}], 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"32\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"3\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["LinearLayer", 
                    RGBColor[0.66, 0, 0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"20\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"4\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "4"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["LinearLayer", 
                    RGBColor[0.66, 0, 0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "4"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"1\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "4"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    "\"\"", Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"Output\"", 
                    Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"1\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1.1}}}], "Grid"], 
                    If[
                    ListQ[
                    NeuralNetworks`Private`NetChain`part = MouseAnnotation[]],
                     If[NeuralNetworks`Private`NetChain`opart === 
                    NeuralNetworks`Private`NetChain`part, 
                    NeuralNetworks`Private`NetChain`selected = Null; 
                    NeuralNetworks`Private`NetChain`opart = Null, 
                    NeuralNetworks`Private`NetChain`selected = 
                    Part[NeuralNetworks`Private`NetChain`assoc3, 
                    Apply[Sequence, NeuralNetworks`Private`NetChain`part]]; 
                    NeuralNetworks`Private`NetChain`opart = 
                    NeuralNetworks`Private`NetChain`part; Null]; Null]]}, 
                    NeuralNetworks`Private`NetChain`fmtSelected[
                    NeuralNetworks`Private`NetChain`selected, 
                    NeuralNetworks`Private`NetChain`part, 
                    NeuralNetworks`Private`GetSharedArrays[
                    NeuralNetworks`Private`NetChain`assoc3]]}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridFrameMargins -> {{0, 0}, {0, 0}}], 
                   TrackedSymbols :> {
                    NeuralNetworks`Private`NetChain`selected}], 
                  Initialization :> {NetChain}]}}, BaselinePosition -> 
               Automatic, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open], ImageSize -> Automatic], BaselinePosition -> 
        Baseline, 
        BaseStyle -> {
         ShowStringCharacters -> False, NumberMarks -> False, PrintPrecision -> 
          3, ShowSyntaxStyles -> False}]], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("NetChain[<>]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.739719734976653*^9},
 CellLabel->
  "Out[125]=",ExpressionUUID->"a6ae3038-1b7e-4f50-beda-c974c7641cad"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"trainedNetwork", "=", 
  RowBox[{"NetTrain", "[", 
   RowBox[{"network", ",", 
    RowBox[{"Thread", "[", 
     RowBox[{"trainingData", "\[Rule]", 
      RowBox[{"Transpose", "[", 
       RowBox[{"{", "trainingResults", "}"}], "]"}]}], "]"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"ValidationSet", "\[Rule]", 
     RowBox[{"Thread", "[", 
      RowBox[{"testData", "\[Rule]", 
       RowBox[{"Transpose", "[", 
        RowBox[{"{", "testResults", "}"}], "]"}]}], "]"}]}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.7397181639609213`*^9, 3.739718166677147*^9}, {
  3.739718221873056*^9, 3.739718246883932*^9}, {3.739718361769885*^9, 
  3.739718444820704*^9}, {3.7397185183422337`*^9, 3.7397185218227777`*^9}},
 CellLabel->
  "In[126]:=",ExpressionUUID->"803b65db-2945-40e6-8bfe-7c28709c8241"],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["NetChain", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open = False}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"]], 
                ButtonFunction :> (Typeset`open = True), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              GraphicsBox[{
                Thickness[0.014925373134328358`], {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.018686567164179105`], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 91.5}}}, 
                  CurveClosed -> {0}]}, {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.018686567164179105`], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 91.5}}}, 
                  CurveClosed -> {0}]}, {
                 FaceForm[{
                   RGBColor[0.631, 0.8160000000000001, 0.498], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                  103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.40800000000000003`, 0.627, 0.196], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                  15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                  103.}, {23., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.38, 0.753, 0.89], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{29.5, 
                  103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.24300000000000002`, 0.608, 0.71], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                  29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                  103.}, {37., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.584, 0.51, 0.8390000000000001], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{43.5, 
                  103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.4, 0.396, 0.659], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                  43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                  103.}, {51., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.549, 0.549, 0.549], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{28., 91.5}, {25.,
                   95.}, {25., 88.}}}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{42., 91.5}, {39.,
                   95.}, {39., 88.}}}]}}, ImageMargins -> 0, 
               ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
              GridBox[{{
                 StyleBox[
                  TemplateBox[{
                    TemplateBox[{
                    StyleBox["\"Input\"", 
                    GrayLevel[0], StripOnInput -> False], "\" \"", 
                    "\"port\""}, "RowDefault"], "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox[
                  TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"8\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                  "SummaryItem"]}, {
                 StyleBox[
                  TemplateBox[{
                    TemplateBox[{
                    StyleBox["\"Output\"", 
                    GrayLevel[0], StripOnInput -> False], "\" \"", 
                    "\"port\""}, "RowDefault"], "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox[
                  TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"1\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                  "SummaryItem"]}, {
                 StyleBox[
                  
                  TemplateBox[{"\"Number of layers\"", "\":\""}, 
                   "RowDefault"], "SummaryItemAnnotation"], 
                 StyleBox["4", "SummaryItem"]}}, BaselinePosition -> {2, 1}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, BaselinePosition -> {1, 3}],
           True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"]], 
                ButtonFunction :> (Typeset`open = False), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              GraphicsBox[{
                Thickness[0.014925373134328358`], {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.018686567164179105`], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 91.5}}}, 
                  CurveClosed -> {0}]}, {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.018686567164179105`], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 91.5}}}, 
                  CurveClosed -> {0}]}, {
                 FaceForm[{
                   RGBColor[0.631, 0.8160000000000001, 0.498], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                  103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.40800000000000003`, 0.627, 0.196], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                  15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                  103.}, {23., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.38, 0.753, 0.89], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{29.5, 
                  103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.24300000000000002`, 0.608, 0.71], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                  29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                  103.}, {37., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.584, 0.51, 0.8390000000000001], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{43.5, 
                  103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.4, 0.396, 0.659], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                  43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                  103.}, {51., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.549, 0.549, 0.549], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{28., 91.5}, {25.,
                   95.}, {25., 88.}}}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{42., 91.5}, {39.,
                   95.}, {39., 88.}}}]}}, ImageMargins -> 0, 
               ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
              GridBox[{{
                 
                 DynamicModuleBox[{
                  NeuralNetworks`Private`NetChain`assoc3 = 
                   Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association[
                    "1" -> Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{32, 8}], "Biases" -> 
                    NeuralNetworks`Private`DummyRawArray[{32}]], "Parameters" -> 
                    Association[
                    "OutputDimensions" -> {32}, "$OutputSize" -> 32, 
                    "$InputSize" -> 8, "$InputDimensions" -> {8}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{8}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{32}, NeuralNetworks`RealT]]], "2" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[2], 
                    Association[
                    NeuralNetworks`Private`ScalarSymbol[2] -> {"Sigmoid", 
                    NeuralNetworks`Private`ScalarSymbol[1]}]]], 
                    "$Dimensions" -> {32}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{32}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{32}, NeuralNetworks`RealT]]], "3" -> 
                    Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{20, 32}], "Biases" -> 
                    NeuralNetworks`Private`DummyRawArray[{20}]], "Parameters" -> 
                    Association[
                    "OutputDimensions" -> {20}, "$OutputSize" -> 20, 
                    "$InputSize" -> 32, "$InputDimensions" -> {32}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{32}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{20}, NeuralNetworks`RealT]]], "4" -> 
                    Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{1, 20}], "Biases" -> 
                    NeuralNetworks`Private`DummyRawArray[{1}]], "Parameters" -> 
                    Association[
                    "OutputDimensions" -> {1}, "$OutputSize" -> 1, 
                    "$InputSize" -> 20, "$InputDimensions" -> {20}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{20}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{1}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "4", "Outputs", "Output"]}, "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{8}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{1}, NeuralNetworks`RealT]]], 
                   NeuralNetworks`Private`NetChain`opart, 
                   NeuralNetworks`Private`NetChain`part, 
                   NeuralNetworks`Private`NetChain`selected = Null}, 
                  DynamicBox[
                   GridBox[{{
                    NeuralNetworks`Private`NetChain`MouseClickBoxes[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    TagBox[
                    "\"\"", Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"Input\"", 
                    Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"8\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"1\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["LinearLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"32\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"2\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox[
                    RowBox[{"\"Sigmoid\"", "[", 
                    StyleBox["\"x\"", Italic, StripOnInput -> False], "]"}], 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"32\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"3\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["LinearLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"20\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"4\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "4"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["LinearLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "4"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"1\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "4"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    "\"\"", Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"Output\"", 
                    Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"1\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1.1}}}], "Grid"], 
                    If[
                    ListQ[
                    NeuralNetworks`Private`NetChain`part = MouseAnnotation[]],
                     If[NeuralNetworks`Private`NetChain`opart === 
                    NeuralNetworks`Private`NetChain`part, 
                    NeuralNetworks`Private`NetChain`selected = Null; 
                    NeuralNetworks`Private`NetChain`opart = Null, 
                    NeuralNetworks`Private`NetChain`selected = 
                    Part[NeuralNetworks`Private`NetChain`assoc3, 
                    Apply[Sequence, NeuralNetworks`Private`NetChain`part]]; 
                    NeuralNetworks`Private`NetChain`opart = 
                    NeuralNetworks`Private`NetChain`part; Null]; Null]]}, 
                    NeuralNetworks`Private`NetChain`fmtSelected[
                    NeuralNetworks`Private`NetChain`selected, 
                    NeuralNetworks`Private`NetChain`part, 
                    NeuralNetworks`Private`GetSharedArrays[
                    NeuralNetworks`Private`NetChain`assoc3]]}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridFrameMargins -> {{0, 0}, {0, 0}}], 
                   TrackedSymbols :> {
                    NeuralNetworks`Private`NetChain`selected}], 
                  Initialization :> {NetChain}]}}, BaselinePosition -> 
               Automatic, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open], ImageSize -> Automatic], BaselinePosition -> 
        Baseline, 
        BaseStyle -> {
         ShowStringCharacters -> False, NumberMarks -> False, PrintPrecision -> 
          3, ShowSyntaxStyles -> False}]], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("NetChain[<>]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.739719745188765*^9},
 CellLabel->
  "Out[126]=",ExpressionUUID->"3be0caae-032c-40f7-adf8-4db14ce2253f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"predictedTestResults", "=", 
  RowBox[{
   RowBox[{"Map", "[", 
    RowBox[{"trainedNetwork", ",", "testData"}], "]"}], 
   "\[LeftDoubleBracket]", 
   RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}]}]], "Input",
 CellChangeTimes->{{3.739718661118753*^9, 3.739718674808096*^9}, {
  3.739718794704632*^9, 3.7397188112759132`*^9}, {3.739719021554905*^9, 
  3.739719046729044*^9}},
 CellLabel->
  "In[123]:=",ExpressionUUID->"9a08e246-8f74-493c-bd49-96a677b85d76"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "0.9079099297523499`"}], ",", "0.5919840335845947`", ",", 
   "1.7394208908081055`", ",", "2.5416340827941895`", ",", 
   RowBox[{"-", "2.8631603717803955`"}], ",", 
   RowBox[{"-", "1.1789095401763916`"}], ",", 
   RowBox[{"-", "1.976555347442627`"}], ",", 
   RowBox[{"-", "1.7272307872772217`"}], ",", 
   RowBox[{"-", "0.04172295331954956`"}], ",", 
   RowBox[{"-", "0.31647825241088867`"}], ",", "0.6876722574234009`", ",", 
   "0.4742806553840637`", ",", "1.4456591606140137`", ",", 
   "1.078593134880066`", ",", "0.9483169317245483`", ",", 
   RowBox[{"-", "1.2426996231079102`"}], ",", "1.582540512084961`", ",", 
   RowBox[{"-", "0.7532302737236023`"}], ",", 
   RowBox[{"-", "1.5755000114440918`"}], ",", "1.9179878234863281`"}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.739718797744746*^9, 3.739718811923533*^9}, 
   3.739719047243208*^9, {3.739719203420803*^9, 3.739719262701404*^9}, {
   3.739719295855566*^9, 3.7397194483523397`*^9}, {3.73971951008816*^9, 
   3.739719530000822*^9}, 3.739719656864594*^9, 3.7397196874308863`*^9},
 CellLabel->
  "Out[123]=",ExpressionUUID->"096f48d7-4084-411e-9a78-2880f8ba3654"]
}, Open  ]],

Cell["StandardDeviation:", "Text",
 CellChangeTimes->{{3.73971914737335*^9, 
  3.7397191483610373`*^9}},ExpressionUUID->"3360d8f2-829b-4ed7-9afa-\
f3d749fc980a"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Sqrt", "@", 
  RowBox[{"Mean", "[", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"predictedTestResults", "-", "testResults"}], ")"}], "2"], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.739719079008553*^9, 3.739719122886141*^9}},
 CellLabel->
  "In[124]:=",ExpressionUUID->"fd67818f-9e05-4da1-8ba7-5ca5e525aa95"],

Cell[BoxData["0.28497013732401827`"], "Output",
 CellChangeTimes->{{3.7397191132329483`*^9, 3.7397191233883877`*^9}, {
  3.739719209250967*^9, 3.7397194484281473`*^9}, {3.739719510179358*^9, 
  3.739719530076449*^9}, {3.739719658445691*^9, 3.739719687490967*^9}},
 CellLabel->
  "Out[124]=",ExpressionUUID->"eec71b1c-4be5-4100-a50f-2cbaebb9e61f"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{808, 905},
WindowMargins->{{12, Automatic}, {Automatic, 24}},
FrontEndVersion->"11.3 for Mac OS X x86 (32-bit, 64-bit Kernel) (March 5, \
2018)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 160, 3, 98, "Title",ExpressionUUID->"7dcd12ee-cf7d-405e-aa2b-c12b75ab1a41"],
Cell[743, 27, 167, 3, 35, "Text",ExpressionUUID->"71b87c75-b15e-477f-a825-eec61692b7bf"],
Cell[CellGroupData[{
Cell[935, 34, 159, 3, 67, "Section",ExpressionUUID->"75f305c0-4f65-46d2-9c82-c0ea2f82ebcc"],
Cell[1097, 39, 436, 10, 30, "Input",ExpressionUUID->"d82bf695-3747-4279-be45-a11bd57cd6e1"],
Cell[1536, 51, 784, 21, 30, "Input",ExpressionUUID->"e943710f-eb94-48b1-845e-baf11516c1b4"],
Cell[2323, 74, 536, 13, 52, "Input",ExpressionUUID->"42373903-1a05-4ddf-85ab-d283c7e60db3"],
Cell[2862, 89, 778, 21, 30, "Input",ExpressionUUID->"c98be602-6cf5-4081-b86a-11ff0ad20319"],
Cell[3643, 112, 521, 12, 30, "Input",ExpressionUUID->"6067c29e-c338-4d62-8e91-f2aa31a7da0b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[4201, 129, 202, 4, 67, "Section",ExpressionUUID->"52a84126-f87a-4cf9-9a93-0bda75b7449c"],
Cell[CellGroupData[{
Cell[4428, 137, 462, 10, 30, "Input",ExpressionUUID->"844a9deb-aa60-4fec-b78d-83d2c870a50f"],
Cell[4893, 149, 82463, 1480, 63, "Output",ExpressionUUID->"3a37e342-c00c-4080-a897-a436416e2f8d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[87393, 1634, 431, 9, 30, "Input",ExpressionUUID->"82b54fb2-bb71-4f40-8b00-3978c2dde18f"],
Cell[87827, 1645, 91151, 1580, 62, "Output",ExpressionUUID->"94fa116f-6a9d-49ad-a7ea-b963dd78b610"]
}, Open  ]],
Cell[CellGroupData[{
Cell[179015, 3230, 234, 5, 30, "Input",ExpressionUUID->"8ae3e6a3-4a68-491f-9109-51e7da70b311"],
Cell[179252, 3237, 2854, 61, 164, "Output",ExpressionUUID->"09328ea8-3c82-452d-a8b6-e4770080960c"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[182155, 3304, 160, 3, 67, "Section",ExpressionUUID->"6d513e21-1ff1-48ee-832f-2e561a48a3a5"],
Cell[CellGroupData[{
Cell[182340, 3311, 1033, 20, 199, "Input",ExpressionUUID->"807ceccd-e0e2-4903-a15c-942be07fa97e"],
Cell[183376, 3333, 26650, 550, 70, "Output",ExpressionUUID->"a6ae3038-1b7e-4f50-beda-c974c7641cad"]
}, Open  ]],
Cell[CellGroupData[{
Cell[210063, 3888, 827, 19, 70, "Input",ExpressionUUID->"803b65db-2945-40e6-8bfe-7c28709c8241"],
Cell[210893, 3909, 25761, 526, 70, "Output",ExpressionUUID->"3be0caae-032c-40f7-adf8-4db14ce2253f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[236691, 4440, 490, 11, 70, "Input",ExpressionUUID->"9a08e246-8f74-493c-bd49-96a677b85d76"],
Cell[237184, 4453, 1185, 22, 70, "Output",ExpressionUUID->"096f48d7-4084-411e-9a78-2880f8ba3654"]
}, Open  ]],
Cell[238384, 4478, 161, 3, 70, "Text",ExpressionUUID->"3360d8f2-829b-4ed7-9afa-f3d749fc980a"],
Cell[CellGroupData[{
Cell[238570, 4485, 341, 9, 70, "Input",ExpressionUUID->"fd67818f-9e05-4da1-8ba7-5ca5e525aa95"],
Cell[238914, 4496, 346, 5, 70, "Output",ExpressionUUID->"eec71b1c-4be5-4100-a50f-2cbaebb9e61f"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

(* End of internal cache information *)

